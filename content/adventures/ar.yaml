adventures:
    default:
        name: "المقدمة"
        description: "وصف المستوى"
        default_save_name: "مقدمة"
        levels:
            1:
                story_text: |
                    ## مرحباً بكم في هيدي!
                    في المستوى الأول يمكنكم استخدام الأوامر `{print}` و `{ask}` و`{echo}`.
                    قم بكتابة الكود في مساحة البرمجة المخصصة، أو اضغط على الزر الأخضر الموجود في المثال التوضيحي وسيتم كتابة الكود عنك في الشاشة المخصصة!
                    جرب الكود بنفسك من خلال الضغط على الزر الأخضر "تشغيل البرنامج" الموجود تحت المساحة البرمجية.

                    بامكانك اظهار/طباعةالكلام على الشاشة من خلال استعمال الأمر `{print}` .     
                start_code: '{print} مرحبا أيها العالم!'
                story_text_2: "يمكنك أن تسأل عن معلومة معينة من خلال الأمر `{ask}` وتعيد ترديدها من خلال الأمر `{echo}`.\n"
                example_code_2: "```\n{ask} ما اسمك؟\n{echo} مرحبا\n```\n"
                example_code: "```\n{print} مرحبا!\n{print} أهلاً بكم في هيدي!\n```\n"
                story_text_3: "هيا بنا نبدأ! حسناً.. لا تعرف ما الذي تريد/تريدين صنعه بعد؟ لا مشكلة! في علامات التبويب التالية (بجانب المقدمة) أفكارٌ متنوعةٌ لبرامج يمكن كتابتها.\n"
            2:
                story_text: |
                    ## ا لمتغيرات
                    في المستوى الثاني نتعلم الأوامر الجديدة `{is}` و `{sleep}`.
                    يمكنك أن تعطي اسما لشيء ما باستخدام `{is}`. هذا ما يسمى ب "متغير". في المثال الموجود قمنا بانشاء متغير يسمى الاسم ومتغير آخر يسمى العمر. يمكنك أن تستخدم كلمة الاسم في أي مكان في البرنامج الخاص بك وسيتم استبدالها ب هيدي، كما في المثال التوضيحي: 

                    بهذا الشكل لم تعد الان بحاجة للأمر `{echo}`.
                start_code: '{print} مرحبا أيها العالم!'
                example_code: "```\nالاسم {is} هيدي\nالعمر {is} ١٥\n{print} الاسم وعمرها الان العمر سنة\n```\n"
                story_text_2: "الأمر `{print}` لا زال يعمل بنفس الطريقة، ولكن الأمر `{ask}` قد تغير ،عليك الان ان تحتفظ بالاجابة على `{ask}` في متغير من خلال اعطاء الاجابة اسما معينا كما في المثال التوضيحي:\n"
                example_code_2: "```\nالجواب {is} {ask} ما اسمك؟\n{print} مرحبا بك الجواب\n```\n"
                story_text_3: "لدينا أمر جديد اخر وهو `{sleep}` الذي يعلق عمل البرنامج لمدة ثانية واحدة. اذا كتبت رقما معينا بعد الأمر `{sleep}` فسيتم تعليق عمل البرنامج لعدد معين من الثواني مساوياً للرقم الذي تم تحديده.\n"
                example_code_3: "```\n{print} لوني المفضل هو ...\n{sleep} ٢\n{print} الأخضر!!\n```\n"
            3:
                story_text: |
                    ## انشاء قائمة!
                    في المستوى الثالث يمكنك أن تنشأ قائمة. يمكنك بعدها أن تجعل الحاسوب يختار لك شيئا من القائمة بشكل عشوائي - يمكنك القيام بذك من خلال الأمر `{at} {random}`.
                start_code: '{print} مرحبا أيها العالم!'
                example_code: "```\nالحيوانات هي كلب، قطة، جمل\n{print} الحيوانات {at} {random}\n```\n"
                story_text_2: بامكانك أن تضيف عنصرا الى القائمة من خلال الأمر `{add}` وأن تزيل عنصرا من خلال الأمر `{remove}`.
                example_code_2: "\n\n```\nحيواناتي {is} كلب، جمل، قط\n{add} حصان {to_list} حيواناتي\n{remove} قط {from} حيواناتي\n{print} حيواناتي {at} {random}\n```\n"
            4:
                start_code: '{print} "مرحبا أيها العالم"'
                story_text: |
                    ## "علامات الاقتباس"
                    هناك تغيير على `{print}` و `{ask}` في المستوى الرابع.

                    يجب عليك أن تضع الكلام الذي تريد الكمبيوتر ان يظهره على الشاشة بين علامات اقتباس.

                    هذا مفيد لإنه يمكنك من طباعة كل الكلمات التي تريدها حتى الكلمات التي قمت بتخزينها باستخدام الأمر `{is}`.

                    معظم لغات البرمجة تستخدم علامات الاقتباس عند طباعة الكلام على الشاشة باستخدام الكود، لذلك نحن نتقدم خطوة أخرى باتجاه البرمجة الحقيقية!
                #5:
                #    start_code: |-
                #        اسمي هو اسأل 'ما اسمك؟'
                #        اذا اسمي هو هيدي قول 'رائع!!' وإلا قول 'يا خسارة!'
                #    story_text: |-
                #        الأمر `اسأل` و الأمر `قول` لا يزالان يعملان بنفس الطريقة كما في المستوى الرابع.
                #        في المستوى الخامس لدينا شيء جديد: الأمر `اذا`! باستخدام الأمر `اذا` يمكنك أن تفحص شيئا ما وتختار ما بين خيارين مختلفين.
                #
                #        ## مثال من هيدي كود
                #        ```
                #        اسمي هو اسأل 'ما اسمك؟'
                #        اذا اسمي هو هيدي قول 'رائع!!' وإلا قول 'يا خسارة!'
                #        ```
                #
                #        في المثال السابق سيتم طباعة رائع!! على الشاشة اذا أجبت على سؤال ما اسمك بكلمة هيدي،  وإلا فسيتم طباعة يا خسارة! اذا أجبت على السؤال بأي اسم اخر.
                #
                #        يمكننا أن نستخدم الان الأمر `في` لنفحص وجود كلمة ما في قائمة.
                #
                #        ## مثال من هيدي كود
                #        ```
                #        الالوان_الجميلة هو أخضر ، أصفر
                #        لوني_المفضل هو اسأل 'ما لونك المفضل؟'
                #        !!اذا لوني_المفضل في الالوان_الجميلة قول 'هذا جميل!' وإلا قول 'يا خسارة'
                #        ```
                #        في المثال السابق سيتم طباعة هذا جميل! على الشاشة اذا أجبت على سؤال ما لونك المفضل بواحد من أخضر أو أصفر. اذا جبت أي اجابة أخرى سيتم طباعة يا خسارة!! على الشاشة.
                #
                #        #نصيحة
                #        أحيانا يصبح الكود طويلا عند استخدام الأمر `اذا`. لذلك يمكنك تقسيم الكود على سطرين بحيث يبدأ السطر الثاني مع الأمر `وإلا` كما في المثال التالي:
                #        ```
                #        اسمي هو اسأل 'ما اسمك؟'
                #        اذا اسمي هو هيدي قول 'هذا رائع!'
                #        وإلا قول 'يا خسارة!'
                #        ```
                #        ##المهمات تصبح أكثر صعوبة شيئا فشيئا
                #        في المستوى الخامس تصبح المهمات في علامات التبويب أكثر صعوبة شيئا فشيئا لذلك قم بتأديتهم من اليمين الى اليسار
                #    commands:
                #    -   name: قول
                #        explanation: يطبع محتوى ما بين علامات الاقتباس
                #        example: "مثال: قول 'اهلا بكم ومرحبا في هيدي'"
                #        demo_code: قول 'اهلا بكم ومرحبا في هيدي'
                #    -   name: اسأل
                #        explanation: اسأل عن شيء ما من خلال الأمر `اسأل`
                #        example: "مثال: لوني هو اسأل 'ما لونك المفضل؟'"
                #        demo_code: |-
                #            لوني هو اسأل 'ما هو لونك المفضل؟'
                #            قول لوني 'هو لوني المفضل'
                #    -   name: اذا
                #        explanation: يمكنك أن تفحص شيئا ما وتختار ما بين خيارين مختلفين من خلال الأمر `اذا`
                #        example: "مثال: اذا اللون هو اخضر قول 'هذا جميل' وإلا قول 'لا بأس'"
                #        demo_code: |-
                #            اللون هو اسأل 'ما لونك المفضل؟'
                #            اذا اللون هو اخضر قول 'هذا جميل!' وإلا قول 'لا بأس'
                #    -   name: اذا مع turtle
                #        explanation: يمكنك أن تفحص شيئا ما وتختار ما بين خيارين مختلفين من خلال الأمر `اذا`
                #        example: 'مثلا: اذا الجواب هو كثيرا تقدم 100 وإلا تقدم 5'
                #        demo_code: |-
                #            الجواب هو اسأل 'كم علي أن أمشي؟'
                #            اذا الجواب هو كثيرا تقدم 100 وإلا تقدم 5
                #    -   name: في
                #        explanation: نستخدم الأمر `في` لنفحص وجود كلمة ما في قائم
                #        example: "!مثال: اذا لوني_المفضل في الالوان_الجميلة قول 'هذا جميل!' وإلا قول 'يا خسارة'"
                #        demo_code: |-
                #            الالوان_الجميلة هو أخضر ، أصفر
                #            لوني_المفضل هو اسأل 'ما لونك المفضل؟'
                #             اذا لوني_المفضل في الالوان_الجميلة قول 'هذا جميل!' وإلا قول 'يا خسارة!!'
                example_code: "\n```\n{print} \"يجب عليك استعمال علامات الاقتباس من الان وصاعداً!\"\nالجواب {is} {ask} \"ما الذي يجب علينا استعماله من الان وصاعداً؟\"\n{print} \"يجب علينا استعمال \" الجواب \n```\n"
                story_text_2: "## المغامرات تزداد صعوبة مع الانتقال بين علامات التبويب\nالمغامرات تزداد صعوبة في علامات التبويب المتتالية.\nلذلك من الأفضل البدأ من اليمين مع القصة ومن ثم الانتقال الى اليسار واحدة تلو الأخرى حتى تتجاوز المزيد والمزيد من التحديات.\n"
            5:
                start_code: "اسمك {is} {ask} \"ما اسمك؟\"\n{if} اسمك {is} هيدي {print} \"واو هذا رائع!\" {else} {print} \"اه.. حسنا\""
                story_text: "## اذا .. وإلا\nفي المستوى الخامس لدينا شيء جديد: الأمر `{if}`! باستخدام الأمر `{if}` يمكنك أن تفحص شيئا ما وتقوم بالاختيار بين أمرين مختلفين بناء على نتيجة ذلك الفحص.\nهذا الكود يطبع واو هذا رائع! اذا ادخلت هيدي كإجابة على سؤال الاسم، بينما يطبع اه.. حسنا اذا أدخلت أي شيء اخر.\n`{ask}` و `{print}` لا يزالان يعملان كما في المستوى الرابع.\n"
                story_text_2: "يصبح الكود أحياناً طويلاأ جداً عند استخدام `{if}` ولا يمكن أن يحتويه سطر واحد. لذلك، يمكنك أن تقسم الكود بوجود `{if}` الى سطرين: السطر الأول يبدأ مع `{if}` على أن يبدأ السطر الثاني بالأمر `{else}` كما في المثال:\n"
                example_code_2: "```\nاسمك {is} {ask} \"ما اسمك؟\"\n{if} اسمك {is} هيدي {print} \"واو هذا رائع!\"\n{else} {print} \"اه.. حسنا\"\n```\n"
                example_code: "\n```\nاسمك {is} {ask} \"ما اسمك؟\"\n{if} اسمك {is} هيدي {print} \"واو هذا رائع!\" {else} {print} \"اه.. حسنا\"\n```\n"
                story_text_3: "## القوائم\nعندما نريد أن نفحص وجود عنصر معين في قائمة، يمكننا استخدام الأمر `{in}` مع الأمر `{if}`.\nهذا المثال البرمجي يطبع كلمة جميل! على الشاشة اذا أدخلت برتقالي أو وردي، بينما يطبع \"يا خسارة!\" على الشاشة اذا أدخلت أي كلمة أخرى.\n"
                example_code_3: "```\nالالوان_الجميلة {is} الأخضر، الأصفر\nاللون {is} {ask} \"ما لونك المفضل؟\"\n{if} اللون {in} الالوان_الجميلة {print} \"جميل!\"\n{else} {print} \"يا خسارة!\"\n```\n"
            6:
                start_code: "{print} \"٥ ضرب ٥ يساوي \" ٥*٥"
                story_text: "## ١+١\nفي هذا المستوى يمكنك أن تتعلم شيئاً جديداً: القيام بالعمليات الحسابية.\n\nعملية الجمع تتم بسهولة كما في الحساب: `٥+٥` على سبيل المثال. كذلك اشارة السالب للطرح تعمل جيداً بنفس الطريقة، `٥-٥`.\n\nعملية الضرب مختلفة بعض الشيء، لأنه لا يوجد اشارة الضرب المعروفة لديك في لوحة المفاتيح (يمكنك البحث الان!).\nلذلك نقوم بعملية الضرب من خلال اشارة الإجامة أو النجمة الصغيرة الموجودة في لوحة المفاتيح فوق الرقم ٨ عادة: `٥*٥` ونقرأها هكذا \"٥ ضرب ٥\" لتتذكرها بسهولة.\n"
                example_code: "\n```\n{print} \"٥ زائد ٥ تساوي \" ٥+٥\n{print}  \"٥ ناقص ٥ تساوي \" ٥-٥\n{print}  \"٥ ضرب ٥ تساوي \" ٥*٥\n```\n"
                story_text_2: "هنالك أيضا تغيير في كيفية تخزين/حفظ كلمة في متغير! يمكننا الان أن نستخدم  `=` بدلاً من `{is}`عند حفظ كلمة أو رقم معين كمتغير، كما في المثال:\n"
                example_code_2: "```\nالاسم = هيدي\nالاجابة = ٢٠ + ٤\n```\n"
            7:
                start_code: "{repeat} ٣ {times} {print} \"هيدي ممتعة!\""
                story_text: "## المستوى السابع! المستوى السابع!\nفي المستوى السابع أضفنا الأمر `{repeat}`. باستخدام الأمر `{repeat}` يمكننا أن نكرر تنفيذ سطر واحد من الكود عدة مرات.\n"
                example_code: "\n```\n{repeat} ٣ {times} {print} \"هيدي ممتعة!\"\n```\n"
            8:
                start_code: |
                    {repeat} ٥ {times}
                        {print} "مرحباً يا أصدقاء!"
                        {print} "سيتم تكرار كل هذا ٥ مرات"
                story_text: "## الإزاحة\n`{ask}` و `{print}` لا يزالان يعملان بنفس الطريقة التي تعرفونها. لكن هناك تغيير على الأوامر `{if}` و `{repeat}`!\nيمكننا الآن عند استخدام هذه الأوامر تنفيذ مجموعة من الأسطر البرمجية مع بعضهم (وليس سطر واحد فقط)، ولكن علينا *إزاحة* الكود.\nهذا يعني وضع اربع فراغات (باستخدام مفتاح المسافة على لوحة المفاتيح أربع مرات). يجب علينا أن نقوم بالإزاحة حتى لو كان الكود التابع يتكون من سطر واحد فقط.\n"
                example_code: |
                    ```
                    {repeat} ٥ {times}
                        {print} "مرحباً يا أصدقاء!"
                        {print} "سيتم تكرار كل هذا ٥ مرات"
                    ```
            9:
                start_code: |
                    {repeat} ٣ {times}
                        الطعام = {ask} "ماذا تريد أن تأكل؟"
                        {if} الطعام {is} بيتزا
                            {print} "لذيذ!"
                        {else}
                            {print} "البيتزا أفضل"
                story_text: "## كلّهم مع بعضهم البعض الان!\nفي هذا المستوى ليس بامكاننا فقط أن نستخدم أكثر من سطر برمجي واحد مع `{if}`و `{repeat}`، ولكن أيضاً يمكننا أن نستخدمهم مع بعضهم البعض!\nفي المثال التوضيحي يمكننا أن نرى الأمر `{if}` موجود داخل/ضمن الأمر `{repeat}`. من المسموح أيضاً أن نجمعهم مع بعضهم بطريقة عكسية، كذلك  يمكننا استخدام الأمر `{if}` داخل أمر `{if}`، و الأمر `{repeat}` داخل أمر `{repeat}` اخر.\nفلنجربها!\n"
                example_code: |
                    ```
                    {repeat} ٣ {times}
                        الطعام = {ask} "ماذا تريد أن تأكل؟"
                        {if} الطعام {is} بيتزا
                            {print} "لذيذ!"
                        {else}
                            {print} "البيتزا أفضل"
                    ```
            10:
                start_code: |
                    حيواناتي_المفضلة {is} الكلب، الزرافة، السلحفاة
                    {for} حيوان {in} حيواناتي_المفضلة
                        {print} "أنا أحب " حيوان
                story_text: "## لكل عنصر في قائمتك...\nفي هذا المستوى نتعلم أمراً جديداً وهو الأمر `{for}`. باستخدام الأمر`{for}`يمكننا المرور على كل العناصر الموجودة في قائمة. `{for}` تقوم بخلق مجموعة من الأوامر تختها كما في الأوامر `{repeat}`و`{if}` لذلك يجب علينا ان نستخدم الإزاحة (نضع الفراغات) للسطور البرمجية التي نريد كتابتها مع الأمر `{for}`."
                example_code: |
                    ```
                    حيواناتي_المفضلة {is} الكلب، الزرافة، السلحفاة
                    {for} حيوان {in} حيواناتي_المفضلة
                      {print} "أنا أحب " حيوان
                    ```
            11:
                story_text: |-
                    ##  دورات التكرار!

                    `{print}` لا زال يعمل بالطريقة نفسها، ولكن أضفنا شكلاً جديداً من الأمر `{for}`. بامكاننا الان أن نكتب `{for} دورة {in} {range} ١ {to} ٥` وأن نستخدم بعدها المتغير `دورة` في البرنامج.

                    فلنجرب الان ونرى ما سيحدث! تذكر أن تضع الإزاحة بعد استخدام الأوامر `{for}` و `{if}`(هذا يعني وضع اربع فراغات قبل بداية السطر الذي يكون ضمن هذه الأوامر)
                start_code: |
                    {for} دورة {in} {range} ١ {to} ٥
                        {print} دورة
                example_code: |
                    ```
                    {for} دورة {in} {range} ١ {to} ٥
                        {print} دورة
                    ```
            12:
                start_code: "{print} \"نستطيع الان كتابة الأرقام العشرية باستخدام النقطة كفاصل بين العدد الصحيح والكسور\"\n{print} ٢.٥ + ٢.٥"
                story_text: "## الأرقام والنصوص\n**الأرقام العشرية**\nالى الان لم تكن هيدي تسمح باستخدام الأرقام العشرية مثل ٢.٥ ولكن الان أصبح استخدامها ممكنا. انتبه الى أن الحاسوب يستعمل النقطة `.` كفاصل بين الأرقام الصحيحة والكسور."
                example_code: "\n```\n{print} \"اثنان ونصف زائد اثنان ونصف يساوي ...\"\n{print} ٢.٥ + ٢.٥\n```\n"
                story_text_2: "**كل النصوص يجب أن تكون بين علامات الاقتباس**\nابتداء من هذا المستوى (مستوى ١٢) يجب علينا أيضا أن نستعمل علامات الاقتباس عندما نخزن نصاً (كلمة أو اسم مثلاً) في متغير باستخدام `=`:\n"
                example_code_2: "```\nالاسم = \"هيدي\"\n{print} \"مرحباً \" الاسم\n```\n"
                story_text_3: "**كل العناصر النصية في القوائم تحتاج الى علامات الاقتباس أيضاً **\nالقائمة أيضا ممكن أن تحتوي على عناضر نصية (كلمات او اسماء مثلا)، وهي بحاجة الى علامات اقتباس. يجب علينا أن نضع علامات اقتباس لكل عنصر من عناصر القائمة. \nهذا يسمح لنا بحفظ أكثر من كلمة كعنصر واحد في القائمة، \"الرجل الحديدي\" مثلاً.\n"
                example_code_3: "```\nالابطال_الخارقون = \"سبايدرمان\"، \"باتمان\"، \"الرجل الحديدي\"\n{print} الابطال_الخارقون {at} {random}\n```\n"
                story_text_4: "**كل النصوص المستعملة في المقارنة مع الأمر `{if}` بحاجة الى علامات اقتباس أيضاً**\n"
                example_code_4: "```\nاسمك = {ask} \"ما اسمك؟\"\n{if} اسمك = \"هيدي\"\n    {print} \"مرحباً صديقي!\"\n```\n"
                story_text_5: "**الأرقام ليست بحاجة الى علامات اقتباس**\nلسنا بحاجة الى استعمال علامات الاقتباس عند تخزين الارقام في الكود باستخدام `=`:\n"
                example_code_5: "```\nالنتيجة = ٢٥\n{print} \" نتيجة الاختبار هو \" النتيجة\n```\n"
                story_text_6: "**استعمال العلامات الحسابية مع الكلمات**\nمن المسموح استعمال علامة الجمع + مع النصوص في هذا المستوى. على سبيل المثال:"
                example_code_6: "```\nأ = \"مرحباً \"\nب= \"أيها العالم!\"\n{print} أ + ب\n```\n"
            13:
                start_code: "اسمك = {ask} \"ما اسمك؟\"\nعمرك = {ask} \"ما عمرك؟\"\n{if} اسمك=\"هيدي\" {and} عمرك=٢\n    {print} \"أنت بالفعل هيدي الحقيقي!\""
                story_text: "## و ... أو ..؟\nسنتعلم الان عن استعمال الأوامر `{and}` و `{or}`! اذا كنا نريد فحص أمرين في نفس الوقت لسنا بحاجة الى استعمال الأمر \"اذا\" مرتين، بل يمكننا أن نستعمل `{and}` و `{or}`. اذا استعملنا الأمر `{and}` بين الفحصين: يجب أن يكون كلا الفحصين (على اليمين واليسار) صحيحين من أجل تنفيذ الكود المتضمن في الأمر \"اذا\". أما اذا استعملنا الأمر `{or}` بين الفحصين: عندها يكفي أن يكون فحص واحد منهم صحيحاً لتنفيذ الكود المتضمن في الأمر \"اذا\"."
                example_code: "```\nاسمك = {ask} \"ما اسمك؟\"\nعمرك = {ask} \"ما عمرك؟\"\n{if} اسمك=\"هيدي\" {and} عمرك=٢\n    {print} \"أنت بالفعل هيدي الحقيقي!\"\n```\n"
            14:
                story_text: "## كبير، أكبر، الأكبر! \nسنتعلم أشياء جديدة. ربما تكون تعرفهم من قبل من دراستك للحساب: علامتا الأصغر `<` والأكبر `>`.\nعلامة الأصغر `<` تستعمل لفحص ما اذا كان الرقم الأول أصغر من الرقم الثاني، مثلا `عمرك < ١٢` تفحص ما اذا كان المتغير `عمرك` أصغر/أقل من الرقم ١٢.\nعندما نريد فحص ما اذا كان الرقم الأول أصغر من أو مساوياً للرقم الثاني، يمكننا استعمال `<=`، مثلاً `عمرك <= ١١`.\nعلامة الأكبر `<` تستعمل لفحص ما اذا كان الرقم الأول أكبر من الرقم الثاني، مثلا `النقاط > ١٠` تفحص ما اذا كان المتغير `النقاط` أكبر/أكثر من الرقم ١٠.\nعندما نريد فحص ما اذا كان الرقم الأول أكبر من أو مساوياً للرقم الثاني، يمكننا استعمال `>=`، مثلاً `النقاط >= ١١`.\nنستعمل علامات المقارنة هذه عند القايام بفحص شيء معين مع الأمر `{if}`، هكذا:\n"
                start_code: "عمرك = {ask} \"ما عمرك؟\"\n{if} عمرك < ١٣\n    {print} \"أنت أصغر مني!\"\n{else}\n    {print} \"أنت أكبر مني!\""
                example_code: "\n```\nعمرك = {ask} \"ما عمرك؟\"\n{if} عمرك > ١٢\n    {print} \"أنت أكبر مني!\"\n```\n"
                story_text_2: "ابتداء من هذا المستوى (مستوى ١٤) يجب أن نستخدم علامتين مساواة متلاحقتين (==) عند فحص المساواة. هذا ما يحدث في أغلب لغات البرمجة الأخرى:\n"
                example_code_2: "```\nاسمك = {ask} \"ما اسمك؟\"\n{if} اسمك== \"هيدي\" \n    {print} \"أنت رائع!\"\n```\n"
                story_text_3: "يمكننا أيضاً فحص ما اذا كان شيء ما *لا يساوي* شيء اخر باستعمال العلامة `!=`، هكذا:\n"
                example_code_3: "```\nاسمك = {ask} \"ما اسمك؟\"\n{if} اسمك!= \"هيدي\" \n    {print} \"أنت لست هيدي!\"\n```\n"
            15:
                story_text: "## المزيد من دورات التكرار\nسنتعلم نوعا جديداً من دورات التكرار، التكرار باستخدام الأمر `{while}`! يستمر تنفيذ الكود طالما لا تزال نتيجة الفحص الذي نقوم به صالحة/صحيحة. \nلذلك يجب علينا ألا ننسى أن نغير قيمة المتغير الذي نفحصه في داخل دورة التكرار. \n\nفي المثال التوضيحي، يستمر الكود في التنفيذ (سؤال نتيجة الضرب) حتى نحصل على اجابة صحيحة.\nاذا لم يتم اعطاء اجابة صحيحة فتستمر دورة التكرار (والبرنامج ككل) في التتنفيذ الى الأبد!"
                start_code: |-
                    الاجابة = ٠
                    {while} الاجابة != ٢٥
                        الاجابة = {ask} "ما ناتج ٥ ضرب ٥؟"
                    {print} "تم الاجابة بشكل صحيح"
                example_code: "## مثال ثوضيحي\n```\nالاجابة = ٠ \n{while} الاجابة != ٢٥\n    الاجابة = {ask} \"ما ناتج ٥ ضرب ٥؟\"\n{print} \"تم الاجابة بشكل صحيح\"\n```\n"
            16:
                start_code: "الفاكهة = [\"تفاح\"، \"موز\"، \"كرز\"]\n{print} الفاكهة"
                story_text: "## المزيد والمزيد من البرمجة الحقيقية\nسنتعلم الان كيفية كتابة القائمة باستخدام طريقة لغة البرمجة بايثون (python) عن طريق احاطة القائمة بالأقواس المربعة (أو المعقوفتان)! نستمر بوضع علامات الاقتباس حول كل عنصر نصي (كلمة اواسم مثلا) كما في المستويات السابقة. \nيمكننا استخدام الأقواس المربعة أيضا للاشارة الى مكان محدد في القائمة."
                example_code: |
                    ```
                    صديقي = ["أحمد"، "علاء"، "سامر"]
                    رقم_الحظ = [١٥، ١٨، ٦]
                    {for} ن {in} {range} ١ {to} ٣
                        {print} "رقم الحظ ل" صديقي[ن]
                        {print} " هو ... " رقم_الحظ[ن]
                    ```

            17:
                start_code: |-
                    {for} ن {in} {range} ١ {to} ١٠:
                        {print} ن
                    {print} "يجب أن تكون مستعداً الان! أنا قـــــادم :)"
                story_text: "## وإلا اذا\nالان سنقوم بتغيير جديد يتعلق بالإزاحة. كل مرة نقوم فيها بالإزاحة يجب علينا أن نستخدم `:` في السطر الذي يسبق الإزاحة.\n\nأيضاً بمقدورنا في هذا المستوى أن نستخدم أمراً جديداً: `{elif}`. نحتاج أن نستعمل `{elif}`عندما نريد أن نختار بين ٣ خيارات (أو أكثر). \nفلنجربها الان!"
                example_code: "\n```\nالجوائز = [\"مليون دولار\"، \"فطيرة التفاح\"، \"لا شيء\"]\nجائزتك = الجوائز[{random}]\n{print} \"لقد فزت بجائزة \" جائزتك\n{if} جائزتك == \"مليون دولار\":\n    {print} \"واو لقد صرت غنياً!\"\n{elif} جائزتك == \"فطيرة التفاح\":\n    {print} \"هذا لذيذ! أنا أحب فطيرة التفاح.\"\n{else}:\n    {print} \"حظاً أفضل المرة القادمة!\"\n```\n"
            18:
                start_code: "اسمي = \"هيدي\"\n{print} (\" أنا اسمي هو \"، اسمي)"
                story_text: "## المستوى الأخير!\nلقد وصلنا الى كود البايثون python الحقيقي! هذا يعني أننا بحاجة الى استخدام الأقواس الدائرية مع الأوامر {print} و {range} من الآن وصاعداً."
                example_code: "\n```\n{print}(\" اسمي هو هيدي!\")\n```\n"
                story_text_2: اذا أردنا أن نطبع عدة أشياء على الشاشة نحتاج عندها أن نضع الفاصلة فيما بينهم.
                example_code_2: "```\nدرجة_الحرارة = ٢٥\n{print}(\"الحرارة في الخارج الان \"، درجة_الحرارة، \" درجة مئوية\")\n```\n"
                story_text_3: "## ادخال المعلومات\nالتغيير الأخير الذي نحتاجه للوصول الى كود البايثون python هو استعمال `{input}` بدلاً من `{ask}`."
                example_code_3: "```\n{print} (\"اسمي هو هيدي!\")\nاسمك = {input} (\"ما اسمك؟\")\n{print} (\"اه حسناً، اسمك هو \"، اسمك)\n```\n"
    story:
        description: قصة
        levels:
            1:
                start_code: '{print} تبدأ قصتك هنا'
                story_text: "## اكتب قصة\nفي المستوى ١ يمكنك سرد قصة من تأليفك بشخصية رئيسية من اختيارك انت.\n\nفي السطر الاول استخدم `{ask}` لتسأل من سيأخذ دور الشحصية الرئيسية في القصة؟\n\nوبعد ذلك السطر، يمكنك استخدام `{print}` اذا اردت ان تطبع جملة معينة.\nو استخدم `{echo}` اذا اردت ان تنهي جملتك بالشخصية الرئيسية في القصة.\n"

                example_code: "```\n{ask} الشخصية الرئيسية في القصة هو\n{print} يتجول الان الشخصية الرئيسية في الغابة\n{echo} إنه خائف قليلاً، \n{print} لقد سمع ضوضاء رهيبة في المكان من حوله\n{print} إنه خائف من أن تكون هذه الغابة مسكونة\n```\n"
                story_text_2: "## تحدي\nهل يمكنك الان سرد قصة من تأليفك انت في هيدي بإستخدام `{print}` ، `{ask}`، `{echo}`؟\n"
            9:
                story_text: "## Story\nIn this level you can use nesting to put {if}, {repeat} or {for} commands inside other {if}, {repeat} or {for} commands. This gives you many options and really helps you to make your story interactive.\n"
                story_text_2: "The example above is pretty straightforward, but with nesting you can really elaborate your code and turn your story into a real game. Check out this example!\n"
                example_code: "```\n{print} 'Robin is walking downtown'\nlocation = {ask} 'Is Robin going into a shop, or does she go home?'\n{if} location {is} shop\n    {print} 'She enters the shop.'\n    {print} 'Robin sees an interesting looking book'\n    book = {ask} 'Does Robin buy the book?'\n    {if} book {is} yes\n        {print} 'Robin buys the book and goes home'\n    {else}\n        {print} 'Robin leaves the shop and goes home'\n{else}\n    {print} 'Robin goes home'\n```\n"
                example_code_2: "## Elaborate code\n```\nsword = lost\ngame = on\n{print} 'Our hero is walking through the forest'\n{print} 'The path splits two ways'\n{repeat} 2 {times}\n    {if} game {is} on\n        path = {ask} 'Which path should she choose?'\n        {if} path {is} left\n            {if} sword {is} found\n                {print} 'Our hero comes across a dragon!'\n                {print} 'Luckily our hero has a sword to defeat the beast!'\n                game = over\n            {else}\n                {print} 'Our hero finds a dragon, but she doesnt have any weapons!'\n                {print} 'Our hero is beaten by the dragon...'\n                {print} 'Try again'\n                game = over\n        {if} path {is} right\n            {if} sword {is} lost\n                {print} 'Our hero finds a sword'\n                {print} 'This could come in very handy'\n                sword = found\n            {else}\n                {print} 'You have already found the sword. There is nothing left here.'\n                {print} 'She walks back'\n```\n"
                start_code: '# place your code here'
            8:
                story_text: "## Story\nIn this level you can use multiple lines in your {if} commands, this way you can upgrade your happy or sad ending!\n"
                example_code: "```\n{print} 'OH NO! The T-rex is closing in!'\nend = {ask} 'Do you want a happy or a sad ending?'\n{if} end {is} happy\n    {print} 'Just in time Richard jumps back into the time machine!'\n    {print} 'Michael types in the code and...'\n    {print} '\U0001F4A5ZAP!\U0001F4A5'\n    {print} 'They are back in their garage'\n{else}\n    {print} 'Michael yells COME ON RICHARD! RUN FASTER!'\n    {print} 'But Richard is too slow...'\n    {print} 'The T-rex closes in and eats him in one big bite!\U0001F996'\n```\n"
                start_code: '# place your code here'
            7:
                start_code: "{repeat} 5 {times} {print} 'Help!'"
                story_text: "## Story\nIn a story, someone says words several times. For example, when someone calls for help or sings a song.\nYou can put such repetitions in your story, in this level with `{repeat}`.\n"
                example_code: "```\n{print} 'The prince kept calling for help'\n{repeat} 5 {times} {print} 'Help!'\n{print} 'Why is nobody helping me?'\n```\n"
            3:
                story_text: |
                    ## قصة
                    في المستوى الثالث يمكنك جعل القصة أكثر متعة. يمكنك إستخدام الطريقة العشوائية لأي وحش أو حيوان أو حتى عائق، مثل:

                example_code: |
                    ```
                    الحيوانات هي 🦔, 🐿, 🦉, 🦇
                    {print} هو الآن يسمع صوت الحيوانات {at} {random}
                    ```
                story_text_2: |
                    الأمر `{add}` يمكن أن يكون مفيداً أيضاً في قصتك.

                example_code_2: |
                    ```
                    {print} إنه يسمع صوت
                    الحيوانات هي 🐿, 🦔, 🦇, 🦉
                    الحيوان {is} {ask} برأيك ماذا ممكن أن يكون؟
                    {add} الحيوان {to_list} الحيوانات
                    {print} إنه حيوان {at} {random}
                    ```
                story_text_3: |
                    هذا مثال لإستخدام الأمر `{remove}` في قصتك

                    ## تحدي
                    هل يمكنك إستخدام الأوامر الثلاثة الجُدد `{at} {random}` ، `{add} {to}` ، `{remove} {from}` في قصتك؟
                example_code_3: |
                    ```
                    {print} حقيبة الظهر خاصته أصبحت ثقيلة للغاية.
                    {print} كان داخلها زجاجة ماء و مصباح و طوبة.
                    حقيبة {is} ماء، مصباح، طوبة
                    النفاية هي {ask} ما الذي عليه التخلص منه؟
                    {remove} النفاية {from} حقيبة
                    ```
                start_code: "{print} قصتك"
            13:
                story_text: "## Story\nBy using the `{and}` and `{or}` commands, you can shorten your stories. For example, check out the dragon story.\n"
                example_code: "```\nsword = 'lost'\ngame = 'on'\n{print} 'Our hero is walking through the forest'\n{print} 'The path splits two ways'\n{for} i {in} {range} 0 {to} 2\n    {if} game {is} 'on'\n        path = {ask} 'Which path should she choose?'\n        {if} path {is} 'left' {and} sword {is} 'found'\n            {print} 'Our hero comes across a dragon!'\n            {print} 'Luckily our hero has a sword to defeat the beast!'\n            game = 'over'\n        {if} path {is} 'left' {and} sword {is} 'lost'\n            {print} 'Our hero finds a dragon, but she doesnt have any weapons!'\n            {print} 'Our hero is beaten by the dragon...'\n            {print} 'Try again'\n            game = 'over'\n        {if} path {is} 'right' {and} sword {is} 'found'\n            {print} 'You have already found the sword. There is nothing left here.'\n            {print} 'She walks back'\n        {if} path {is} 'right' {and} sword {is} 'lost'\n            {print} 'Our hero finds a sword'\n            {print} 'This could come in very handy'\n            sword = 'found'\n```\n"
                start_code: '# place your code here'
            2:
                story_text: "## القصة\nفي المستوى الثاني يمكنك أن تجعل القصة الخاصة بك ممتعة أكثر.ستكون قادرًا على استخدام اسم الشخصية الرئيسية في أي مكانٍ تريده في قصتك.\n\nلتتمكن من فعل ذلك، ستحتاج إلى إضافة بعض الأسطر البرمجية، ولكن أولًا يجب أن تختار اسمًا للشخصية الرئيسية، بعد ذلك ضع الاسم في الجملة التي تشاء.\n\n## تحدي\nهل تستطيع أن تصنع قصة باستخدام المتغيرات لوحدك؟ أو أن تضيف متغيرات جديدة للقصة؟\n"
                example_code: "```\nالاسم {is} {ask} الشخصية الرئيسية في القصة هو\n{print} الاسم يتجول الآن في الغابة\n{print} الاسم خائفٌ قليلًا\n{print} لقد سمع ضوضاء رهيبة في المكان من حوله\n{sleep}\n{print} الاسم خائفٌ من أن تكون هذه الغابة مسكونة\n```"
                start_code: '{print} قصتك'
            12:
                story_text: "## Story\nIn this level you can use the quotation marks to save multiple words in a variable.\n"
                example_code: "\n```\nname = 'The Queen of England'\n{print} name ' was eating a piece of cake, when suddenly...'\n```\n"
                start_code: '# place your code here'
            10:
                story_text: "## Story\nIn this level you can use the {for} command in your story. In this way you could easily program the children's book 'brown bear, brown bear, what do you see'.\n"
                example_code: "```\nanimals = red bird, black sheep, green frog, yellow duck, little child\n{print} 'brown bear'\n{print} 'brown bear'\n{print} 'What do you see?'\n{for} animal {in} animals\n    {print} 'I see a ' animal ' looking at me'\n    {print} animal\n    {print} animal\n    {print} 'What do you see?'\n{print} 'I see all the animals looking at me!'\n```\n"
                start_code: '# place your code here'
            5:
                example_code: "```\nاسمك {is} {ask} 'من يمشي في الغابة؟'\n{print} اسمك 'يمشي عبر الغابة'\n{print} اسمك 'واجه وحش'\nنهاية {is} {ask} ' هل تريد نهاية جيدة او سيئة؟'\n{if} نهاية {is} جيدة {print} اسمك 'يأخذ السيف ويهرب الوحش بسرعة'\n{else} {print} 'الوحش يأكل' اسمك\n```\n"
                start_code: "{print} 'هنا قصتك سوف تبدأ!'"
                story_text: "## قصة\nفي هذا المستوى تستطيع برمجة نهايات مختلفة، والتي ستجعل قصتك اكثر متعة\n\nفكر في نهايتين لقصتك، على سبيل المثال:\n\n- الأميرة تمشي عبر الغابة\n- واجهت وحشًا\n\n- نهاية سعيدة: تأخذ سيفها والوحش يهرب بسرعة.\n- نهاية سيئة : الوحش يأكل الأميرة.\n\nيمكنك أيضًا التأكد من إمكانية إدخال الاسم مرة أخرى. هذا يعمل تمامًا كما في المستويات السابقة. يمكنك دمج ذلك مع \"{if}\" ، وبعد ذلك تكون قد أنشأت بالفعل برنامجًا كاملاً!\n"
            4:
                story_text: "## قصة\nربما لاحظت أنه لا زال هناك مشكلة في المستويات السابقة عند محاولة طباعة جملة تحتوي على كلمة -الاسم-؟ مثل: `{print}` الاسم هو الاسم.\nستتمكن من حل هذه المشكلة في هذا المستوى. يجب أن تضع علامات الاقتباس حول أي نص تريد طباعته.\n"
                example_code: "```\nالاسم {is} حسن  \n{print} _الاسم الأول للشخصية الرئيسية في القصة هو_ الاسم\n{print} الاسم _ذاهبٌ الآن للسير في الغابة_\n{print} الاسم _خائفٌ قليلًا_\nالحيوانات {is} \U0001F994, \U0001F43F, \U0001F989, \U0001F987\n{print} _لقد سمع صوت_ الحيوانات {at} {random}\n{print} الاسم _خائفٌ أن تكون هذه الغابة مسكونة_\n```\n"
                start_code: "{print} 'Your story will be printed here!'"
            15:
                example_code: "```\nkeys = 'lost'\n{print} 'You are standing in your garden and you have lost your keys.'\n{print} 'Where do you want to look for them?'\n{print} 'You can choose: tree, flowerbed, rock, postbox'\n{while} keys == 'lost'\n    location = {ask} 'Where do you want to look?'\n    {if} location == 'flowerbed'\n        {print} 'Here they are!'\n        keys = 'found'\n    {else}\n        {print} 'Nope they are not at the ' location\n{print} 'Now you can enter the house!'\n"
                story_text: "## Story\nUsing the `{while}` loop can make your stories more interesting. For example, you can use `{while} game {is} 'on'` so you can play until the game is over.\nOr you can use `{while} sword {is} 'lost'` so the player can't continu the game until they have found something.\n"
                start_code: '# place your code here'
        name: قصة
        default_save_name: قصة
    parrot:
        name: الببغاء
        description: اصنع ببغاء الكتروني خاص بك، سيقوم بنسخ كل ما تقول!
        default_save_name: الببغاء
        levels:
            1:
                story_text: "## الببغاء\n اصنع ببغاء الكتروني خاص بك، سيقوم بنسخ كل ما تقول!\n"
                example_code: "```\n{print} انا الببغاء هيدي\n{ask} ما اسمك؟\n{echo}\n{echo}\n```\n"
                start_code: '{print} انا الببغاء هيدي'
                story_text_2: "## Challenge\nCan you make the parrot ask a different question? Fill in the blanks in the example!\n"
                example_code_2: "```\n{print} Im Hedy the parrot\n{ask} _\n{echo}\n{echo}\n"
            2:
                story_text: "## الببغاء\nاصنع ببغاء إلكتروني خاص بك، سيقوم بنسخ كل ما تقول!\n"
                example_code: "```\n{print}  أنا الببغاء هيدي\nالاسم {is} {ask} ما اسمك؟\n{print}  الاسم\n{sleep}\n{print}  سلام!\n{sleep}\n{print}  الاسم\n```\n"
                start_code: '{print} أنا الببغاء هيدي'
                story_text_2: "## تحدي\nبإمكانك استخدام المتغيرات لتجعل الببغاء يقول أي شيء تريده, هل تستطيع إكمال هذا الكود؟\n"
                example_code_2: "```\n{print} أنا الببغاء هيدي\nالاسم١ {is} {ask} ما اسمك؟\n{print}  الاسم١\n{sleep}\n{print}  الاسم١\nالاسم٢ {is} {ask} ما اسم عائلتك؟\n_\n{sleep}\n_\n```\n"
            5:
                story_text: "## الببغاء\nكافئ الببغاء {if} قال الكلمةالصحيحة!\n"
                example_code: "```\nالكلمات {is} نعيق, هيدي\n{print} 'درب ببغاءك!'\nالكلمة_الجديدة {is} {ask} 'ما هي الكلمة التي تريده ان يتعلمها؟'\n{add} الكلمة_الجديدة {to_list} الكلمات\nالكلمة_التي_قالها {is} الكلمات {at} {random}\n{print} '\U0001F9D2 قل ' الكلمة_الجديدة ', هيدي!'\n{print} '\U0001F99C ' الكلمة_التي_قالها'\n_ الكلمة_التي_قالها{is} الكلمة_الجديدة {print} '\U0001F9D2 هيدي، عمل رائع! \U0001F36A'\n__ {print} '\U0001F9D2 لا, هيدي! قل ' الكلمة_الجديدة\n```\n"
                start_code: '# place your code here'
            3:
                story_text: "## الببغاء\nعلّم الببغاء كلمة جديدة من خلال الأمر `{add}`.\n"
                example_code: "```\nكلمات {is} نعيق، هيدي\n{print} درِب ببغاءك!\nكلمة_جديدة {is} {ask} ما الكلمة الجديدة التي تريد أن يتعلمها؟\n{add} كلمة_جديدة {to_list} كلمات\n{print} \U0001F9D2 تكلم كلمة_جديدة أيها الببغاء هيدي!\n{print} \U0001F99C كلمات {at} {random}\n```\n"
                start_code: '# اكتب الكود الخاص بك هنا'
    songs:
        name: غنّ أغنية!
        description: Print a song
        levels:
            8:
                story_text: "## Songs\nIn a previous level you've programmed the song 'Bottles of beer'. You made one verse and then had to copy the verses 99 times. In level 7 you can repeat the song 99 times, just by adding one simple line!\n"
                example_code: "```\nverse = 99\n{repeat} 99 {times}\n    {print} verse ' bottles of beer on the wall'\n    {print} verse ' bottles of beer'\n    {print} 'Take one down, pass it around'\n    verse = verse - 1\n    {print} verse ' bottles of beer on the wall'\n```\n"
                start_code: '# place your code here'
            7:
                start_code: "{print} 'Baby Shark'"
                story_text: "## أغاني\nعادة ما تحتوي الأغاني على الكثير من التكرار. على سبيل المثال... بيبي شارك! اذا غنيتها فأنت فعلياً تقوم بتكرار غناء نفس المقطع:\n\nبيبي شارك توتوتودوتودو <br>\nبيبي شارك توتوتودوتودو <br>\nبيبي شارك توتوتودوتودو <br>\nبيبي شارك\n\nيمكنك أن تصنع هذه الأغنية بعدد قليل من الأوامر البرمجية باستعمال `{repeat}`! هل يمكنك إكمال الكود؟\n"
                example_code: "```\n{repeat} _ _ {print} 'Baby Shark tututudutudu'\n{print} 'Baby Shark'\n```\n\nAfter Baby Shark you can of course also program other songs. There are many songs with repetition.\n"
            6:
                start_code: "{print} 'هيا نغني!'"
                example_code: "```\nالكوبليه= ٩٩\n{print} الكوبليه 'طيري طيري يا عصفورة'\n{print} الكوبليه ' أنا متلك حلوة وصغيرة'\n{print} 'بركض فوق حفاف الزهر، بحجر على ماية النهر'\nالكوبليه= الكوبليه - ١\n{print} الكوبليه 'طيري طيري يا عصفورة'\n{sleep}\n```\n"
                story_text: "## الأغاني\nعادةً ما تحتوي الأغاني على الكثير من التكرارات. في بعض الأحيان هذا التكرار يكون مبني على عدد معين.\nعلى سبيل المثال، الأغنية المشهورة \"العصفورة الطائرة\". يمكنك برمجة هذه الأغنية مع إستخدام بسيط للحساب.\n\nملحوظة: يمكنك إستخدام خاصية القراءة بصوت لتجعل هيدي تغني لك الأغنية!\n\n## تحدي\nيمكنك الآن تكرار الأسطر من ٢ إلى ٧ على حسب عدد المرات الذي تريده عن طريق نسخ الأسطر.\n"
                story_text_2: "## خمس قرود صغيرة تقفز على السرير\nأغنية الأطفال هذه تعلهم الأرقام تنازلياً من ٥ قرود صغيرة إلى قرد واحد.\nإذا نسخت السطور من ٢ - ٧ ولصقتها أسفل الكود كتكملة، يمكنك جعل البرنامج يغني الأغنية كاملة!\n"
                example_code_2: "```\nالعدد= ٦\nالعدد= العدد - ١\nprint العدد ' قرود صغيرة تقفز فوق السرير'\nprint 'سقط واحد منهم و اصطدمت رأسه بالسرير'\nprint 'إتصلت الأم بالطبيب وقال الطبيب'\nprint 'لا مزيد من قفز القرود على السرير!'\nsleep\n```\n"
            12:
                story_text: "## غنّ أغنية\nIn this song we can make it even easier to program '{if} you're happy and you know it, clap your hands'. Because we can put all of the actions in a variable, check it out:\n"
                example_code: "```\nactions = 'clap your hands', 'stomp your feet', 'shout Hurray!'\n{for} action {in} actions\n    {for} i {in} {range} 1 {to} 2\n        {print} '{if} youre happy and you know it'\n        {print} action\n    {print} '{if} youre happy and you know it and you really want to show it'\n    {print} '{if} youre happy and you know it'\n    {print} action\n```\n"
                start_code: '# place your code here'
            11:
                story_text: "## Songs\nIn this level you can use the `{for} i {in} {range}` command to make songs that use counting.\n"
                example_code: "## 5 little monkeys\n```\n{for} i {in} {range} 5 {to} 1\n    {print} i ' little monkeys jumping on the bed'\n    {print} 'One fell off and bumped his head'\n    {print} 'Mama called the doctor and the doctor said'\n    {if} i {is} 1\n        {print} 'PUT THOSE MONKEYS RIGHT TO BED!'\n    {else}\n        {print} 'NO MORE MONKEYS JUMPING ON THE BED!'\n```\n"
                start_code: '# place your code here'
            10:
                story_text: "## Songs\nIn this level you can easily make the childrens' song 'Five little monkeys'. Can you make the last chorus?\nYou can also make the whole baby shark song (including all the other sharks in the family) in only 6 lines!\nOr you can make Old McDonald with all the different animals.\n"
                example_code: "## 5 Little Monkeys Jumping on the bed\n```\nmonkeys = 5, 4, 3, 2\n{for} monkey {in} monkeys\n    {print} monkey ' little monkeys jumping on the bed'\n    {print} 'One fell off and bumped his head'\n    {print} 'Mama called the doctor and the doctor said'\n    {print} 'NO MORE MONKEYS JUMPING ON THE BED!'\n```\n\n## Baby Shark\n```\nsharks = baby, mommy, daddy, grandma, grandpa\n{for} shark {in} sharks\n    {print} shark 'tututututudu'\n    {print} shark 'tututututudu'\n    {print} shark 'tututututudu'\n    {print} shark\n```\n## Old McDonald\n```\nanimals = pig, dog, cow\n{for} animal {in} animals\n    {if} animal {is} pig\n        sound = oink\n    {if} animal {is} dog\n        sound = woof\n    {if} animal {is} cow\n        sound = moo\n    {print} 'Old McDonald had a farm'\n    {print} 'E I E I O!'\n    {print} 'and on that farm he had a ' animal\n    {print} 'E I E I O!'\n    {print} 'with a ' sound sound ' here'\n    {print} 'and a ' sound sound ' there'\n    {print} 'here a ' sound\n    {print} 'there a ' sound\n    {print} 'everywhere a ' sound sound\n```\n"
                start_code: '# place your code here'
            16:
                story_text: "## Sing a song!\nIn this level, you can program a song like OldMacDonald even more quickly. You can connect the right animal to the right sound by simply putting them in the same place in the list.\nThe Drunken Sailor is also quickly made in this level. You only need 8 lines for the entire song, check it out!\n\n## Old MacDonald\n```\nanimals = ['pig', 'dog', 'cow']\nsounds = ['oink', 'woof', 'moo']\n{for} i {in} {range} 1 {to} 3\n    animal = animals[i]\n    sound = sounds[i]\n    {print} 'Old McDonald had a farm'\n    {print} 'E I E I O!'\n    {print} 'and on that farm he had a ' animal\n    {print} 'E I E I O!'\n    {print} 'with a ' sound sound ' here'\n    {print} 'and a ' sound sound ' there'\n    {print} 'here a ' sound\n    {print} 'there a ' sound\n    {print} 'everywhere a ' sound sound\n```\n\n## Drunken Sailor\n```\nlines = ['what shall we do with the drunken sailor', 'shave his belly with a rusty razor', 'put him in a long boat till hes sober']\n{for} line {in} lines\n    {for} i {in} {range} 1 {to} 3\n        {print} line\n    {print} 'early in the morning'\n    {for} i {in} {range} 1 {to} 3\n        {print} 'way hay and up she rises'\n    {print} 'early in the morning'\n```\n"
                start_code: '# place your code here'
                example_code: "## Old MacDonald\n```\nanimals = ['pig', 'dog', 'cow']\nsounds = ['oink', 'woof', 'moo']\n{for} i {in} {range} 1 {to} 3\n    animal = animals[i]\n    sound = sounds[i]\n    {print} 'Old McDonald had a farm'\n    {print} 'E I E I O!'\n    {print} 'and on that farm he had a ' animal\n    {print} 'E I E I O!'\n    {print} 'with a ' sound sound ' here'\n    {print} 'and a ' sound sound ' there'\n    {print} 'here a ' sound\n    {print} 'there a ' sound\n    {print} 'everywhere a ' sound sound\n```\n\n## Drunken Sailor\n```\nlines = ['what shall we do with the drunken sailor', 'shave his belly with a rusty razor', 'put him in a long boat till hes sober']\n{for} line {in} lines\n    {for} i {in} {range} 1 {to} 3\n        {print} line\n    {print} 'early in the morning'\n    {for} i {in} {range} 1 {to} 3\n        {print} 'way hay and up she rises'\n    {print} 'early in the morning'\n```\n"
        default_save_name: أغنية
    turtle:
        name: الرسام
        description: اصنع الرسم الخاص بك
        default_save_name: الرسام
        levels:
            1:
                example_code: "\n\n```\n{turn} {right}\n{forward} ٥٠\n{turn} {left}\n{forward} ٥٠\n```\n"
                story_text: "## هيا بنا نرسم\nفي المستوى ١ يمكنك استخدام هيدي لترسم. اذا جمعت بين الخطوط واستدارتها يمكننا رسم مربع او سُلم.\n\nبإستخدام `{forward}` يمكنك رسم خط ممتد للامام، والرقم بعده يحدد لك الي اي مدى سيمتد طوله. اما بإستخدام `{turn} {right}` سيستدر ربع دورة بإتجاه عقارب الساعه، `{turn} {left}` سيستدر ربع دورة بعكس اتجاه عقارب الساعه.\n\nوإذا اردت الرجوع للخلف يمكنك استخدام الامر `{forward}` ايضًا ولكن هذه المره نطرح منه عدد الخطوات التي نريد رجوعها للخلف. علي سبيل المثال اذا اردنا الرجوع 100 نستخدم `{forward} -100`\n\n## تحدي\nهذه كانت بدايه رسم سُلم صغير. هل يمكنك جعله يتكون من خمس خطوات اخرى؟\n"
                start_code: "{forward} ٥٠\n{turn} {left}"
            8:
                example_code: "\n\n```\nالزاوية = ٩٠\n{repeat} ١٠ {times}\n    {turn} الزاوية\n    {forward} ٥٠\n```\n"
                story_text_2: "## تفاعلي\nكذلك يمكننا تحسين البرنامج الذي يرسم الأشكال المختلفة. \nهل يمكنك حاسب كم يجب على الرسام أن يستدير هنا؟ أكمل الكود وسيصبح بإمكانك أن تطبع الشكل المضلع الذي تريد!\n"
                story_text: "## فلنرسم!\nبما أننا قادرون على تكرار عدة أسطر برمجية الآن فيمكننا أن نرسم الأشكال بسهولة أكثر.\nيجب علينا فقط أن نحدد الزاوية مرة واحدة ومن ثم استخدام المتغير في مع الأمر البرمجي `{repeat}`.\n"
                example_code_2: "\n\n```\nعدد_الزوايا = {ask} \"كم عدد الزوايا التي يجب أن أقوم بها؟\"\nالزاوية = ٣٦٠ / عدد_الزوايا\n{repeat} الزاوية {times} \n    {turn} _\n    {forward} _\n```\n"
                start_code: "عدد_الزوايا = {ask} \"كم عدد الزوايا التي يجب أن أقوم بها؟\""
            2:
                story_text: "## الرسام\nيمكنك في هذا المستوى استخدام المتغيرات لجعل الرسام تفاعلياً. على سبيل المثال يمكنك أن تسأل المستخدم عن عدد الحركات التي يجب على الرسام أن يقوم بها.\n"
                example_code: "\n```\nالجواب {is} {ask} كم عدد الحركات التي يجب أن يقوم بها الرسام؟\n{forward} الجواب\n```\n"
                start_code: "{print} سباق الرسم\nالزاوية هي ٩٠\n{turn} الزاوية\n{forward} ٢٥"
                example_code_2: "```\n{print} رسم الأشكال\nالزاوية هي ٩٠\n{turn} الزاوية\n{forward} ٢٥\n{turn} الزاوية\n{forward} ٢٥\n```\n"
                story_text_2: "بالاضافة الى ذلك، الرسام لم يكن قادراً إلا على الاستدارة الى اليمن أو اليسار. هذا ممل بعض الشيء! \nفي المستوى الثاني يمكننا الاإستدارة في كل الإتجاهات!\n\nاستعمل ٩٠ للإستدارة بمقدار ربع دائرة. هذا ما نسميه بالدرجات. استدارة كاملة تساوي ٣٦٠ درجة.\nهل تستطيع أن ترسم شكلاً معينا باستخدام هذا الكود؟ ربما مثلث أو دائرة؟\n"
            3:
                story_text: "## الرسام\nفي هذا المستوى يمكننا استخدام الأوامر `{at} {random}` مع الرسام. اختيار عشوائي سيجعل الرسام يتحرك بشكل مختلف كل مرة. \nاستعمل `{at} {random}` لإختيار رقم من قائمة.\n## تحدي\nهل يمكنك أن تنسخ وتلصق السطرين ٢ و٣ لتصنع مساراً عشوائياً أطول؟\n"
                example_code: "\n\n\n```\nالزاوايا هي ١٠، ٥٠، ٩٠، ١٥٠، ٢٥٠\n{turn} الزاوايا {at} {random}\n{forward} ٢٥\n```\n"
                start_code: "الزاوايا هي ١٠، ٥٠، ٩٠، ١٥٠، ٢٥٠\n{turn} الزاوايا {at} {random}\n{forward} ٢٥"
            4:
                story_text: "## فلنرسم!\nفي المستوى الرابع يجب أن نستخدم علامات الإقتباس مع الأوامر `{print}` و`{ask}`. حتى في الكود الذي نستخدمه للرسم!\n"
                example_code: "\n\n```\n{print} \"رسم الأشكال\"\nالزاوية هي ٩٠\n{turn} الزاوية\n{forward} ٢٥\n{turn} الزاوية\n{forward} ٢٥\n```\n"
                start_code: "{print} \"رسم الأشكال\"\nالزاوية هي ٩٠\n{turn} الزاوية\n{forward} ٢٥"
                example_code_2: "```\n{color} {white}\n{forward} -80\n{color} {green}\n{forward} 50\n{color} {yellow}\n{forward} 50\n{color} {red}\n{forward} 50\n```\n"
                story_text_2: "## الألوان\nيمكنك أيضًا تغيير لون الخطوط باستخدام الأمر `{color}`. انظر للمثال التوضيحي\nبالإضافة إلى ذلك، يمكنك استخدام الأمر `{color} {white}` لرسم خطوط غير مرئية، وبالتالي يمكنك تحريك السلحفاة لأي مكان تريده على الشاشة قبل البدء بالرسم.\n"
            7:
                story_text: "## فلنرسم!\nفي هذا المستوى يمكننا تكرار سطر واحد من الكود باستخدام الأمر `{repeat}`.\n"
                example_code: "\n\n```\n{print} \"رسم الأشكال\"\n{repeat} ٣ {times} {forward} ١٠\n```\n"
                start_code: "{print} \"رسم الأشكال\"\n{repeat} ٣ {times} {forward} ١٠"
            5:
                story_text: "## فلنرسم!\nفي المستوى الخامس يمكننا الاختيار بناء على فحص معين من خلال الأمر `{if}`. على سبيل المثال الإحتيار بين عدة أنواع من أشكال الرسم.\n"
                example_code: "\n\n```\n{print} \"رسم الأشكال\"\nالشكل {is} {ask} \"هل تريد مربعاً أم مثلثاً؟\"\n{if} الشكل {is} مثلث الزاوية هي ١٢٠\n{else} الزاوية هي ٩٠\n{turn} الزاوية\n{forward} ٢٥\n{turn} الزاوية\n{forward} ٢٥\n{turn} الزاوية\n{forward} ٢٥\n{turn} الزاوية\n{forward} ٢٥\n```\n"
                start_code: "{print} \"رسم الأشكال\"\nالشكل {is} {ask} \"هل تريد مربعاً أم مثلثاً؟\"\n{if} الشكل {is} مثلث الزاوية هي ١٢٠\n{else} الزاوية هي ٩٠\n{turn} الزاوية\n{forward} ٢٥"
            6:
                story_text: "## فلنرسم!\nفي هذا المستوى يمكننا استخدام الحساب لنرسم أشكالاً مختلفة.\nقد تكون تعلمت في المدرسة أن الإستدارة بشكل دائرة كاملة تساوي ٣٦٠ درجة. اذا لم تتعلم ذلك من قبل فأنت الآن تعرف!\nلذلك أيضا نستخدم ٩٠درجة من أجل رسم مربع. ٣٦٠مقسومة على ٤ تساوي ٩٠.\nبما أننا نستطيع القيام بالعمليات الحسابية في هيدي، يمكننا رسم كل الأشكال التي نريد!\n"
                example_code: "## مصال توضيحي\n\n```\nعدد_الزوايا = {ask} \"كم عدد الزوايا المطلوبة؟\"\nالزاوية = ٣٦٠ / عدد_الزوايا\n{forward} ٥٠\n{turn} الزاوية\n{forward} ٥٠\n{turn} الزاوية\n{forward} ٥٠\n{turn} الزاوية\n{forward} ٥٠\n{turn} الزاوية\n{forward} ٥٠\n{turn} الزاوية\n{forward} ٥٠\n{turn} الزاوية\n```\n"
                start_code: "{print} \"رسم الأشكال\""
    dishes:
        levels:
            7:
                story_text: "## Dishwashing\nWith the `{repeat}` you can repeat pieces of code. You can use this to calculate who will be washing dishes for the entire week.\n"
                example_code: "```\npeople = mom, dad, Emma, Sophie\n{repeat} _ _ {print} 'the dishwasher is' _\n```\n"
                start_code: "{print} \"من سيغسل الأطباق؟\""
            6:
                example_code: "```\npeople = mom, dad, Emma, Sophie\nemma_washes = 0\ndishwasher = people {at} {random}\n{print} 'The dishwasher is' dishwasher\n{if} dishwasher {is} Emma emma_washes = emma_washes + 1\n{print} 'Emma will do the dishes this week' emma_washes 'times'\n```\n\nNow you can copy lines 3 to 5 a few times (e.g. 7 times for a whole week) to calculate for a whole week again.\nDo you make the code for the whole week?\n"
                start_code: "{print} \"من سيغسل الأطباق؟\""
                story_text: "## غسل الأطباق\nكم مرة يجب على كل شخص أن يغسل الأطباق؟ هل ذلك عادل؟ قم بعد ذلك في هذا المستوى.\n"
                story_text_2: "## Make it fair\nIf you are extremely unlucky the previous program might choose you to to the dishes for the whole week! That's not fair!\nTo create a fairer system you can use the `{remove}` command to remove the chosen person from the list. This way you don't have to do the dishes again untill everybody has had a turn.\n\nMonday and tuesday are ready for you! Can you add the rest of the week?\nAnd... can you come up with a solution for when your list is empty?\n"
                example_code_2: "```\npeople = mom, dad, Emma, Sophie\ndishwasher = people {at} {random}\n{print} 'Monday the dishes are done by: ' dishwasher\n{remove} dishwasher {from} people\ndishwasher = people {at} {random}\n{print} 'Tuesday the dishes are done by: ' dishwasher\n{remove} dishwasher {from} people\ndishwasher = people {at} {random}\n```\n"
            4:
                story_text: "## غسل الأطباق\nباستخدام علامات الاقتباس، يمكنك جعل التخطيط لغسل الأطباق أكثر جمالًا.\nهذه المرة لم يكتمل نموذج التعليمات البرمجية تمامًا.\n\nهل يمكنك إكمال الكود عن طريق ملء الفراغات؟ يجب استبدال كل فراغ برمز واحد.\n\nنصيحة: لا تنس علامات الاقتباس!\n"
                example_code: "```\nأشخاص {is} أمي، أبي، إيما، صوفي\n{print} _ غسل الأطباق سيكون على _\n{sleep}\n{print} أشخاص{at} _\n```\n"
                start_code: "{print} \"من سيغسل الأطباق؟\""
            3:
                story_text: "## غسل الأطباق\nهل دائماً ما تعترض في المنزل على من يجب عليه غسل الأطباق أو تغيير صندوق المهملات اليوم؟\nإذاً يمكنك أن تدع الكومبيوتر يختار بالعدل من عليه فعلها. يمكنك في هذا المستوى برمجة ذلك\nتحتاج في البدايةأن تصنع قائمة بأفراد عائلتك. وبعدها إستخدم الأمر `{at} {random}` لإختيار شخص من تلك القائمة.\n"
                start_code: '{print} من سيغسل الأطباق؟'
                example_code: "```\nأشخاص {is} أمي، أبي، إيما، صوفي\n{print} أشخاص {at} {random}\n```\n"
                story_text_2: "## تهكير برنامج غسل الأطباق!\nتشعر بعدم الرغبة في غسل الأطباق اليوم؟ هكر البرنامج وإمسح اسمك من قائمة أفراد العائلة بإستخدام الأمر `{remove}` `{from}`\n"
                example_code_2: "```\nأشخاص {is} أمي، أبي، إيما، صوفي\nإسمك {is} {ask} من أنت؟\n_ إسمك _ أشخاص\n{print} _ _ _ سيغسل الأطباق\n```\n"
            10:
                story_text: "## Dishwashing\nIn this level you could make an even better dish washing shedule.\n"
                example_code: "```\ndays = Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday\nnames = mom, dad, Emma, Sophie\n{for} day {in} days\n    {print} names {at} {random} ' does the dishes on ' day\n```\n"
                start_code: '# place your code here'
            5:
                story_text: "## غسل الاطباق\nباستخدام `{if}` يمكنك الآن الحصول على مزيد من المرح مع الاختيار في البرنامج. يمكنك جعل برنامجك يستجيب للاختيار الذي اتخذه الكمبيوتر.\n\nهل يمكنك إنهاء الكود بحيث يطبع \"سيئًا جدًا\" عندما يحين دورك و في الحالات الاخرى يطبع \"نعم!\"؟\nلا تنس الاقتباسات!\n"
                example_code: "```\npeople {is} mom, dad, Emma, Sophie\ndishwasher {is} people {at} {random}\n{if} dishwasher {is} Sophie {print} _ too bad I have to do the dishes _ {else} {print} 'luckily no dishes because' _ 'is already washing up'\n```\n"
                start_code: "{print} \"من سيغسل الأطباق؟\""
        name: غسل الأطباق؟
        description: Use the computer to see who does the dishes (Start at level 2)
        default_save_name: Dishes
    dice:
        name: حجر النرد
        levels:
            7:
                example_code: "```\nchoices = 1, 2, 3, 4, 5, earthworm\n{repeat} _ _ {print} _ _ _\n```\n"
                start_code: "{print} 'What will the die indicate this time?'"
                story_text: "## Dice\nYou can also make a die again in level 5. With the `{repeat}` code you can easily roll a whole hand of dice.\nTry to finish the sample code! The dashes should contain multiple commands and characters.\n\nBut maybe you want to make a completely different die. Of course you can!\n"
            6:
                story_text: "## حجر النرد\nيمكنك أيضاً في هذا المستوى صنع حجر نرد دودة الأرض مرة أخرى، ولكن الآن يمكنك حساب عدد النقاط التي جمعتها.\nقد تعلم أن الدودة تحسب ٥ نقاط لديدان الأرض. الآن بعد رمي النرد مرة يمكنك حساب كم عدد النقاط التي إلتقطتها فوراً.\nالمثال التالي يوضح الكود الذي يحسب نقاط رمي حجر نرد واحد:\n\n## تحدي\nهل يمكنك جعل الكود يحسب إجمالي النقاط لثمانِ رميات لحجر النرد؟ لفعل ذلك، يمكنك نسخ ولصق بضع أسطر فقط من الكود.\n"
                start_code: "{print} 'إلى ماذا سيشير حجر النرد هذه المرة؟'"
                example_code: "```\nالإختيارات = ١، ٢، ٣، ٤، ٥، دودةالأرض\nالنقاط= ٠\nرمية = الإختيارات {at} {random}\n{print} 'لقد رميت' رمية\n{if} رمية {is} دودةالأرض النقاط = النقاط + 5 {else} النقاط = النقاط + رمية\n{print} 'هذه هي' النقاط' نقطة'\n```\n"
                example_code_2: "## Looking forward\n\nDid you manage to calculate the score for 8 dice? That required a lot of cutting and pasting, right? We are going to make that easier in level 7!\n"
            10:
                story_text: "## Dice\nIs everybody taking too long throwing the dice? In this level you can let Hedy throw all the dice at once!\n"
                example_code: "```\nplayers = Ann, John, Jesse\nchoices = 1, 2, 3, 4, 5, 6\n{for} player {in} players\n    {print} player ' throws ' choices {at} {random}\n    {sleep}\n```\n"
                start_code: '# place your code here'
            5:
                start_code: "{print} 'إلى ماذا يشير حجر النرد هذه المرة؟'"
                story_text: "## حجر النرد\nتستطيع صنع حجر النرد الخاص بك في هذا المستوى باستخدام `{if}`.\nأكمل نموذج الكود بحيث يطبع \"تستطيع التوقف عن الالقاء\" بمجرد رمي رمز دودة الارض.\n\nولكن ربما تريد اعادة إنشاء حجر نرد من لعبة مختلفة تمامًا. هذا جيد أيضًا! ثم اكتب ردة فعلك الخاصة. مثال 'نعم' لرقم 6 و 'للاسف' لاي شيء {else}.\n"
                example_code: "```\nالخيارات {is} 1, 2, 3, 4, 5, دودة الارض\nالرمية {is} _\n{print} 'لديك' _ 'تم القاءها'\n{if} _ {is} دودة ارض {print} 'تستطيع التوقف عن الرمي.' _ {print} 'عليك أن تسمعه مرة أخرى!'\n```\n"
            4:
                story_text: "## حجر النرد\nفي هذا المستوى يمكنك إنشاء جمل مفيدة باستخدام القيمة التي تظهر على حجر النرد، ولا تنسَ علامات الإقتباس.\nالمثال التوضيحي هذه المرة غير مكتمل كليًا، هل يمكنك إكماله؟\n"
                example_code: "```\nالخيارات {is} ١، ٢، ٣، ٤، ٥، دودة الأرض\n{print} _ لقد رميت حجر النرد _\n{print} _ _ _ <- هنا يجب عليك كتابة الكود الخاص باختيار الرقم الذي سيظهر على حجر النرد\n```\n"
                start_code: "{print} 'ما الرقم الذي سيظهر على حجر النرد هذه المرة؟'"
            3:
                story_text: "## حجر النرد\nيمكننا الإختار من قائمة في هذا المستوى. ومع ذلك سيتولى الكومبيوتر الإختيار هذه المرة من بين أوجه حجر النرد.\nألقِ نظرة على الألعاب الموجودة في خزانتك في المنزل.\nهل يوجد ألعاب ذات نرد (خاص)؟ عندما تجد شيئاً مماثل يمكنك نسخه ايضاً في هذا الكود.\nعلى سبيل المثال، هناك لعبة تسمى نرد دودة الأرض تتكون من ٦ اوجه مرقمة من ١ إلى ٥ والأخيرة عليها دودة الأرض.\n\n![Die of earthworms with 1 to 5 and an earthworm on it](https://cdn.jsdelivr.net/gh/felienne/hedy@24f19e9ac16c981517e7243120bc714912407eb5/coursedata/img/dobbelsteen.jpeg)\n"
                example_code: "```\nالخيارات هي ١، ٢، ٣، ٤، ٥، دودة الأرض\n{print} الخيارات {at} {random}\n```\n"
                start_code: '{print} إلى ماذا يشير حجر النرد هذه المرة؟'
                example_code_2: "```\nالخيارات هي _\n```\n"
                story_text_2: "## تحدي\nالنرد المستخدم فالمثال هو حجر نرد مخصص للعبة معينة. هل يمكنك تغييره للحجر النرد الأصلي؟\n أو جعله حجر نرد خاص بلعبة أخرى تعرفها أو من إختراعك؟\n"
            15:
                story_text: "## Dice\nIn this game you have to throw 6 in as little tries as possible.\n"
                example_code: "```\noptions = 1, 2, 3, 4, 5, 6\n{print} 'Throw 6 as fast as you can!'\nthrown = 0\ntries = 0\n{while} thrown != 6\n    thrown = options {at} {random}\n    {print} 'You threw ' thrown\n    tries = tries + 1\n{print} 'Yes! You have thrown 6 in ' tries ' tries.'\n```\n"
                start_code: '# place your code here'
        default_save_name: حجر النرد
        description: اصنع حجر النرد الخاص بك
    rock:
        description: اصنع لعبة حجر، ورقة، مقص الخاصة بك
        levels:
            5:
                example_code: "```\nالخيارات {is} حجر، ورقة، مقص\nاختيار_الحاسوب {is} _\nالاختيار {is} {ask}' ماذا اخترت'؟\n{print} 'انت اخترت ' _\n{print} 'الحاسوب اختار ' _\n{if} _ {is} _ {print} 'تعادل!' {else} {print} 'ليس تعادل'\n```\n\nاملأ الكود الصحيح في الفراغات لترى {if} إنه تعادل.\n"
                start_code: "{print} 'اهلاً بك في لعبتك الإلكترونية حجر ورقة مقص!'"
                story_text: "## حجر، ورقة، مقص\nفي هذا المستوى يمكننا تحديد من فاز.\nلذلك انت بحاجة استخدام الأمر `{if}` .\n\nلذلك تحتاج إلى حفظ اختيارك الجديد بالاسم الذي تختاره واختيار الكمبيوتر كاختيار الكمبيوتر.\nثم يمكنك استخدام \"{if}\" لمعرفة {if} انهم متطابقين او مختلفين.\nهل ستنهي الكود؟\n"
            4:
                story_text: "##حجر،ورقة،مقص\nفي هذا المستوى أيضًا يمكنك برمجة لعبة حجر،ورقة،مقص. لكن إذا أردت كتابة نص يجب عليك استخدام علامات الإقتباس.\nهل يمكنك إكمال الكود بوضع الأوامر أو علامات الترقيم المناسبة في الفراغات؟\n"
                start_code: "{print} 'أهلا بك في لعبة حجر،ورقة،مقص الخاصة بك'"
                example_code: "```\nالخيارات {is} حجر,ورقة,مقص\n{print} _ الحاسوب اختار: _ _ {at} _\n```\n"
            3:
                start_code: '{print} مرحبًا في لعبة حجر ورقة مقص الخاصة بك!'
                story_text: "## حجر، ورقة، مقص\n\nفي هذا المستوى يمكننا إستخدام القوائم و الإختار منها.\nفي البداية اصنع قائمة بإستخدام `{is}`. بعد ذلك يمكنك ترك الكومبيوتر يختار شيئًا من هذه القائمة بإستخدام `{at} {random}`.\nعلى سبيل المثال، ستترك الكومبيوتر يختار من بين حجر، ورقة، أو مقص.\n"
                example_code: "```\nالإختيارات {is} حجر، ورقة، مقص\n{print} الإختيارات {at} {random}\n```\n"
                story_text_2: "## تحدي\nهناك لاعب واحد فقط يمكنه اللعب حاليًا، هل يمكنك إضافة لاعب أخر؟\nيمكنك ايضًا إستخدام المتغيرات لتسمية لاعب ١ و لاعب٢.\n"
                example_code_2: "```\nالإختيارات {is} حجر، ورقة، مقص\n{print} لاعب ١ يختار... الإختيارات {at} {random}\n{print} لاعب٢ _\n```\n"
            2:
                story_text: "## حجر، ورقة، مقص\nفي هذا المستوى يمكنك التدرب على استخدام المتغيرات، حتى تتمكن من صنع لعبة حجر ورقة مقص باستخدامها في المستوى القادم.\n"
                example_code: "```\n_  {is}{ask} حجر, ورقة, مقص؟\n{print}اخترت _\n```\n"
                start_code: '#اكتب الكود الخاص بك هنا'
            15:
                story_text: "## Rock, Paper, Scissors\nPlay until you beat the computer! But first, finish the example code...\n"
                example_code: "```\nwon = 'no'\noptions = 'rock', 'paper', 'scissors'\n{while} won == 'no'\n    your_choice = {ask} 'What do you choose?'\n    computer_choice = options {at} {random}\n    {print} 'you chose ' your_choice\n    {print} 'the computer chose ' computer_choice\n    {if} computer_choice == your_choice\n        {print} 'Tie!'\n    {if} computer_choice == 'rock' {and} your_choice == 'scissors'\n        {print} 'You lose!'\n    {if} computer_choice == 'rock' {and} your_choice == 'paper'\n        {print} 'You win!'\n        won = 'yes'\n"
                start_code: '# place your code here'
            9:
                story_text: "## Rock, paper, scissors\nIn this level you can program the whole rock, paper, scissors game by nesting the {if}-commands. Can you finish the code?\n"
                example_code: "```\nchoices {is} rock, paper, scisscors\nyour_choice {is} {ask} 'What do you choose?'\n{print} 'You choose ' your_choice\ncomputer_choice {is} choices {at} {random}\n{print} 'The computer chooses ' computer_choice\n{if} computer_choice {is} your_choice\n    {print} 'Tie'\n{if} computer_choice {is} 'rock'\n    {if} your_choice {is} 'paper'\n        {print} 'You win!'\n    {if} your_choice {is} 'scissors'\n        {print} 'You lose!'\n```\n"
                start_code: '# place your code here'
            1:
                story_text: "## حجر، ورقة، مقص\nفي المستوى ١ يمكنك بدأ لعبة حجر، ورقة، مقص.\n\nبإستخدام `{ask}` يمكنك الاختيار من بين حجر او ورقة او مقص، وبإستخدامك `{echo}` ستعيد ترديد الاختيار.\n"
                example_code: "```\n{print} ماذا تختار؟\n{ask} اختر من بين (حجر، ورقة، مقص)\n{echo} إذًا اختارك هو:\n```\n"
                start_code: '{print} اهلاً بك في لعبتك الإلكترونية حجر ورقة مقص!'
                story_text_2: "## تحدي\nبدلاً من استخدامك للكلمات يمكنك استخدام الرموز التاليه: ✊✋✌\nهل يمكنك كتابة الكود بإستخدام الرموز؟\n"
                example_code_2: "```\n{print} ماذا تختار؟\n{ask} اختر من بين _\n{echo} إذًا اختيارك هو:\n```\n"
            10:
                story_text: "## Rock, Paper, Scissors\nFeeling too lazy to play the game yourself? Let Hedy play it for you!\n"
                example_code: "```\nchoices = rock, paper, scissors\nplayers = Marleen, Michael\n{for} player {in} players\n     {print} player ' chooses ' choices {at} {random}\n```\n"
                start_code: '# place your code here'
            13:
                story_text: "## Rock, paper, scissors\nWith the `{and}` command you can shorten your rock, paper, scissors code! Check out the example code below and try to finish it.\n"
                example_code: "```\noptions = 'rock', 'paper', 'scissors'\nyour_choice = {ask} 'What do you choose?'\ncomputer_choice = options {at} {random}\n{print} 'You choose ' your_choice\n{print} 'The computer chooses ' computer_choice\n{if} computer_choice {is} your_choice\n    {print} 'Tie'\n{if} computer_choice {is} 'rock' {and} your_choice {is} 'paper'\n    {print} 'You win!'\n{if} computer_choice {is} 'rock' {and} your_choice {is} 'scissors'\n    {print} 'The computer wins!'\n```\n"
                start_code: '# place your code here'
        name: حجر، ورقة، مقص
        default_save_name: Rock
    calculator:
        levels:
            14:
                story_text: "## Guess which number\nIn this level you can programm the game 'Guess which number'\n"
                example_code: "```\n{print} 'Guess which number'\nnumbers = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\nnumber = numbers {at} {random}\ngame = 'on'\n{for} i {in} {range} 1 {to} 10\n    {if} game == 'on'\n        guess = {ask} 'Which number do you think it is?'\n        {if} guess > number\n            {print} 'Lower!'\n        {if} guess < number\n            {print} 'Higher!'\n        {if} guess == number\n            {print} 'You win!'\n            game = 'over'\n"
                start_code: '# place your code here'
            12:
                story_text: "## Calculator\nNow you can make a calculator that works for decimal numbers.\n"
                example_code: "```\nnumber1 = {ask} 'What is the first number?'\nnumber2 = {ask} 'What is the second number?'\nanswer = number1 + number2\n{print} number1 ' plus ' number2 ' is ' answer\n"
                start_code: '# place your code here'
            9:
                story_text: "## آلة حاسبة\nلقد تعلمت صنع آلة حاسبة في المستويات السابقة. يمكنك الآن أن تطور البرنامج وتحوله للعبة حسابية. هكذا ...\n"
                example_code: "```\nscore = 0\n{repeat} 10 {times}\n    numbers = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n    number1 = numbers {at} {random}\n    number2 = numbers {at} {random}\n    correct_answer = number1 * number2\n    {print} 'What is ' number1 ' times ' number2 '?'\n    answer = {ask} 'Type your answer here...'\n    {print} 'Your answer is' answer\n    {if} answer {is} correct_answer\n        score = score + 1\n{print} 'Great job! Your score is... ' score ' out of 10!'\n```\n"
                start_code: "{print} 'Welcome to this calculator!'"
            10:
                story_text: "## Calculator\nThis calculator game helps you practise your tables of multiplication!\nIf you add more numbers to the list, you can practise all the multiplications.\n"
                example_code: "```\nnumbers = 1, 2, 3\n{for} number1 {in} numbers\n    {for} number2 {in} numbers\n        answer = {ask} 'How much is ' number2 ' times ' number1 '?'\n        correct = number1 * number2\n        {if} answer {is} correct\n            {print} 'Great job!'\n        {else}\n            {print} 'Thats wrong. The right answer is ' correct\n```\n"
                start_code: '# place your code here'
            6:
                story_text: "## آلة حاسبة\nبما أننا قادرون على القيام بالعمليات الحسابية، بامكاننا صنع برنامج للتدرب على العمليات الحسابية. يمكنك وضع العمليات الحسابية بنفسك، على سبيل المثال:\n"
                example_code: |-
                    ```
                    الاجابة_الصحيحة = ١١ * ٢٧
                    اجابتك = {ask} "ما ناتج ١١ ضرب ٢٧؟"
                    {if} اجابتك {is} الاجابة_الصحيحة {print} "أحسنت"
                    {else} {print} "كان خطأ " الاجابة_الصحيحة
                    ```
                story_text_2: "## أرقام عشوائية\nبامكانك جعل الحاسوب يقوم بعمليات حسابية عشوائية باستخدام الأمر بشكل عشوائي.\nبهذا الشكل يمكنك اختيار رقم عشوائي و تضربه برقم اخر وسيساعدك ذلك على التدرب على جدول الضرب بحيث تحصل كل مرة على عملية ضرب مختلفة:\n"
                example_code_2: "```\nالجداول = ٤، ٥، ٦، ٧، ٨\nالأرقام = ١، ٢، ٣، ٤، ٥، ٦، ٧، ٨، ٩، ١٠\nالمضروب = الجداول {at} {random} \nالرقم = الأرقام {at} {random} \nالاجابة_الصحيحة = الرقم * المضروب\nاجابتك = {ask} \"ما ناتج \" الرقم \" ضرب \" المضروب \" ؟\"\n{if} اجابتك هي الاجابة_الصحيحة {print} \"أحسنت!\"\n{else} {print} \"خطأ! الاجابة هي \" الاجابة_الصحيحة\n```\n"
                start_code: "{print} \"أهلاً بكم في هذه الآلة الحاسبة!\""
                story_text_3: "## Random numbers\nYou can also let the computer do random sums on its own using random.\nThis is how you choose a number of tables to practice, and from that you always get a different sum:\n"
                example_code_3: "```\ntables = 4, 5, 6, 8\nnumbers = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\ntable = tables {at} {random}\nnumber = numbers {at} {random}\ncorrect_answer = table * number\nanswer = {ask} 'how much is ' table ' times ' number '?'\n{if} answer {is} correct_answer {print} 'okay'\n{else} {print} 'mistake! it was ' correct_answer\n```\n"
            15:
                story_text: "## Calculator\nYou can add the `{while}` loop to the calculator game you've learned to make in a previous level.\nThis makes sure the player can't continue to the next question {if} they answer incorrectly.\n"
                example_code: "```\nscore = 0\n{for} i {in} {range} 0 {to} 9\n    numbers = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n    number1 = numbers {at} {random}\n    number2 = numbers {at} {random}\n    correct = number1 * number2\n    answer = 0\n    {while} answer != correct\n        {print} 'How much is ' number1 ' times ' number2 '?'\n        answer = {ask} 'Fill in your answer:'\n        {print} 'Your answer is ' answer\n    {print} 'Good job!'\n{print} 'You win!'\n```\n"
                start_code: '# place your code here'
        name: آلة حاسبة
        description: اصنع آلة حاسبة
        default_save_name: آلة حاسبة
    restaurant:
        name: المطعم
        description: اصنع مطعماً افتراضياً خاصاً بك
        default_save_name: المطعم
        levels:
            1:
                story_text: "## المطعم\n في المستوى ١ ستتمكن من صنع مطعم افتراضي وتأخذ طلبات الطعام الخاصة بضيوفك.\n"
                example_code: "```{print} \U0001F35F اهلاً بكم في مطعم هيدي \n{ask} ماذا تود ان تطلب؟\n{echo} اذاً، طلبك هو \n{print} شكرًا لطلبكم من مطعمنا!\n{print} طلبك في طريقه إليك!\n ```\n"
                start_code: '# اكتب الكود الخاص بك هنا'
                story_text_2: "## تحدي\nهل يمكنك التفكير في عدة سطور اخرى تضيفها لتطور كود مطعمك؟ على سبيل المثال، هل يمكنك استخدام {ask} لسؤال الضيوف ماذا يفضلون كشراب بجانب وجبتهم، وبعد ذلك اخبارهم بسعر طلبهم، و ان تتمنى لهم وجبة هنيئة؟\n"
            2:
                story_text: "## المطعم\nفي المستوى الثاني ستتمكن من تطوير مطعمك باستخدام المتغيرات، في المستوى الأول، كانت هيدي تستطيع فقط أن تردد طلبك باستخدام الأمر  `{echo} ` وكان باستطاعتها أخذ طلب واحد فقط، الآن باستخدام المتغيرات بإمكان هيدي أن تأخذ طلبات الطعام والمشروبات أيضًا!\n"
                example_code: "```\n{print} أهلا بكم في مطعم هيدي.\n{print} أطباق اليوم هي البيتزا واللازانيا.\nالوجبة {is} {ask} ماذا تودّ أن تأكل؟\n{print} اختيار رائع! الوجبة هي وجبتي المفضلة.\nالصلصة {is} {ask} هل تفضل الصلصة باللحم أم بالخضار؟\n{print}الوجبة مع الصلصة في طريقها إليك.\nالمشروب {is} {ask}ماذا تود أن تشرب؟\n{print} شكرًا لطلبك من مطعمنا.\n{print}الوجبة الخاصة بك بالإضافة إلى المشروب ستصلك قريبًا، بالهناء والشفاء.\n```\n"
                start_code: '#ضع الكود الخاص بك هنا'
                story_text_2: "## تحدي\nهل بإمكانك أن تجعل الكود مفصّلًا أكثر؟ بإضافة مشروبات إلى الطلب مثلًا؟\n"
                example_code_2: "```\n{print} أهلا بكم في مطعم هيدي.\n{print} أطباق اليوم هي البيتزا واللازانيا.\nالوجبة {is} {ask} ماذا تودّ أن تأكل؟\n{print} اختيار رائع! الوجبة هي وجبتي المفضلة.\nالصلصة {is} {ask} هل تفضل الصلصة باللحم أم بالخضار؟\n{print}الوجبة مع الصلصة في طريقها إليك.\nالمشروب {is} _\n```\n"
            12:
                story_text: "## Restaurant\nFrom this level on you can use decimal numbers to make you menu more realistic.\n"
                example_code: "```\nprice = 0\nfood = {ask} 'What would you like to order?'\ndrink = {ask} 'What would you like to drink?'\n{if} food {is} 'hamburger'\n    price = price + 6.50\n{if} food {is} 'pizza'\n    price = price + 5.75\n{if} drink {is} 'water'\n    price = price + 1.20\n{if} drink {is} 'soda'\n    price = price + 2.35\n{print} 'That will be ' price ' dollar, please'\n```\n"
                start_code: '# place your code here'
            11:
                story_text: "## Restaurant\nWe can use the `{for} i {in} {range} 1 {to} 5` to {print} the orders from multiple customers in an orderly manner.\n"
                example_code: "```\n{print} 'Welcome to Restaurant Hedy!'\npeople = {ask} 'For how many people would you like to order?'\n{for} i {in} {range} 1 {to} people\n    {print} 'Order number ' i\n    food = {ask} 'What would you like to eat?'\n    {print} food\n    {if} food {is} fries\n        sauce = {ask} 'What kind of sauce would you like with that?'\n        {print} sauce\n    drinks = {ask} 'What would you like to drink?'\n    {print} drinks\nprice = 4 * people\n{print} 'That will be ' price ' dollars, please!'\n```\n"
                start_code: '# place your code here'
            10:
                story_text: "## Restaurant\nIn this level you'll learn how to easily {ask} your guests' orders in a short code.\n"
                example_code: "```\ncourses = appetizer, main course, dessert\n{for} course {in} courses\n    food = {ask} 'What would you like to eat as your ' course '?'\n    {print} food ' will be your ' course\n```\n"
                story_text_2: "Of course, you could also order for multiple people!\n"
                example_code_2: "```\ncourses = appetizer, main course, dessert\nnames = Timon, Onno\n{for} name {in} names\n    {for} course {in} courses\n        food = {ask} name ', what would you like to eat as your ' course '?'\n        {print} name ' orders ' food ' as their ' course\n```\n"
                start_code: courses = appetizer, main course, dessert
            9:
                example_code: "```\n{print} 'Welcome to Hedys restaurant!'\npeople = {ask} 'How many people will be joining us today?'\n{print} 'Great!'\nprice = 0\n{repeat} people {times}\n    food = {ask} 'What would you like to order?'\n    {print} food\n    {if} food {is} fries\n        price = price + 3\n        sauce = {ask} 'What kind of sauce would you like with your fries?'\n        {if} sauce {is} no\n            {print} 'no sauce'\n        {else}\n            price = price + 1\n            {print} 'with ' sauce\n    {if} food {is} pizza\n        price = price + 4\n{print} 'That will be ' price ' dollar'\n{print} 'Enjoy your meal!'\n```\n"
                story_text: "## Restaurant\nIn this level you can use nesting to make your restaurant more realistic and more fun!\nFor example you would {ask} for sauce {if} somebody orders fries, but you wouldn't {if} someone orders pizza!\nCheck out the example, and try this at your own virtual restaurant!\n"
                start_code: '# place your code here'
            3:
                story_text: "## إختيار مطعم عشوائياً\nهل تواجهة صعوبة في تحديد ماذا تريد على العشاء؟ دع هيدي تساعدك فالإختيار\nببساطة يمكنك إضافة قائمة بأفضل (أو أسوء) وجبات وهيدي سوف تختار لك وجبة عشاؤك عشوائياً \nويمكنك جعلها أكثر متعة، بأن تترك هيدي تختار لك أيضاً سعر عشاؤك! على ماذا ستحصل فالنهاية؟\n## تحدي\nهل يمكنك صنع نسختك الخاصة من أحداث إختيار مطعم عشوائياً؟\n"
                example_code: "```\n{print} مرحباً في هيدي مطعم الإختيار العشوائي!\n{print} المطعم الوحيد الذي يمكنه إختيار لك وجبة وسعرها بطريقة عشوائية!\nالمقبلات {is} سلطة، حساء، كارباتشو\nالرئيسي {is} بيتزا، براعم بروكسل، معكرونة\nالتحلية {is} براوني، مثلجات، أجبان فرنسية\nالمشروبات {is} مشروب غازي، عصير، ماء\nالأسعار {is} ١ دولار، ١٠ دولارات، ١٠٠ دولار\n{print} ستبدأ بـ : المقبلات {at} {random}\n{print} وبعدها سنقدم لك: الرئيسي {at} {random}\n{print} وللتحلية: التحلية {at} {random}\n{print} وستحصل على المشروبات {at} {random} لشربه\n{print} سيكلفك هذا: الأسعار {at} {random}\n{print} شكراً لك، إستمتع بوجبتك!\n```\n"
                story_text_2: "## حساسية\nهل يعاني زبونك من أي حساسية أو لا يحب نوع معين من الأطباق؟ إذاً يمكنك إستخدام الأمر `{remove}`لإزالة هذا النوع من قائمة طعامك.\n"
                example_code_2: "```\n{print} مخفوق اللبن الغامض\nنكهات {is} فراولة، شوكولاتة، فانيليا\nحساسية هي {ask} هل لديك حساسية من أي نكهات؟\n_\n{print} ستحصل على نكهة {at} {random} نكهات\n```\n"
                start_code: '# اكتب الكود الخاص بك هنا'
            15:
                story_text: "## Restaurant\nWith the `{while}` you can make sure your costumers can keep adding orders until they are done.\n"
                example_code: "```\n{print} 'Welcome at McHedy'\nmore = 'yes'\n{while} more == 'yes'\n    order = {ask} 'What would you like to order?'\n    {print} order\n    more = {ask} 'Would you like to order anything {else}?'\n{print} 'Thank you!'\n"
                start_code: '# place your code here'
            13:
                story_text: "## Restaurant\nIn this level we can use the new commands to upgrade our restaurant.\nWe use `{and}` to see {if} two things are both the case.\n"
                story_text_2: "We use `{or}` to see {if} one our of two things is the case.\n"
                example_code_2: "```\ndrinks = {ask} 'What would you like to drink?'\n{if} drinks {is} 'water' {or} drinks {is} 'juice'\n    {print} 'Thats a healthy choice'\n```\n"
                example_code: "```\nprice = 10\nfood = {ask} 'What would you like to eat?'\ndrinks = {ask} 'What would you like to drink?'\n{if} food {is} 'sandwich' {and} drinks {is} 'juice'\n    {print} 'Thats our discount menu'\n    price = price - 3\n{print} 'That will be ' price ' dollars'\n```\n"
                start_code: '# place your code here'
            8:
                story_text: "## Restaurant\nIn this level you can make your virtual restaurant more elaborate by repeating multiple lines of code. Like this:\n"
                example_code: "```\n{print} 'Welcome to Hedys restaurant!'\npeople = {ask} 'How many people will be joining us today?'\n{print} 'Great!'\n{repeat} people {times}\n    food = {ask} 'What would you like to order?'\n    {print} food\n{print} 'Thank you for ordering!'\n{print} 'Enjoy your meal!'\n```\n\n## Challenge\nOf course, this code can be expanded with more items on the menu, offering drinks, and/or multiple courses, so feel free to add as many options as you like!\n"
                start_code: '# place your code here'
                story_text_2: "## Challenge\nOf course, this code can be expanded with more items on the menu, offering drinks, and/or multiple courses, so feel free to add as many options as you like!\n"
            6:
                story_text: "## Restaurant\nIn this level you can use maths to calculate the total price of your customer's order, which can make your virtual restaurant more realistic.\n"
                example_code: "## Example Hedy code (Simple)\nYou can make a simple restaurant code, like this:\n```\n{print} 'Welcome to Hedys restaurant'\n{print} 'Here is our menu:'\n{print} 'Our main courses are pizza, lasagne, or spaghetti'\nmain = {ask} 'Which main course would you like?'\nprice = 0\n{if} main {is} pizza price = 10\n{if} main {is} lasagne price = 12\n{if} main {is} spaghetti price = 8\n{print} 'You have ordered ' main\n{print} 'That will be ' price ' dollars, please'\n{print} 'Thank you, enjoy your meal!'\n```\n"
                story_text_2: "But you can also add many more things to your virtual restaurant, for example more courses.\n"
                example_code_2: "## Example Hedy code(Elaborate)\nIn this example there are three courses, which requires more code and more additions in calculating the price.\n```\n{print} 'Welcome to Hedys restaurant'\n{print} 'Here is our menu:'\n{print} 'Our starters are salad, soup, or carpaccio'\n{print} 'Our main courses are pizza, lasagne, or spaghetti'\n{print} 'Our desserts are brownie, icecream, or milkshake'\nstarter = {ask} 'Which starter would you like to have?'\nmain = {ask} 'Which main course would you like?'\ndessert = {ask} 'Which dessert do you pick?'\nprice = 0\n{if} starter {is} soup price = price + 6 {else} price = price + 7\n{if} main {is} pizza price = price + 10\n{if} main {is} lasagne price = price + 12\n{if} main {is} spaghetti price = price + 8\n{if} dessert {is} brownie price = price + 7\n{if} dessert {is} icecream price = price + 5\n{if} dessert {is} milkshake price = price + 4\n{print} 'You have ordered ' starter ' , ' main ' and ' dessert\n{print} 'That will be ' price ' dollars, please'\n{print} 'Thank you, enjoy your meal!'\n```\n## Challenge\nYou can add many more things to your virtual restaurant. For example, can you...\n- {ask} how many people are coming and multiply the price by that amount?\n- add another course?\n- give people a discount when they enter a (secret) couponcode?\n- add a children's menu?\n- think of other fun things to add?\n"
                start_code: '# place your code here'
            7:
                story_text: "## Restaurant\nIn this level you've learned how to use the {repeat} command to repeat a line of code a certain amount of times.\nYou can use that in your restaurant to {ask} multiple people what they'd like to eat. Like this:\n\n```\n{print} 'Welcome to Hedys restaurant!'\npeople = {ask} 'How many people are joining us today?'\n{repeat} people times food = {ask} 'What would you like to eat?'\n{print} 'Thanks for your order! Its coming right up!'\n```\n"
                start_code: '# place your code here'
                example_code: "```\n{print} 'Welcome to Hedys restaurant!'\npeople = {ask} 'How many people are joining us today?'\n{repeat} people times food = {ask} 'What would you like to eat?'\n{print} 'Thanks for your order! Its coming right up!'\n```\n"
            5:
                story_text: "## المطعم\nفي هذا المستوى ، يتيح لك الأمر `{if}` `{ask}` أسئلة على عملائك وإعطاء ردود مختلفة على الإجابات.\nفي المثال أدناه ، ترى أنه يمكنك `{ask}` العميل `{if}` يريدون سماع العروض الخاصة ويمكن لـ هيدي الرد وفقًا لذلك.\n"
                example_code: "```\n{print} 'اهلًا وسهلًا في مطعم هيدي !'\nالعرض_الخاص {is} {ask} \"هل تود الاستماع إلى عروضنا الخاصة اليوم؟\"\n{if} العرض_الخاص {is} نعم {print} 'طبقنا المميز اليوم هو الدجاج والأرز.' {else} {print} 'لا مشكلة.'\nالطعام {is} {ask} 'ماذا تريد أن تأكل ؟'\n{print} 'واحد من ' الطعام '، يأتي مباشرة !'\nالشراب {is} {ask} 'ماذا تريد أن تشرب معه ؟'\n{if} الشراب {is} كولا {print} 'Im sorry, we are out of cola!' {else} {print} 'إختيار عظيم !'\nشيء_آخر {is} {ask} 'هل تحب ان تطلب شيئًا {else} ؟'\n{print} 'دعني أكرر طلبك ...'\n{print} 'واحد  الطعام '\n{if} الشراب {is} كولا {print} 'و...' {else} {print} 'واحد  الشراب '\n{if} شيء_آخر {is} لا {print} 'لك هذا !' {else} {print} 'واحد  شيء_آخر'\n{print} 'شكرًا لك على زيارتك وتنمنى أن ينال الطعام على اعجابك !'\n```\n"
                start_code: '# place your code here'
                story_text_2: "## تحدي\nهل يمكنك التفكير في المزيد من الأسئلة `{ask}` على العملاء عند قيامهم بالطلب ، وتكوين ردود مختلفة على إجاباتهم باستخدام الأمر `{if}`؟\n"
            4:
                story_text: "## Restaurant\nIn this level you have to use quotation marks when using the `{print}` command.\nCan you make your code from the previous levels work in this level too by adding the quotation marks?\n\nBe careful! In the previous levels apostrophes were allowed in the text, but in this level Hedy will confuse them for quotation marks and the code will not work!\nSo instead of typing  `{print} Today we're serving pizza` , you should type `{print} 'Today we are serving pizza'`."
                start_code: '# place your code here'
                example_code: "## Example Hedy Restaurant\n```\n{print} 'Welcome to Hedys restaurant!'\n{print} 'Today we are serving pizza or lasagna.'\nfood {is} {ask} 'What would you like to eat?'\n{print} 'Great choice! The ' food ' is my favorite!'\ntopping {is} {ask} 'Would you like meat or veggies on that?'\n{print} food ' with ' topping ' is on its way!'\ndrinks {is} {ask} 'What would you like to drink with that?'\n{print} 'Thank you for your order.'\n{print} 'Your ' food ' and ' drinks ' will be right there!'\n```\n"
    fortune:
        name: العراف
        levels:
            10:
                story_text_2: We can also make a Harry Potter themed fortune teller.
                example_code_2: "```\nhouses = Gryffindor, Slytherin, Hufflepuff, Ravenclaw\nsubjects = potions, defence against the dark arts, charms, transfiguration\nfears = Voldemort, spiders, failing your OWL test\nnames = Harry, Ron, Hermione\n{for} name in names\n    {print} name ' is placed in ' houses {at} {random}\n    {print} name ' is great at ' subjects {at} {random}\n    {print} name 's greatest fear is ' fears {at} {random}\n```\n"
                story_text: "## Fortune Teller\nIn this level you'll learn how to program the game MASH (mansion, apartement, shack, house). In this game you can predict for all the players at once, what their future will look like.\n"
                example_code: "```\nhouses = mansion, apartment, shack, house\nloves = nobody, a royal, their neighbour, their true love\npets = dog, cat, elephant\nnames = Jenna, Ryan, Jim\n{for} name {in} names\n    {print} name ' lives in a ' houses {at} {random}\n    {print} name ' will marry ' loves {at} {random}\n    {print} name ' will get a ' pets {at} {random} ' as their pet.'\n    {sleep}\n```\n"
                start_code: '# place your code here'
            8:
                story_text: "## Fortune Teller\nIn the previous levels you've learned how to use repeat to make the fortune teller answer 3 questions in a row, but we had a problem with printing the questions.\nNow that problem is solved, because of the new way of using the repeat command.\nIn the next example you can have your fortune teller {ask} 3 questions and also print them!\n"
                example_code: "```\n{print} 'I am Hedy the fortune teller!'\n{print} 'You can {ask} me 3 questions.'\nanswers = yes, no, maybe\n{repeat} 3 {times}\n   question = {ask} 'What do you want to know?'\n   {print} question\n   {sleep}\n   {print} 'My crystal ball says...' answers {at} {random}\n```\n"
                start_code: '# place your code here'
            7:
                story_text: "## Fortune Teller\nIn this level you can use the `{repeat}` command to make your machine tell multiple fortunes at once.\n"
                example_code: "```\n{print} 'Im Hedy the fortune teller!'\n{print} 'You can {ask} 3 questions!'\n{repeat} 3 {times} question = {ask} 'What do you want to know?'\nanswer = yes, no, maybe\n{repeat} 3 {times} {print} 'My crystal ball says... ' answer {at} {random}\n```\n\n## Challenge\nAs you can see, the questions aren't printed in this example. That's because the variable `question` was changed 3 times.\nEvery time the player fills in the new answer, Hedy overwrites the previous one, so the first answer the player gave is forgotten.\nThis means you can't print all the questions this way.\n\nBy using 3 different variables instead of 1 (for example `question1` , `question2` and `question3`), you could solve the problem and print the questions.\nThis does mean that you can only use `{repeat}` for the answers, and you will have to ask and print all the questions separately.\nCan you do it?\n\nIn the upcoming levels the layout of {repeat} command will change, which enables you to repeat multiple lines at once.\n"
                start_code: '# place your code here'
                story_text_2: "## Challenge\nAs you can see, the questions aren't printed in this example. That's because the variable `question` was changed 3 times.\nEvery time the player fills in the new answer, Hedy overwrites the previous one, so the first answer the player gave is forgotten.\nThis means you can't print all the questions this way.\n\nBy using 3 different variables instead of 1 (for example `question_1` , `question_2` and `question_3`), you could solve the problem and print the questions.\nThis does mean that you can only use `{repeat}` for the answers, and you will have to ask and print all the questions separately.\nCan you do it?\n\nIn the upcoming levels the layout of {repeat} command will change, which enables you to repeat multiple lines at once.\n"
            6:
                story_text: "## Fortune Teller\nIn this level you can use math in your predictions as a fortune teller. This allows you to make up (silly) formulas to calculate the future.\nFor example you could calculate how rich you'll get or how many kids you will have when you grow up.\n"
                example_code: "```\n{print} 'I am Hedy the fortune teller!'\n{print} 'I can predict how many kids youll get when you grow up!'\nage = {ask} 'How old are you?'\nsiblings = {ask} 'How many siblings do you have?'\nlength = {ask} 'How tall are you in centimetres?'\nkids = length / age\nkids = kids - siblings\n{print} 'You will get ...'\n{sleep}\n{print} kids ' kids!'\n```\n\n## Example Silly Fortune Teller\nIf the previous example wasn't silly enough for you, take a look at this one!\n\n```\n{print} 'Im Hedy the silly fortune teller!'\n{print} 'I will predict how smart you are!'\nfootball = {ask} 'On a scale 1-10 how much do you love football?'\nbananas = {ask} 'How many bananas did you eat this week?'\nhygiene = {ask} 'How many times did you wash your hands today?'\nresult = bananas + hygiene\nresult = result * football\n{print} 'You are ' result ' percent smart.'\n```\n"
                start_code: '# place your code here'
            4:
                example_code: "```{print} 'انا العارفة هيدي!'\nالسؤال {is} {ask} 'ماذا تريد ان تعرف ؟'\n{print} 'هذا هو السؤال : ' السؤال\nالاجابات {is} نعم، لا، ربما\n{print} 'تقول الكرة السحرية الخاصة بي...'\n{sleep} 2\n{print} الاجابات {at} {random}\n```\n"
                story_text: "## العراف\nفي هذا المستوى لن تتعلم أوامر جديدة، لكنك ستتدرب على استخدام علامات الاقتباس. \nتستطيع إعادة كتابة الكود الخاص بك في المستوى الثالث، ولا تنسَ أن تضع علامات الاقتباس في الأماكن الصحيحة.\n\nMind that in level 3, we couldn't use the word 'question' as both the name of the variable and a normal word that could be printed.\nThe quotation marks in level 3 make this possible!\n\nImportant! Mind that now that we're using quotation marks, Hedy will get confused when you use the apostrophe for contractions like I'm or What's.\nMake sure to remove those apostrophes and change the spelling to Im or Whats.\n"
                start_code: '# place your code here'
            1:
                example_code: "```\n{print} مرحبًا، انا العرافه هيدي!\n{ask} من انت؟\n{print} دعني اري في كرتي السحرية\n{print} اجل.. اجل.. لقد عرفت من انت!\n{echo} اسمك هو \n```\n"
                story_text: "## العراف\nهل شاهدت من قبل قصة العراف الذي يرى المستقبل؟ او لعبت بالكرة السحرية التي يستخدمها العراف؟\nإذًا، انت فالأغلب تعلم انه لا يستطيع ان يرى المستقبل فعلاً.. ولكنها لاتزال لعبة ممتعة!\n\nفي المستويات القادمة ستتعلم كيفية صناعة العراف الالكتروني الخاص بك\nولكن فالمستوى الاول ستتعرف على هيدي العرافه التي تستخدم {echo} لتتنبأ بإجابات اللاعبين.\nمثل:\n"
                start_code: '# اكتب الكود الخاص بك هنا'
                story_text_2: "## تحدي\nالان العرافه هيدي تستطيع التنبوء باسمك فقط. هل تستطيع تكملة الكود لجعلها تتنبأ بأشياء اخرى عنك؟ \nمن الواضح ان هيدي ليست جيدة كفاية لتتنبأ المستقبل، تستطيع فقط تكرار الإجابة التي اعطاها لها اللاعبين\nلذلك، يمكنك النظر فالمستوى٢  لتحسين العراف الالكتروني الخاص بك.\n"
            12:
                story_text: "## Fortune Teller\nIn this level you can make your fortunes multiple words. Like in this example below:\n"
                example_code: "```\nfortunes = 'you will be rich', 'you will fall in love', 'you will slip on a banana peel'\n{print} 'I will take a look in my crystall ball for your future.'\n{print} 'I see... I see...'\n{sleep}\n{print} fortunes {at} {random}\n```\n"
                start_code: '# place your code here'
            5:
                story_text: "## العراف\nفي هذا المستوى ستتعلم (سرًا) ترجيح الاحتمالات لصالحك ، عند استخدام العراف!\nباستخدام `{if}` و `{else}` يمكنك التأكد من أنك ستحصل دائمًا على صوت جيد ، في حين أن الآخرين قد لا يفعلون ذلك.\nتحقق من هذا المثال لمعرفة كيف\n"
                example_code: "```\n{print} 'انا العرافة هيدي!'\n{print} 'يمكنني أن أتوقع {if} ستفوز باليانصيب غدًا!'\nشخص {is} {ask} 'من انت ؟'\n{if} شخص {is} هيدي {print} 'أنت بتأكيد ستفوز!\U0001F929' {else} {print} 'حظ سيء! شخص آخر سيفوز !\U0001F62D'\n```\n"
                story_text_2: "## تحايل على اللعبة \nاستبدل هيدي باسمك في السطر الأخير ، وسيتوقع هيدي دائمًا أنك ستفوز باليانصيب ولن يفوز الآخرون!\nبالطبع قد يثير هذا بعض الشكوك لدى اللاعبين الآخرين ... لتجنب ذلك ، يمكنك التأكد من أن هيدي يعطي إجابات مختلفة في كل مرة تقوم فيها بتشغيل الكود.\nلكن بالطبع ، لا يزال يمنحك إجابة إيجابية واللاعبين الآخرين إجابة سلبية.\n"
                example_code_2: "```\n{print} 'Im Hedy the fortune teller!'\n{print} 'I can predict {if} you will win the lottery tomorrow!'\nperson {is} {ask} 'Who are you?'\ngoodanswer {is} Hurray! You win!, You will definitely win!, We have a winner!\nbadanswer {is} Bad luck! Try again!, Another person will win, You lose!\n{if} person {is} Hedy {print} goodanswer {at} {random} {else} {print} badanswer {at} {random}\n```\n\n## Challenges\nThis concept can be used to make may different programs, just be creative! For example you could create a machine that predicts that your favorite sports team will beat all the competitors!\nOr you could make  Snow White's magic mirror on the wall, to tell everyone you are the fairest of them all!\nLet your imagination do the work!\n"
                start_code: '# place your code here'
                story_text_3: "## تحديات\nيمكن استخدام هذا المفهوم لعمل برامج مختلفة ، فقط كن مبدعًا! على سبيل المثال ، يمكنك إنشاء آلة تتوقع أن فريقك الرياضي المفضل سيتغلب على جميع المنافسين!\nأو يمكنك عمل مرآةالاميرة السحرية على الحائط ، لتخبر الجميع أنك أجملهم جميعًا!\nدع خيالك يقوم بالعمل\n"
            3:
                example_code: "\nفي هذا المثال يمكن لللاعب استخدام {ask} ليسأل هيدي العرافة سؤال بنعم أو لا وهيدي سوف تختار لك إجابة عشوائية في كل مرة.\n```\n{print} أنا هيدي العرافة!\nسؤال {is} {ask} ماذا تود أن تعرف؟\n{print} سؤالك هو: سؤال\nإجابات {is} نعم، لا، ربما\n{print} كرتي السحرية تقول...\n{sleep} 2\n{print} إجابات {at} {random}\n```\n"
                story_text: "## العراف\nفي المستويات السابقة استطعت أن تصنع أول عراف آلي لك، ولكن لم تستطع هيدي التنبؤ بأي شيء، لقد رددت فقط بعض الإجابات من {echo}.\nولكن في هذا المستوى يمكنك استخدام المتغيرات و الأمر الجديد الذي تعلمته `{at} {random}` لكي تجعل هيدي تتنبأ لك الإجابة حقًا. تحقق من الكود الموضح فالمثال و جرب بنفسك:\n"
                start_code: '# اكتب الكود الخاص بك هنا'
                story_text_2: "## تحدي\nالان هيدي العرافة تستطيع الإجابة بنعم، لا او ربما فقط. هل يمكنك أن تعطيها خيارات لإجابات أخرى مثل \"بالتأكيد\" او \"{ask} مرة أخرى\".\n"
        description: Let Hedy predict the future
        default_save_name: العراف
    haunted:
        description: اهرب من بيت الأشباح
        default_save_name: بيت الأشباح
        levels:
            1:
                story_text: "## بيت الأشباح\nفي هذه المغامرة ستتعلم صنع لعبة بيت الأشباح.. وهي اختيار الباب الصحيح من بين الابواب الاخرى لتتمكن من الهروب من البيت\nاذا اخترت الباب الصحيح سوف تنجو، والا سيمسك بك وحش مخيف و .....\n\nفي المستوى ١ سنبدأ لعبة بيت الأشباح بسرد قصة وسؤال اللاعب عن الشبح الذي سيراه في البيت المسكون.\n"
                start_code: '{print} كيف وصلت الى هنا؟'
                example_code: "```\n{print} ما الذي جاء بي الى هنا؟\n{print} اتذكر ان صديقي اخبرني ان اتي الي هذا القصر القديم...\n{print} ولكن فجأة اصبح كل شيء اسود.\n{print} كيف انتهى بي المطاف في هذا الطابق..؟\n{print} رأسي تؤلمني كثيرًا.. كأنه تم ضربي بمضرب بيسبول كبير!\n{print} ما هذا الصوت؟؟\n{print} يا الهي! اعتقد انني لست الوحيد في هذا القصر!\n{print} يجب علي الخروج من هنا!\n{print} هناك ٣ ابواب امامي..\n{ask} ما الباب الذي علي اختباره للخروج؟\n{echo} اختار الباب \n{print} ...؟\n```\n"
                story_text_2: "## تحدي\nهل يمكنك تكملة القصة المخيفة هذه؟ او ابتكار قصتك الخاصه لبيت الاشباح؟\n"
            2:
                story_text: "## بيت الأشباح\nفي بيت الأشباح في هذا المستوى يمكنك اختيار الأشباح الخاصة بك باستخدام الرموز التعبيرية، أو باستخدام الكلمات طبعًا.\n"
                start_code: الشبح١ {is} _
                example_code: "```\nالشبح_١ {is} \U0001F47B\nالشبح_٢ {is} \U0001F921\nالشبح_٣ {is} \U0001F476\n{print} عندما تدخل إلى بيت الأشباح.\n{print} فجأةً ترى الشبح_١\n{print} تهرب إلى الغرفة الأخرى، لكنك تجد الشبح_٢ بانتظارك هناك!\n{print} أوه! لا. تصل سريعًا إلى المطبخ.\n{print} لكن سرعان ما تدخله الشبح_٣ يهاجمك!\n```\n"
                story_text_2: "## تحدي\nفي المثال أعلاه، قمت بتعريف الأشباح مسبقًا باستخدام المتغيرات، لذلك ترى نفس النتيجة دائمًا عند تنفيذ الكود.\nهل تستطيع إضافة الأمر `{ask}` ليصبح بيت الأشباح ممتعًا أكثر حيث يستطيع اللاعبين اختيار أشباحهم الخاصة؟\n"
                example_code_2: "```\nالشبح_١ {is} _\nالشبح_٢ {is} _\nالشبح_٣ {is} _\n{print} عندما تدخل إلى بيت الأشباح.\n{print} فجأةً ترى الشبح_١\n{print} تهرب إلى الغرفة الأخرى، لكنك تجد الشبح_٢ بانتظارك هناك!\n{print} أوه! لا. تصل سريعًا إلى المطبخ.\n{print} لكن سرعان ما تدخله الشبح_٣ يهاجمك!\n```\n"
            14:
                story_text: "## Haunted House\nIn this level you can use the `<` and `>` symbol to introduce lives to your game.\n"
                example_code: "```\n{print} 'Escape from the haunted house'\nlives = 3\ndoors = 1, 2, 3\nmonsters = 'the wicked witch', 'a zombie', 'a sleeping 3 headed dog'\n{for} i {in} {range} 1 {to} 10\n    {if} lives > 0\n        good_door = doors {at} {random}\n        monster = monsters {at} {random}\n        chosen_door = {ask} 'Which door do you choose?'\n        {if} good_door == chosen_door\n            {print} 'You have chosen the correct door'\n        {else}\n            {print} 'You see...' monster\n            {if} monster == 'a sleeping 3 headed dog'\n                {print} 'Pffieuw.... Its asleep'\n            {else}\n                {print} 'You lose one life'\n                lives = lives -1\n    {else}\n        {print} 'GAME OVER'\n```\n"
                start_code: '# place your code here'
            11:
                story_text: "## Haunted House\nIn this level we've changed the repeat command and we've added a line to our haunted house that tells the player in which room they are.\n"
                start_code: "{print} 'Escape from the haunted house!'"
                example_code: "```\n{print} 'Escape from the Haunted House!'\nplayer {is} alive\ndoors = 1, 2, 3\nmonsters = zombie, vampire, giant spider\n{for} i {in} {range} 1 {to} 3\n    {if} player {is} alive\n        correct_door = doors {at} {random}\n        {print} 'Room ' i\n        {print} 'There are 3 doors in front of you...'\n        chosendoor = {ask} 'Which door do you choose?'\n        {if} chosendoor {is} correct_door\n            {print} 'No monsters here!'\n        {else}\n            {print} 'You are eaten by a ' monsters {at} {random}\n            player = dead\n    {else}\n        {print} 'GAME OVER'\n{if} player {is} alive\n    {print} 'Great! You survived!'\n```\n"
            9:
                story_text: "## Haunted House\nIn this level you can use nesting, which allows you to make the haunted house even more interactive!\n"
                example_code: "```\n{print} 'Escape from the Haunted House!'\nplayer = alive\ndoors = 1, 2, 3\nmonsters = zombie, vampire, giant spider\n{repeat} 3 {times}\n    {if} player {is} alive\n        correct_door {is} doors {at} {random}\n        {print} 'There are 3 doors in front of you...'\n        chosen_door = {ask} 'Which door do you choose?'\n        {if} chosen_door {is} correct_door\n            {print} 'No monsters here!'\n        {else}\n            {print} 'You are eaten by a ' monsters {at} {random}\n            player = dead\n    {else}\n        {print} 'GAME OVER'\n{if} player {is} alive\n    {print} 'Great! You survived!'\n```\n## Challenge\nNow it's very hard to win this game, can you make it easier to win?\nFor example by only having 1 wrong door and 2 correct doors instead of 1 correct door en 2 wrong ones?\n"
                start_code: "{print} 'Escape from the haunted house!'"
            5:
                story_text: "## بيت الأشباح \nحتى هذا المستوى ، طلبت لعبة المنزل المسكون دائمًا من اللاعب اختيار باب، ولكن كما لاحظت، لم يكن عليهم حقًا الإجابة بشكل صحيح.\nإذا قام اللاعب بإجابة عشوائية تمامًا ، فستظل اللعبة تعمل وقد يفوز اللاعب (على الرغم من عدم اختيار الباب).\nفي هذا المستوى ، يمكنك الفوز باللعبة فقط باختيار نفس الباب الذي اختاره هيدي عشوائيًا.\n\n## تحدي\nهل يمكنك العثور على الكلمات الأربع المفقودة لإكمال الكود؟\n"
                example_code: "```\n{print} 'اهرب من بيت الأشباح !'\n{print} 'أمامك 3 أبواب ...'\nالأبواب {is} 1, 2, 3\nالوحوش {is} مستذئب، مومياء، مصاص دماء، زومبي\nالباب_الذي_إخترته {is} {ask} 'أي باب تختار؟'\n{print} 'انت إخترت باب ..' الباب_الذي_إخترته\n{sleep}\nالباب_الصحيح  {is} الأبواب {at} {random}\n____  {print} 'رائعة! لقد نجوت!'\n{else} {print} 'أوه لا! لقد تم أكلك من قبل ... \"الوحوش {at} {random}\n```\n"
                start_code: '# place your code here'
            16:
                story_text: "## Haunted House Game\nThis haunted house game uses the connection between the lists you can use in this level.\nFor example: all the properties that belong to the zombie are first in all the lists, witch second and vampire third.\nCheck out the code!\n"
                example_code: "```\nnumbers = [1, 2, 3]\ni = numbers[random]\nhint = ['growling', 'a cackling laugh', 'fluttering batwings']\nmonsters = ['zombie', 'witch', 'vampire']\nbad_fate = ['Your brain is eaten', 'You are forever cursed', 'You are bitten']\ngood_fate = ['You throw the ham. The zombie is distracted and starts etaing it.', 'You set the curtains on fire. The witch flees out of fear for the fire', 'The vampire hates garlic and flees']\nweapons = ['ham', 'lighter', 'garlic']\n{print} 'You are standing in front of an old mension'\n{print} 'Something is not right here'\n{print} 'You hear ' hint[i]\n{print} 'You are going to explore it'\n{print} 'You enter the kitchen en see a lighter, a raw ham and a garlic.'\nyour_weapon = {ask} 'What do you bring with you?'\n{print} 'With your ' your_weapon ' you enter the living room'\n{print} 'There you find a ' monsters[i]\nneeded_weapon = weapons[i]\n{if} your_weapon == needed_weapon\n    {print} 'You use your ' your_weapon\n    {print} good_fate[i]\n    {print} 'YOU WIN!'\n{else}\n    {print} 'You have chosen the wrong weapon...'\n    {print} bad_fate[i]\n    {print} 'GAME OVER'\n```\n"
                start_code: '# place your code here'
            4:
                story_text: "## بيت الأشباح\nفي هذا المستوى ستتعلم كيف تستخدم علامات الاقتباس في الألعاب الخاصة بك.\nهل يمكنك تطبيق ما تعلمته عن علامات الاقتباس على قصة بيت الأشباح؟\n"
                start_code: '#اكتب الكود الخاص بك هنا'
                example_code: "```\n{print} _ اهرب من بيت الأشباح! _\n{print} _ هناك ثلاثة ابواب أمامك _\nالخيار {is} {ask} _ ما هو رقم الباب الذي ستختاره؟ _\n{print} _ لقد اخترت الباب رقم _ الخيار\nالأشباح {is} مصاص دماء, مومياء, لا شيء\n{print} _أنت ترى..._\n{sleep}\n{print} الأشباح {at} {random}\n ```\n"
            3:
                story_text: "## لعبة بيت الأشباح\nفي المستويات السابقة استطعت كتابة مقدمة للعبة بيت الأشباح الخاصة بك، ولكن ربما لاحظت أن القصة غالباً ما ستنتهي نهاية مروعة.\nستتمكن في هذا المستوى من جعل قصتك أكثر تفاعلاً من خلال تغيير بعض مخرجات اللعبة، في بعض الأحيان ستأكلك الأشباح ولن تستطيع الخروج من البيت وفي أحيانٍ أخرى ستنجو بالهرب!\nدع هيدي تقرر ذلك عشوائيًا!\n"
                example_code: "```\n{print} الهروب من بيت الأشباح!\n{print} هناك ٣ أبواب أمامك...\nالإختيار {is} {ask} أيأً من الأبواب الثلاثة تختار؟\n{print} إخترت الباب رقم ... الإختيار\nالشبح {is} زومبي، مصاص دماء، لا شيء لقد استطعت الهرب\n{print} انت ترى...\n{sleep}\n{print} الشبح {at} {random}\n```\n"
                start_code: '# اكتب الكود الخاص بك هنا'
                story_text_2: "## تحدي\nهذه القصة تعتبر إلى حدٍ ما مباشرة، ربما يمكنك إضافة بعض الأحداث المرعبة لتجعلها أكثر إثارة.\nوكذلك الآن هذا المثال يعطيك نتائج محدودة للغاية، هناك فقط ٣ خيارات حول ما المُخبأ وراء كل باب. ربما يمكنك التفكير في المزيد من الوحوش و إضافتها للقائمة!\n"
                story_text_3: "## تغيير اللعبة إلى برنامج تلفزيوني للألعاب!\nوأخيراً، نود أن نتحداك لتغيير هذه اللعبة إلى برنامج للألعاب (كالذي يعرض على التلفاز) حيث تختار باب أو حقيبة من بين الأخرين و تكون تحتوي على مبلغ كبير!\nهل يمكنك فعلها؟\n"
                example_code_3: "```\n{print} برنامجنا الضخم للألعاب!\n{print} هناك ٣ حقائب امامك...\n{print} فقط واحدة منهم تحتوي على _\n_\n```\n"
        name: بيت الأشباح
    piggybank:
        name: البنك الإلكتروني
        description: احسب مصروفك ومدخراتك!
        default_save_name: البنك الإلكتروني
        levels:
            14:
                story_text: "## Piggybank\nIn this level you can let Hedy tell you {if} you have saved up enough money!\n"
                example_code: "```\nmoney = {ask} 'How much money have you saved?'\nwish = {ask} 'How much money do you need?'\nallowance = {ask} 'How much pocket money do you get each week?'\nto_save = wish - money\nweeks = to_save / allowance\n{if} wish > money\n    {print} 'You need to save up some more!'\n    {print} 'Youll need ' weeks ' more weeks.'\n{else}\n    {print} 'Great! You have enough'\n    {print} 'Lets go shopping!'\n```\n"
                start_code: '# place your code here'
            12:
                story_text: "## Piggy Bank\nIn this adventure you learn how to make a digital piggy bank, to calculate how much money you have and how long you need to save up to buy what you want!\n"
                example_code: "```\n{print} 'The digital piggy bank'\nwish = {ask} 'What would you like to buy?'\nprice = {ask} 'How much does that cost?'\nsaved = {ask} 'How much money have you saved already?'\nallowance = {ask} 'How much pocket money do you get per week?'\nto_save = price - saved\nweeks = to_save / allowance\n{print} 'You can buy a ' wish ' in ' weeks ' weeks.'\n"
                start_code: '# place your code here'
    quizmaster:
        name: عريف المسابقات
        description: اصنع مسابقة جديدة!
        default_save_name: عريف المسابقات
        levels:
            14:
                story_text: "## Make your own quiz\nIn this adventure you can make your own quiz! Fill in the blanks, add more questions and enjoy your own quiz!\nYou can make a quiz about anything you like: your hobby, your favorite animal, your favorite book or anything at all!\n"
                example_code: "```\n{print} 'Make your own quiz'\npoints_a = 0\npoints_b = 0\n{print} 'Question'\n{print} 'Answer option A'\n{print} 'Answer option B'\nanswer = {ask} 'Which answer?'\n{if} answer == 'A'\n    points_a = points_a + 1\n{if} answer == 'B'\n    points_b = points_b + 1\n{print} 'End of the quiz!'\n{print} 'Lets see the results!'\n{if} points_a > points_b\n    {print} 'You belong to the A club'\n{if} points_b > points_a\n    {print} 'You belong to the B club'\n```\n"
                start_code: '# place your code here'
    language:
        levels:
            16:
                story_text: "## Learn a new language\nMake your own program to practice your vocabulary in a new language.\n"
                example_code: "```\nfrench_words = ['bonjour', 'ordinateur', 'pomme de terre']\ntranslation = ['hello', 'computer', 'potato']\nscore = 0\n{for} i {in} {range} 1 {to} 3\n    answer = {ask} 'What does ' french_words[i] ' mean?'\n    correct = translation[i]\n    {if} answer == correct\n        {print} 'Correct!'\n        score = score + 1\n    {else}\n        {print} 'Wrong, ' french_words[i] ' means ' translation[i]\n{print} 'You gave ' score ' correct answers.'\n```\n"
                start_code: '# place your code here'
            5:
                story_text: "## تعلم لغة جديدة\nاصنع برنامجك الخاص لتتدرب على مفردات بلغة جديدة.\n"
                start_code: '# place your code here'
                example_code: "```\n{print} 'تعلم الفرنسية!'\nقطة {is} {ask} '\U0001F431'\n{if} قطة {is} محادثة {print} 'رائع!'\n{else} {print} 'لا، قطة هي المحادثة '\nالضفدع {is} {ask} '\U0001F438'\n{if} ضفدع {is} غرينويل {print} 'ممتاز!'\n{else} {print} 'لا, الضفدع هو غرينويل'\n```\n"
        name: لغة
        description: تدرب على كلمات من لغة جديدة
        default_save_name: لغة
    next:
        name: ما التالي؟
        levels:
            3:
                story_text: "## ما التالي؟\nلقد تدربت على إستخدام المتغيرات في هذا المستوى، ولكنك ربما مررت بهذا الخطأ خلال كتابتك للأكواد.\n\nجرب تنفيذ هذا البرنامج:\n```\nاسمي {is} صوفي\n{print} صوفي هو صوفي\n```\nبالتأكيد اردت طباعة `اسمي هو صوفي` ولكن هيدي طبعت `صوفي هو صوفي`\nفي المستوى القادم سيتم حل تلك المشكلة بإستخدام علامات التنصيص.\n"
                start_code: "{print} هيا بنا إلى المستوى التالي!"
            4:
                story_text: "## What's next?\nIn the previous levels you've already learned to use `{at} {random}` which made your games different every time you ran the code.\nBut it's not really interactive, the player doesn't have any influence on what happens in the game.\n\nIn the next level you'll learn the `{if}` command, that allows you to give different responses in your program. This way you can program a secret password for your computer for example.\nSo let's take a peak!\n\n```\npassword {is} {ask} 'What is the correct password?'\n```\n"
                start_code: "{print} 'هيا بنا إلى المستوى التالي!'"
            5:
                start_code: "{print} 'On to the next level!'"
                story_text: "## ما التالي ؟\nلقد وصلت الآن إلى نهاية هذا المستوى ، لذلك تعلمت `{ask}` و `{if}`. على سبيل المثال يمكنك `{ask}` الضيوف عما يرغبون في تناوله.\nلكن ما لا يمكنك فعله بعد هو حساب سعر عشاء الجميع.\n\nالمستوى التالي يجعل من الممكن استخدام الجمع والطرح والضرب في برامجك. بهذه الطريقة يمكنك حساب الأسعار في مطعمك ، ولكن يمكنك أيضًا إضافة رمز سري لمنح أصدقائك وعائلتك خصمًا.\nهناك خيار آخر في المستوى التالي وهو برمجة لعبة الرياضيات الخاصة بك ، لأخيك الصغير أو أختك لممارسة الضرب.\nاذهب وانظر بنفسك في المستوى التالي!\n"
                example_code: "##  أشربة مجانية !\n```\n{print} 'اهلًا وسهلًا في مطعم هيدي'\nالطلب {is} {ask} 'ماذا تحب ان تطلب ؟'\n{print} 'طلبك هو ' الطلب\n{if} الطلب {is} سعر الهمبورجر {is} 5\n{if} الطلب {is} سعر البطاطس المقلية {is} 2\nالأشربة {is} {ask} 'ماذا تريد ان تشرب ؟'\n{print} 'انت تريد ' الأشربة\n{print} 'هذا سيكلفك ' السعر' قروش لطلبك ' الطلب ' ارجوك'\n{print} 'المشروبات مجانية في هذا المستوى لأن هيدي لا تستطيع حساب السعر بعد ...'\n```\n"
            8:
                start_code: "{print} 'Lets go to the next level!'"
                story_text: "## What's next?\nGreat job! You've reached the end of another level! In this level you've learned to use multiple lines of code in an {if} or {repeat} command. But you can't yet combine the two...\nGood news! In the next level you will be allowed to put an {if} inside an {if}, or inside a {repeat} command.\n\nFor example:\n```\nanswer = {ask} 'Would you like to go to teh next level?'\n{if} answer {is} 'yes'\n    {print} 'Great! You can use the {repeat} commando in the {if} command!'\n    {print} 'Hooray!'\n    {print} 'Hooray!'\n    {print} 'Hooray!'\n{else}\n    {print} 'Okay, you can stay here for a little longer!'\n```\nIn this code Hedy will still say 'Your drink is on its way' even {if} you didn't even want to drink something! In the next level this will be fixed!\n"
                example_code: "```\nanswer = {ask} 'Would you like to go to the next level?'\n{if} answer {is} yes\n    {print} 'Great! You can use the {repeat} commando in the {if} command!'\n    {print} 'Hooray!'\n    {print} 'Hooray!'\n    {print} 'Hooray!'\n{else}\n    {print} 'Okay, you can stay here for a little longer!'\n```\n"
            11:
                start_code: "{print} 'Lets go to the next level!'"
                story_text: "## What's next?\nMaybe you have tried using decimal numbers in your restaurant adventure. If you did, you probably noticed that Hedy didn't understand them yet and always rounded off.\nFrom the next level on you can use decimal numbers.\n\nAnother cool feauture in the next level is that you can use mulitiple words in a variable.\nFor intance, you could already do this...\n```\nname = {ask} 'Who is your favorite cartoon character?'\n{print} 'I love watching ' name\n```\nBut you couldn't use multiple words in a variable like the example below. This program does not work yet in this level!\n```\nshow = SpongeBob SquarePants\n{print} show 'is my favorite show!'\n```\nGo to the next level to make this code work!\n"
                example_code: "```\nname = {ask} 'Who is your favorite cartoon character?'\n{print} 'I love watching ' name\n```\nBut you couldn't use multiple words in a variable like the example below. This program does not work yet in this level!\n```\nshow = SpongeBob SquarePants\n{print} show 'is my favorite show!'\n```\nGo to the next level to make this code work!\n"
            12:
                start_code: "{print} 'Lets go to the next level!'"
                story_text: "## What's next?\nIn the previous levels you learned how to put two `{if}`commands inside each other. This works fine, but it does give you very long and unhandy codes like this one:\n```\nusername {is} {ask} 'What is your username?'\npassword {is} {ask} 'What is your password?'\n{if} username {is} 'Hedy'\n    {if} password {is} 'secret'\n        {print} 'Welcome Hedy!'\n    {else}\n        {print} 'Access denied'\n{else}\n    {print} 'Access denied!'\n```\nIn this system you have to give both the correct username and the correct password.\nIn the next level you will learn the `{and}` command that will make this code a ot shorter and more understandable!\nCheck it out!\n"
                example_code: "```\nusername {is} {ask} 'What is your username?'\npassword {is} {ask} 'What is your password?'\n{if} username {is} 'Hedy'\n    {if} password {is} 'secret'\n        {print} 'Welcome Hedy!'\n    {else}\n        {print} 'Access denied'\n{else}\n    {print} 'Access denied!'\n```\n"
            13:
                start_code: "{print} 'Lets go to the next level!'"
                story_text: "## What's next?\nWith the program below you can calulate {if} you've passed a subject at school (so, a grade of six or higher).\nYou can see this code is extremely inefficient, du to the very long code in line 5.\nAll the different grades from 1 to 5 had to be programmed seperately. Lucky for you, in the next level you'll learn how to do this without this extremely long code!\n```\nfirst_grade = {ask} 'What score did you get on your first test?'\nsecond_grade = {ask} 'What score did you get on your second test?'\nadded {is} first_grade + second_grade\nmean_grade {is} added / 2\n{if} mean_grade = 1 {or} mean_grade = 2 {or} mean_grade = 3 {or} mean_grade = 4 {or} mean_grade = 5\n    {print} 'Oh no! You have failed the subject...'\n{else}\n    {print} 'Great! You have passed the subject!'\n```\n"
                example_code: "```\nfirst_grade = {ask} 'What score did you get on your first test?'\nsecond_grade = {ask} 'What score did you get on your second test?'\nadded {is} first_grade + second_grade\nmean_grade {is} added / 2\n{if} mean_grade = 1 {or} mean_grade = 2 {or} mean_grade = 3 {or} mean_grade = 4 {or} mean_grade = 5\n    {print} 'Oh no! You have failed the subject...'\n{else}\n    {print} 'Great! You have passed the subject!'\n```\n"
            14:
                start_code: "{print} 'Lets go to the next level!'"
                story_text: "## What's next?\nIn this game below a code has been made to make sure the player can play on as long as he/she wants...\nBut the code is ineffective and way too long. Also, what {if} the player wants to play 101 games instead of 100?\nYou can't play to infinity?\nIn the next level you will learn a command that makes all of this a lot easier!\n```\ngame {is} 'on'\n{for} i {in} {range} 1 {to} 100\n    {if} game {is} 'on'\n        answer = {ask} 'Do you want to continue?'\n        {if} answer {is} 'no'\n            game {is} 'over'\n        {if} answer {is} 'yes'\n            {print} 'Ok we will continue'\n```\n"
                example_code: "```\ngame {is} 'on'\n{for} i {in} {range} 1 {to} 100\n    {if} game {is} 'on'\n        answer = {ask} 'Do you want to continue?'\n        {if} answer {is} 'no'\n            game {is} 'over'\n        {if} answer {is} 'yes'\n            {print} 'Ok we will continue'\n```\n"
            1:
                start_code: "{print} هيا بنا!"
                story_text: "## ما التالي؟\nتهانينا! لقد وصلت إلى نهاية المستوى ١. نتمنى أنك قد تمكنت بالفعل من كتابة بعض الاكواد الرائعة، ولكن هيدي لازال لديها الكثير لتكتشفه.\n\nفي المستوى الاول، ربما لاحظت ان الامر `{echo}` يمكنه حفظ معلومة واحدة في كل مرة.\nعلى سبيل المثال، في مغامرة المطعم تمكنت من استخدام `{echo}` مع ما يود الضيف تناوله، او ما يود شربه على حدٍ سواء.. ولكن ليس الاثنين معًا في نفس الجملة.\n"
                example_code: "```\n{print} مرحبًا بك في هيدي\n{ask} ماذا تود ان تطلب؟\n{echo} إذًا انت تريد \n{ask} وماذا تود ان تشرب؟\n{echo} إذًا انت تريد \n```\n"
                story_text_2: "إذا طلب اللاعب همبرغر و كوكاكولا، فلن تستطيع قول \"إذًا ان تريد همبرغر و كوكاكولا\"، يجب ان تضعهم في سطرين منفردين.\nو كذلك الامر `{echo}` يمكنه ترديد الكلمة في اخر الجملة فقط. إذًا فلن تستطيع ايضًا قول \"شطيرتك قادمة حالاً!\" في اول الجمله.\n\nسنغير هذه الامور في المستوى٢. في المستوى٢ ستتعلم كيفية استخدام المتغيرات، وستتمكن من حفظ اكثر من معلومة واحدة وطباعتها في أي جزء تريده فالجملة.\nلذا هيا بنا لإستكشاف المستوى التالي!\n"
            2:
                story_text: "## ما التالي؟\nلقد تعلمت في هذا المستوى عن المتغيرات وكيفية استخدامها لجعل البرامج الخاصة بك أكثر تشويقًا.\nلكن يمكنك فعل ما هو أكثر بالمتغيرات، حيث يمكنك إنشاء قوائم ويمكنك جعل هيدي تختار كلمة عشوائية من قائمة قد قمت بإنشائها، فتصنع لعبًا أكثر إثارة.\nألقِ نظرة سريعة على المستوى التالي!\n"
                start_code: "{print} هيا بنا إلى المستوى التالي!"
            6:
                start_code: "{print} 'On to the next level!'"
                story_text: "## What's next?\n Great job! You've reached the end of this level, which means you have practiced with `{if}` and `{else}`. You have probably noticed that your codes are getting longer and longer.\n For example {if} you want to program 'Happy Birthday'\n\n ```\n {print} 'happy birthday to you'\n {print} 'happy birthday to you'\n {print} 'happy birthday dear Hedy'\n {print} 'happy birthday to you'\n\n ```\n That's a lot of code for mainly the same words over and over again. Luckily in the next level has a solution with the `{repeat}` command, that allows you to repeat a line of code multiple times.\n"
                example_code: " ```\n {print} 'happy birthday to you'\n {print} 'happy birthday to you'\n {print} 'happy birthday dear Hedy'\n {print} 'happy birthday to you'\n ```\n"
            7:
                story_text: "## What's next?\nNow you've learned how to repeat one single line of code. This comes in handy, but it's not always enough. Sometimes you want to repeat multiple lines at once.\nthe next level allows you to group a couple of lines of code, and repeat that little group of lines all at once!\n\n```\n{repeat} 5 {times} {print} 'In the next level you can repeat multiple lines of code at once!'\n```\n"
                start_code: "{print} 'Lets go to the next level!'"
                example_code: "```\n{repeat} 5 {times} {print} 'In the next level you can repeat multiple lines of code at once!'\n```\n"
            9:
                start_code: "{print} 'Lets go to the next level!'"
                story_text: "## What's next?\nYou're doing great! In this level we still face a small problem. You have learned to repeat lines, but what {if} you'd want to slightly change the line.\nFor example {if} you want to sing the song '{if} you're happy and you knwo it'\n\nIt would look like this:\n```\n{repeat} 2 {times}\n    {print} '{if} youre happy and you know it clap your hands'\n{print} '{if} youre happy and you know it and you really want to show it'\n{print} '{if} youre happy and you know it clap your hands'\n```\n\nIf you'd also want the next verse 'stomp your feet', and the next one, and the next one, you'd have to change the code completely.\nIn the next level you'll learn the `{for}` command, which allows you to make a list of actions and repeat the code with another action each time!\nPlease take a look!\n"
                example_code: "```\n{repeat} 2 {times}\n    {print} '{if} youre happy and you know it clap your hands'\n{print} '{if} youre happy and you know it and you really want to show it'\n{print} '{if} youre happy and you know it clap your hands'\n```\n"
            10:
                story_text: "## What's next?\nYou have reached the end of this level, you're doing great! You are about to go to the next level. In the higher levels, Hedy is focussing more and more on teaching you the programming language Python.\nIn Python there is no `{repeat}` command, but there is a command that works like {repeat}. Are you curious to find out how to say `{repeat}` in Python language? Quickly go on to find out!\n"
                start_code: "{print} 'Lets go to the next level!'"
            17:
                story_text: "## What's next?\nIn the next level you will learn a real Python way to use `{print}`.\n"
                start_code: "{print} 'Lets go to the next level!'"
            18:
                story_text: "## What's next?\nCongratulations! You have reached the last level of Hedy! But no worries, we are working very hard to create more levels and new adventures. So please come back later to check out the newest levels!\n"
                start_code: "{print} ('Great job!!!')"
            15:
                story_text: "## What's next?\nIn the next level we will grow a bit more towards real Python code. thon code. You will also learn how to match two lists together.\nThis way you can program a code in which the correct animal is matched to the right sound.\nBecause the two codes below... Are obviously nonsense!\n```\nanimals = 'chicken', 'horse', 'cow'\nsounds = 'cluck', 'neigh', 'moo'\n{for} animal {in} animals\n    {print} 'A ' animal ' says ' sounds {at} {random}\n```\nYou could also try to make it work this way, but....\n```\nanimals = 'chicken', 'horse', 'cow'\nsounds = 'cluck', 'neigh', 'moo'\n{for} animal {in} animals\n    {for} sound {in} sounds\n        {print} 'A ' animal ' says ' sound\n```\n"
                start_code: "{print} 'Lets go to the next level!'"
                example_code: "```\nanimals = 'chicken', 'horse', 'cow'\nsounds = 'cluck', 'neigh', 'moo'\n{for} animal {in} animals\n    {print} 'A ' animal ' says ' sounds {at} {random}\n```\nYou could also try to make it work this way, but....\n```\nanimals = 'chicken', 'horse', 'cow'\nsounds = 'cluck', 'neigh', 'moo'\n{for} animal {in} animals\n    {for} sound {in} sounds\n        {print} 'A ' animal ' says ' sound\n```\n"
            16:
                story_text: "## What's next?\nIn the next level it's time for a new command. You might have noticed in the previous levels that `{if}` and `{else}` sometimes aren't enough.\nFor example in this code:\n```\n{print} 'What is for dinner tonight?'\noptions = ['pizza', 'broccoli', 'green beans']\nchosen = options {at} {random}\n{if} chosen = pizza\n    {print} 'Yummy! Pizza!'\n{else}\n    {print} 'Yikes...'\n```\nIn this code it would be great to have 2x an `{else}` so you could have one option for the broccoli and one for the green beans. The next level comes with the new command `{elif}` that makes this possible!\nSo check out the next level now!\n"
                start_code: "{print} 'Lets go to the next level!'"
                example_code: "```\n{print} 'What is for dinner tonight?'\noptions = ['pizza', 'broccoli', 'green beans']\nchosen = options {at} {random}\n{if} chosen = 'pizza'\n    {print} 'Yummy! Pizza!'\n{else}\n    {print} 'Yikes...'\n```\n"
                story_text_2: In this code it would be great to have 2x an `{else}` so you could have one option for the broccoli and one for the green beans. The next level comes with the new command `{elif}` that makes this possible! So check out the next level now!
        description: ما التالي؟
        default_save_name: next
    secret:
        levels:
            12:
                story_text: "## Make a secret code like a super spy\nIn this adventure you can create your own super spy code. Encode a message that only the right agent can decipher.\nIf the enemy tries to crack the code, they will get some false info to waste their time.\n"
                example_code: "```\nname is ask 'What is your name?'\nif name is 'Agent007'\n    a is 'Go to the airport '\nelse\n    a is 'Go to the trainstation '\npassword is ask 'What is the password?'\nif password is 'TOPSECRET'\n    b is 'tomorrow at 02.00'\nelse\n    b is 'today at 10.00'\nprint a + b\n```\n"
                start_code: '## place your code here'
            13:
                example_code: "```\nname is ask 'What is your name?'\npassword is ask 'What is your password?'\nif name is 'Agent007' and password is 'TOPSECRET'\n    print 'Go to the airport at 02.00'\nelse\n    print 'Go to the trainstation at 10.00'\n ```\n"
                story_text: "## Superspy\nThe code you made in the previous level can be made a lot easier in this one with the `{and}` command.\n"
                start_code: '## place your code here'
        name: العميل السري
        description: Make your own spy code
        default_save_name: العميل السري
    tic:
        name: لعبة إكس-أو
        description: العب لعبة إكس-أو!
        default_save_name: Tic
        levels:
            14:
                example_code: "```\nsign = 'x'\nopen_spots = 1, 2, 3, 4, 5, 6, 7, 8, 9\ngame = 'on'\nspot_1 = '.'\nspot_2 = '.'\nspot_3 = '.'\nspot_4 = '.'\nspot_5 = '.'\nspot_6 = '.'\nspot_7 = '.'\nspot_8 = '.'\nspot_9 = '.'\n{print} 'TIC TAC TOE!'\n{print} spot_1 spot_2 spot_3\n{print} spot_4 spot_5 spot_6\n{print} spot_7 spot_8 spot_9\n{print} ' '\n{for} i {in} {range} 1 {to} 9\n    {if} game != 'over'\n        choice = {ask} 'Player ' sign ', which spot?'\n        {if} choice {in} open_spots\n            {remove} choice {from} open_spots\n            {if} choice == 1\n                spot_1 = sign\n            {if} choice == 2\n                spot_2 = sign\n            {if} choice == 3\n                spot_3 = sign\n            {if} choice == 4\n                spot_4 = sign\n            {if} choice == 5\n                spot_5 = sign\n            {if} choice == 6\n                spot_6 = sign\n            {if} choice == 7\n                spot_7 = sign\n            {if} choice == 8\n                spot_8 = sign\n            {if} choice == 9\n                spot_9 = sign\n        {else}\n            {print} 'That spot was already taken'\n        {print} spot_1 spot_2 spot_3\n        {print} spot_4 spot_5 spot_6\n        {print} spot_7 spot_8 spot_9\n        {print} ' '\n        winner = {ask} 'Did you win?'\n        {if} winner == 'yes'\n            {print} 'Good job, player ' sign '!'\n            game = 'over'\n        {else}\n            {if} sign == 'x'\n                sign = 'o'\n            {else}\n                sign = 'x'\n```\n"
                story_text: "## Tic Tac Toe\nIn the previous levels you've made a tic tac toe game. Now you've learned how to use the = sign, the == sign and the != sign.\nYou can use this knowledge in your new Taic Tac Toe game, like this:\n"
                start_code: '## place your code here'
            15:
                start_code: '## place your code here'
                story_text: "## Tic Tac Toe\nIn this level you can improve your Tic Tac Toe game with the {while} loop/ With this loop you can combine the `{if} game != 'over'` and the `{for} i {in} {range} 1 to 9` into one simple line.\nCheck it out:\n"
                example_code: "```\nsign = 'x'\nopen_spots = 1, 2, 3, 4, 5, 6, 7, 8, 9\ngame = 'on'\nspot_1 = '.'\nspot_2 = '.'\nspot_3 = '.'\nspot_4 = '.'\nspot_5 = '.'\nspot_6 = '.'\nspot_7 = '.'\nspot_8 = '.'\nspot_9 = '.'\n{print} 'TIC TAC TOE!'\n{print} spot_1 spot_2 spot_3\n{print} spot_4 spot_5 spot_6\n{print} spot_7 spot_8 spot_9\n{print} ' '\n{while} game != 'over'\n    choice = {ask} 'Player ' sign ', which spot?'\n    {if} choice {in} open_spots\n        {remove} choice {from} open_spots\n        {if} choice == 1\n            spot_1 = sign\n        {if} choice == 2\n            spot_2 = sign\n        {if} choice == 3\n            spot_3 = sign\n        {if} choice == 4\n            spot_4 = sign\n        {if} choice == 5\n            spot_5 = sign\n        {if} choice == 6\n            spot_6 = sign\n        {if} choice == 7\n            spot_7 = sign\n        {if} choice == 8\n            spot_8 = sign\n        {if} choice == 9\n            spot_9 = sign\n    {else}\n        {print} 'That spot was already taken'\n    {print} spot_1 spot_2 spot_3\n    {print} spot_4 spot_5 spot_6\n    {print} spot_7 spot_8 spot_9\n    {print} ' '\n    winner = {ask} 'Did you win?'\n    {if} winner == 'yes'\n        {print} 'Good job, player ' sign '!'\n        game = 'over'\n    {else}\n        {if} sign == 'x'\n            sign = 'o'\n        {else}\n            sign = 'x'\n```\n"
            13:
                story_text: "## Tic Tac Toe\nIn this adventure you can program a game of Tic Tac Toe. You can play with two people. Taking turns, you pick a number of the spot (1 - 9) you want to put your sign (x or o) on.\nThe first player that gets 3 in a row (horizontally, vertically or diagonally) wins!\nHave fun!\n"
                example_code: "```\nsign = 'x'\nopen_spots = 1, 2, 3, 4, 5, 6, 7, 8, 9\ngame = 'on'\nspot_1 = '.'\nspot_2 = '.'\nspot_3 = '.'\nspot_4 = '.'\nspot_5 = '.'\nspot_6 = '.'\nspot_7 = '.'\nspot_8 = '.'\nspot_9 = '.'\n{print} 'TIC TAC TOE!'\n{print} spot_1 spot_2 spot_3\n{print} spot_4 spot_5 spot_6\n{print} spot_7 spot_8 spot_9\n{print} ' '\n{for} i {in} {range} 1 {to} 9\n    {if} game {is} 'on'\n        choice = {ask} 'Player ' sign ', which spot?'\n        {if} choice {in} open_spots\n            {remove} choice {from} open_spots\n            {if} choice {is} 1\n                spot_1 = sign\n            {if} choice {is} 2\n                spot_2 = sign\n            {if} choice {is} 3\n                spot_3 = sign\n            {if} choice {is} 4\n                spot_4 = sign\n            {if} choice {is} 5\n                spot_5 = sign\n            {if} choice {is} 6\n                spot_6 = sign\n            {if} choice {is} 7\n                spot_7 = sign\n            {if} choice {is} 8\n                spot_8 = sign\n            {if} choice {is} 9\n                spot_9 = sign\n        {else}\n            {print} 'That spot was already taken'\n        {print} spot_1 spot_2 spot_3\n        {print} spot_4 spot_5 spot_6\n        {print} spot_7 spot_8 spot_9\n        {print} ' '\n        winner = {ask} 'Did you win?'\n        {if} winner {is} 'yes'\n            {print} 'Good job, player ' sign '!'\n            game = 'over'\n        {else}\n            {if} sign {is} 'x'\n                sign = 'o'\n            {else}\n                sign = 'x'\n```\n"
                start_code: '## place your code here'
            17:
                story_text: "## Tic Tac Toe\nIn the previous levels the tic tac toe game had an annoying feature. After every move, you had to fill in yourself if you had won or not.\nThis made the game playable, but also quite slow. In this level we have learned the `{elif}` command, that could solve that problem.\nTo use the {elif} to let Hedy check whether or not a player has won is fun, but it also requires a fair amount of extra lines.\n\nIn the example code you see that we added the requirements to win (3 spots in a row horizontally, vertically or diagonally).\nYou can find them in line 46 to 69. You can see that each time the requirement is met (so if a player has won) the variable game is set to 'over'.\nThis means that the {while} loop will be stopped and the game ends.\n"
                example_code: "```\nsign = 'x'\nopen_spots = [1, 2, 3, 4, 5, 6, 7, 8, 9]\ngame = 'on'\nspot_1 = '.'\nspot_2 = '.'\nspot_3 = '.'\nspot_4 = '.'\nspot_5 = '.'\nspot_6 = '.'\nspot_7 = '.'\nspot_8 = '.'\nspot_9 = '.'\n{print} 'TIC TAC TOE!'\n{print} spot_1 spot_2 spot_3\n{print} spot_4 spot_5 spot_6\n{print} spot_7 spot_8 spot_9\n{print} ' '\n{while} game != 'over':\n    choice = {ask} 'Player ' sign ', which spot?'\n    {if} choice {in} open_spots:\n        {remove} choice {from} open_spots\n        {if} choice == 1:\n            spot_1 = sign\n        {if} choice == 2:\n            spot_2 = sign\n        {if} choice == 3:\n            spot_3 = sign\n        {if} choice == 4:\n            spot_4 = sign\n        {if} choice == 5:\n            spot_5 = sign\n        {if} choice == 6:\n            spot_6 = sign\n        {if} choice == 7:\n            spot_7 = sign\n        {if} choice == 8:\n            spot_8 = sign\n        {if} choice == 9:\n            spot_9 = sign\n    {else}:\n        {print} 'That spot was already taken'\n    {print} spot_1 spot_2 spot_3\n    {print} spot_4 spot_5 spot_6\n    {print} spot_7 spot_8 spot_9\n    {print} ' '\n    {if} spot_1 == spot_2 {and} spot_2 == spot_3 {and} spot_1 != '.':\n        {print} 'Player ' sign ' wins!'\n        game = 'over'\n    {elif} spot_4 == spot_5 {and} spot_5 == spot_6 {and} spot_4 != '.':\n        {print} 'Player ' sign ' wins!'\n        game = 'over'\n    {elif} spot_7 == spot_8 {and} spot_8 == spot_9 {and} spot_7 != '.':\n        {print} 'Player ' sign ' wins!'\n        game = 'over'\n    {elif} spot_1 == spot_4 {and} spot_4 == spot_7 {and} spot_1 != '.':\n        {print} 'Player ' sign ' wins!'\n        game = 'over'\n    {elif} spot_2 == spot_5 {and} spot_5 == spot_8 {and} spot_2 != '.':\n        {print} 'Player ' sign ' wins!'\n        game = 'over'\n    {elif} spot_3 == spot_6 {and} spot_6 == spot_9 {and} spot_3 != '.':\n        {print} 'Player ' sign ' wins!'\n        game = 'over'\n    {elif} spot_1 == spot_5 {and} spot_5 == spot_9 {and} spot_1 != '.':\n        {print} 'Player ' sign ' wins!'\n        game = 'over'\n    {elif} spot_3 == spot_5 {and} spot_5 == spot_7 {and} spot_3 != '.':\n        {print} 'Player ' sign ' wins!'\n        game = 'over'\n    {else}:\n        {if} sign == 'x':\n            sign = 'o'\n        {else}:\n            sign = 'x'\n```\n"
                start_code: '## place your code here'
    blackjack:
        name: لعبة الورق
        description: Try to get as close to 21 as you can
        default_save_name: لعبة الورق
        levels:
            17:
                story_text: "## Create a game of Blackjack\nBlackjack is a simple game of cards in which you have to get as close to 21 points as possible. You get two cards. Each card is worth their numeral value, and the face cards (Jack, Queen and King) are worth 10 points.\nThe Ace is worth either 1 or 11 points (you can choose). The dealer, your opponent, also gets two cards.\nIf you want, you can get another card, and its points will be added to your total. The dealer can also choose to take another card.\nBut be careful not to get more than 21 points, because if you do, you lose!\nThe player who gets closest to 21, without going over it, wins!\n\nHave fun!\n"
                example_code: "```\n{print} 'BLACKJACK'\ncards = [2, 3, 4, 5, 6, 7, 8, 9, 10, 'Jack', 'Queen','King', 'Ace']\npoints = 0\ndealer_points = 0\ncard_1 = cards[{random}]\ncard_2 = cards[{random}]\ncard_3 = cards [{random}]\ndealer_card_1 = cards[{random}]\ndealer_card_2 = cards[{random}]\ndealer_card_3 = cards[{random}]\n# Points for card 1\n{if} card_1 == 'Jack' {or} card_1 == 'Queen' {or} card_1 == 'King':\n    points = points + 10\n{elif} card_1 == 'Ace':\n    points = points + 11\n{else}:\n    points = points + card_1\n# Points for card 2\n{if} card_2 == 'Jack' {or} card_2 == 'Queen' {or} card_2 == 'King':\n    points = points + 10\n{elif} card_2 == 'Ace':\n    points = points + 11\n{else}:\n    points = points + card_2\n# Points for dealer card 1\n{if} dealer_card_1 == 'Jack' {or} dealer_card_1 == 'Queen' {or} dealer_card_1 == 'King':\n    dealer_points = dealer_points + 10\n{elif} dealer_card_1 == 'Ace':\n    dealer_points = dealer_points + 11\n{else}:\n    dealer_points = dealer_points + dealer_card_1\n# Points for dealer card 2\n{if} dealer_card_2 == 'Jack' {or} dealer_card_2 == 'Queen' {or} dealer_card_2 == 'King':\n    dealer_points = dealer_points + 10\n{elif} dealer_card_2 == 'Ace':\n    dealer_points = dealer_points + 11\n{else}:\n    dealer_points = dealer_points + dealer_card_2\n# Two Aces\n{if} card_1 == 'Ace' {and} card_2 == 'Ace':\n    points = 12\n{if} dealer_card_1 == 'Ace' {and} dealer_card_2 == 'Ace':\n    dealer_points = 12\n# Scoreboard\n{print} 'You have a ' card_1 ' and a ' card_2 ' (' points ' points)'\n{print} 'The dealer has a ' dealer_card_1 ' and a ' dealer_card_2 ' (' dealer_points ' points)'\n# Extra card for the player\nhit = {ask} 'Do you want an extra card?'\n{if} hit == 'yes':\n    {if} card_3 == 'Jack' {or} card_3 == 'Queen' {or} card_3 == 'King':\n        points = points + 10\n    {elif} card_3 == 'Ace':\n        {if} points > 11:\n            points = points + 11\n        {else}:\n            points = points + 1\n    {else}:\n        points = points + card_3\n    print 'You get an extra ' card_3 ' (' points ' points)'\n{else}:\n    print 'No extra cards'\n# Winner\n{if} points > 21 {or} dealer_points > points {or} dealer_points == 21:\n    {print} 'You lose'\n{elif} dealer_points < 17:\n    {print} 'The dealer takes an extra card. It is a... ' dealer_card_3\n    {if} dealer_card_3 == 'Jack' {or} dealer_card_3 == 'Queen' {or} dealer_card_3 == 'King':\n        dealer_points = dealer_points + 10\n    {elif} dealer_card_3 == 'Ace':\n        {if} dealer_points < 11:\n            dealer_points = dealer_points + 11\n        {else}:\n            dealer_points = dealer_points + 1\n    {else}:\n        dealer_points = dealer_points + dealer_card_3\n    {print} 'The dealer has ' dealer_points ' points now'\n    {if} dealer_points < 21 {and} dealer_points > points:\n        {print} 'You lose'\n    {else}:\n        {print} 'You win'\n{elif} points > dealer_points {and} points < 21:\n    {print} 'You win!'\n```\n"
                start_code: '# place your code here'
    pressit:
        name: Press it!
        description: Try linking a keyboard key to a command!
        levels:
            5:
                story_text: "## Press it!\nIn the introduction you were also told about the new keyword ```pressed```! Using ```pressed```\ncan make coding much more interactive, and you can have live control of what is executed!\nIn the upcoming levels you will learn how ```pressed``` makes this possible and what uses ```pressed```\nhas.\nBesides printing text, there is a whole other variety of uses for ```pressed```\nFor example, you can also link turtle commands to keys! Try it!\n"
                example_code_2: "```\nif y is {pressed} {print} 'Amazing! You pressed the y key!'\nelse {print} 'Oh no! You did not press the y key.'\n```\n"
                start_code: '# place your code here'
                example_code: "```\nif x is {pressed} forward 50\n```\n"
                story_text_2: "## If Else Pressed\nYou can also assign an else statement to ```pressed```. The else statement will be executed\nwhenever you press a key other than the key you assigned.\n"
            6:
                story_text: "Did you know you can also make a calculator using ```pressed```?\nGive the calculator two numbers and press the m key to multiply.\nNow you don't have to bring your own!\nTry other keys and see what happens! Do you get a different result?\n"
                example_code: "```\nfirst = {ask} 'what is your first number?'\nsecond = {ask} 'what is your second number?'\nprint 'press a to add, s to substract, d to divide, m to multiply'\nif a is {pressed} result = first + second\nif s is {pressed} result = first - second\nif d is {pressed} result = first / second\nif m is {pressed} result = first * second\nprint 'The answer is ' result\n```\n"
                start_code: '# place your code here'
            7:
                example_code: "```\nrepeat 3 times if x is {pressed} forward 15\n```\n"
                story_text: "You might have tried it in level 5 and 6, pressing the key linked to ```pressed``` multiple\ntimes. If you did, you noticed that this did nothing. but now that you have learned about repeat, we\ncan press keys multiple times! Make the turtle walk forward!\n"
                start_code: '# place your code here'
            8:
                story_text: "## Press It!\nNow that you need to use indents for the {if} and {else} statements,\nyou will also have to indent code when using {pressed}! Don't worry,\nit works te same as with the other statements, see the example!\nPress another key instead of x and see what happens.\n"
                example_code: "```\n{if} x is {pressed}\n    {print} 'Only the cool kids press the x key.'\n{else}\n    {print} 'The adventurous kids press something else.'\n```\n"
                start_code: '# place your code here'
            9:
                story_text_2: "Besides counting, you can now also move the turtle in many more ways than only forward or backwards!\nTry making some figures by walking the turtle around!\n"
                example_code_2: "```\nstepsize = 25\nleft = -90\nright = 90\naround = 180\nrepeat 40 times\n    {if} w is {pressed}\n        forward stepsize\n    {if} s is {pressed}\n        turn around\n    {if} a is {pressed}\n        turn left\n    {if} d is {pressed}\n        turn right\n```\n"
                story_text: "Now that you know how to nest multiple statements, you can also do this with {pressed}!\nBy nesting a pressed in a {repeat} loop, you can repeatedly press buttons and make something happen.\nNow we know you could do this before, but by using the indents you have much more overview!\nTry it counting to 5, for example!\n"
                example_code: "```\ntotal = 1\n{repeat} 5 times\n    {if} x is {pressed}\n        {print} total\n        {print} 'keep pressing!'\n        total = total + 1\n```\n"
                start_code: '# place your code here'
            10:
                example_code: "```\ndistances = 100, 80, 60, 40, 20, 10\n{if} x is {pressed}\n    for distance in distances\n        {forward} distance\n        {turn} -90\n{if} y is {pressed}\n    for distance in distances\n        {forward} distance\n        {turn} 90\n```\n"
                story_text: "In this level you can make the turtle draw you a figure. The turtle is raring to go.\nGive the turtle the starting signal by pressing the x or y key on your keyboard.\nCan you let the turtle draw you another figure?\n"
                start_code: '# place your code here'
            11:
                story_text: "Now that you have learned of the ```for ... in range ... to ...``` rule, you can use it for ```pressed```\ntoo! for example, try moving the turtle! The turtle grows everytime you press a linked button.\nThis way the turtle can move further every step!\n"
                example_code: "```\nleft = -90\nright = 90\naround = 180\nfor counter in range 1 to 15\n    stepsize = counter * 5\n    {if} w is {pressed}\n        forward stepsize\n    {if} s is {pressed}\n        turn around\n    {if} a is {pressed}\n        turn left\n    {if} d is {pressed}\n        turn right\n```\n"
                start_code: '# place your code here'
            12:
                story_text: "Are you familiar with videogames? You walk into tall grass and are suddenly approached by\na very suspicious mouse. What will you do?\nIn this level we will make a small menu with different kinds of options.\nStoring text into a variable is quite handy for repeated uses.\nOption, I choose you!\n"
                example_code: "```\nchoose = 'You chose option: '\nprint 'A wild mouse appeared!'\nprint 'Choose an option and press first letter: (n)et, (c)at, (b)ag, (r)un'\n{if} n is {pressed}\n    {print} choose + 'net'\n    {print} 'You attempt to catch the mouse with a net..'\n    sleep\n    {print} 'Congratulations you did it!'\n{if} c is {pressed}\n    {print} choose + 'cat'\n    {print} 'You send out your cat'\n    sleep\n    {print} 'The mouse got scared and ran away!'\n{if} b is {pressed}\n    {print} choose + 'bag'\n    {print} 'The mouse jumped into you bag!'\n{if} r is {pressed}\n    {print} choose + 'run'\n    {print} 'You got away safely!'\n```\n"
                start_code: '# place your code here'
            14:
                story_text: "Now that you learned how to use operators, we can use it with ```pressed```too!\nimagine the turtle being able to do a superjump forward. by pressing ```p``` the turtle can make a\nsuperjump! However, the turtle can only do this jump every 5 steps or every 4 turns\n"
                example_code: "```\nstepsize = 15\nleft = -90\nright = 90\naround = 180\njumptime = 5\nspins = 4\nrepeat 40 times\n    {if} w is {pressed}\n        forward stepsize\n        jumptime = jumptime - 1\n    {if} s is {pressed}\n        turn around\n    {if} a is {pressed}\n        turn left\n        spins = spins - 1\n    {if} d is {pressed}\n        turn right\n        spins = spins - 1\n    {if} p is {pressed}\n        {if} jumptime <= 0 or spins <= 0\n            forward stepsize * 3\n            jumptime = 5\n            spins = 4\n```\n"
                start_code: '# place your code here'
            13:
                example_code: "```\nstepsize = 10\nleft = -90\nright = 90\naround = 180\nlooked_left = 0\nlooked_right = 0\nrepeat 40 times\n    {if} w is {pressed}\n        forward stepsize\n    {if} s is {pressed}\n        turn around\n    {if} a is {pressed}\n        turn left\n        looked_left = 1\n    {if} d is {pressed}\n        turn right\n        looked_right = 1\n    {if} p is {pressed}\n        {if} looked_left is 1 and looked_right is 1\n            forward 40\n            looked_left = 0\n            looked_right = 0\n```\n"
                story_text: "Now that you learned how to use ```and``` and ```or```, we can use it with ```pressed```too!\nimagine the turtle being able to do a superjump forward. by pressing ```p``` the turtle can make a\nsuperjump! However, the turtle can only do this jump if he turns left and right first!\n"
                start_code: '# place your code here'
            16:
                start_code: '# place your code here'
                story_text: "Lets move a little with a game of Twister!\nWhen everyone is ready, press the x key for the next move!\n"
                example_code: "```\nlimbs = ['Right Hand', 'Left Hand', 'Right Foot', 'Left Foot']\ncolours = ['Blue', 'Green', 'Red', 'Yellow']\nrepeat 20 times\n    l = limbs[random]\n    c = colours[random]\n    {if} x is {pressed}\n        {print} l + ' on ' + c + '!'\n```\n"
            17:
                story_text: "Now that you learned how to use ```elif```, we can use it with ```pressed```too! Be aware,\n```elif ... is pressed ``` is not possible! That is why we are going to nest some ```elif```\nstatements into the ```pressed``` options. We also had to add ```:``` to the code to make\neverything work! imagine the turtle being able to do a superjump forward. by pressing ```p``` the\nturtle can make a superjump! However, the turtle can only do this jump every 5 steps or every\n4 turns\n"
                example_code: "```\nstepsize = 15\nleft = -90\nright = 90\naround = 180\njumptime = 5\nspins = 4\nrepeat 40 times\n    {if} w is {pressed}:\n        forward stepsize\n        jumptime = jumptime - 1\n    {if} s is {pressed}:\n        turn around\n    {if} a is {pressed}:\n        turn left\n        spins = spins - 1\n    {if} d is {pressed}:\n        turn right\n        spins = spins - 1\n    {if} p is {pressed}:\n        {if} jumptime <= 0 or spins <= 0:\n            forward stepsize * 3\n            jumptime = 5\n            spins = 4\n        {elif} jumptime > 0:\n            print \"you need to take more steps or turns before you can superjump!\"\n```\n"
                start_code: '# place your code here'
            15:
                story_text: "Now that you have learned about the ```while``` loops, you can start using it on the turtle!\nThe turtle is now only allowed to take only 15 steps or turn 15 times, before he gets tired!\nTry to get as far as possible before the turtle gets tired! You can use your superjump after 2 turns\nor 5 steps.\n"
                example_code: "```\nstepsize = 15\nleft = -90\nright = 90\naround = 180\njumptime = 5\nspins = 2\ntired_in = 15\nwhile tired_in > 0\n    {if} w is {pressed}\n        forward stepsize\n        jumptime = jumptime - 1\n    {if} s is {pressed}\n        turn around\n    {if} a is {pressed}\n        turn left\n        spins = spins - 1\n    {if} d is {pressed}\n        turn right\n        spins = spins - 1\n    {if} p is {pressed}\n        {if} jumptime <= 0 or spins <= 0\n            forward stepsize * 4\n            jumptime = 5\n            spins = 2\n    tired_in = tired_in - 1\n```\n"
                start_code: '# place your code here'
        default_save_name: Pressit

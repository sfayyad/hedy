[
    {
        "name": "level1",
        "rules": {
            "start": [
                {
                    "regex": "(^| )(_)(?= |$)",
                    "token": [
                        "text",
                        "invalid"
                    ],
                    "next": "start"
                },
                {
                    "regex": "_\\?_",
                    "token": "invalid",
                    "next": "start"
                },
                {
                    "regex": "#.*$",
                    "token": "comment",
                    "next": "start"
                },
                {
                    "regex": "(^ *)(__ask__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "value",
                    "unicode": true
                },
                {
                    "regex": "(^ *)(__print__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "value",
                    "unicode": true
                },
                {
                    "regex": "(^ *)(__echo__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "value",
                    "unicode": true
                },
                {
                    "regex": "(^ *)(__forward__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "value",
                    "unicode": true
                },
                {
                    "regex": "(^ *)(__turn__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "direction",
                    "unicode": true
                },
                {
                    "regex": "(^ *)(__color__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "color",
                    "unicode": true
                }
            ],
            "value": [
                {
                    "regex": "(^| )(_)(?= |$)",
                    "token": [
                        "text",
                        "invalid"
                    ],
                    "next": "value"
                },
                {
                    "regex": "_\\?_",
                    "token": "invalid",
                    "next": "value"
                },
                {
                    "regex": "#.*$",
                    "token": "comment",
                    "next": "start"
                },
                {
                    "regex": "(^|$)",
                    "token": [
                        "text"
                    ],
                    "next": "start"
                }
            ],
            "color": [
                {
                    "regex": "(^| )(_)(?= |$)",
                    "token": [
                        "text",
                        "invalid"
                    ],
                    "next": "color"
                },
                {
                    "regex": "_\\?_",
                    "token": "invalid",
                    "next": "color"
                },
                {
                    "regex": "#.*$",
                    "token": "comment",
                    "next": "start"
                },
                {
                    "regex": "(^|$)",
                    "token": [
                        "text"
                    ],
                    "next": "start"
                },
                {
                    "regex": "(__black__|__gray__|__white__|__green__|__blue__|__purple__|__brown__|__pink__|__red__|__orange__|__yellow__)",
                    "token": [
                        "text"
                    ],
                    "unicode": true
                }
            ],
            "direction": [
                {
                    "regex": "(^| )(_)(?= |$)",
                    "token": [
                        "text",
                        "invalid"
                    ],
                    "next": "direction"
                },
                {
                    "regex": "_\\?_",
                    "token": "invalid",
                    "next": "direction"
                },
                {
                    "regex": "#.*$",
                    "token": "comment",
                    "next": "start"
                },
                {
                    "regex": "(^|$)",
                    "token": [
                        "text"
                    ],
                    "next": "start"
                },
                {
                    "regex": "(__right__|__left__)",
                    "token": [
                        "text"
                    ],
                    "unicode": true
                }
            ]
        }
    },
    {
        "name": "level2",
        "rules": {
            "start": [
                {
                    "regex": "(^| )(_)(?= |$)",
                    "token": [
                        "text",
                        "invalid"
                    ],
                    "next": "start"
                },
                {
                    "regex": "_\\?_",
                    "token": "invalid",
                    "next": "start"
                },
                {
                    "regex": "#.*$",
                    "token": "comment",
                    "next": "start"
                },
                {
                    "regex": "(^ *)(__print__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "value",
                    "unicode": true
                },
                {
                    "regex": "(^ *)([\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·]+)( +)(__is__)( +)(__ask__)",
                    "token": [
                        "text",
                        "text",
                        "text",
                        "keyword",
                        "text",
                        "keyword"
                    ],
                    "next": "value",
                    "unicode": true
                },
                {
                    "regex": "(^ *)([\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·]+)( +)(__is__)",
                    "token": [
                        "text",
                        "text",
                        "text",
                        "keyword"
                    ],
                    "next": "value",
                    "unicode": true
                },
                {
                    "regex": "(^ *)(__sleep__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "value",
                    "unicode": true
                },
                {
                    "regex": "(^ *)(__forward__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "value",
                    "unicode": true
                },
                {
                    "regex": "(^ *)(__turn__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "value",
                    "unicode": true
                },
                {
                    "regex": "(^ *)(__color__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "value",
                    "unicode": true
                }
            ],
            "value": [
                {
                    "regex": "(^| )(_)(?= |$)",
                    "token": [
                        "text",
                        "invalid"
                    ],
                    "next": "value"
                },
                {
                    "regex": "_\\?_",
                    "token": "invalid",
                    "next": "value"
                },
                {
                    "regex": "#.*$",
                    "token": "comment",
                    "next": "start"
                },
                {
                    "regex": "(^|$)",
                    "token": [
                        "text"
                    ],
                    "next": "start"
                },
                {
                    "regex": "(__black__|__blue__|__brown__|__gray__|__green__|__orange__|__pink__|__purple__|__red__|__white__|__yellow__)",
                    "token": [
                        "text"
                    ],
                    "unicode": true
                }
            ]
        }
    },
    {
        "name": "level3",
        "rules": {
            "start": [
                {
                    "regex": "(^| )(_)(?= |$)",
                    "token": [
                        "text",
                        "invalid"
                    ],
                    "next": "start"
                },
                {
                    "regex": "_\\?_",
                    "token": "invalid",
                    "next": "start"
                },
                {
                    "regex": "#.*$",
                    "token": "comment",
                    "next": "start"
                },
                {
                    "regex": "(^ *)([\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·]+)( +)(__is__)( *)(__ask__)",
                    "token": [
                        "text",
                        "text",
                        "text",
                        "keyword",
                        "text",
                        "keyword"
                    ],
                    "next": "valueExpr",
                    "unicode": true
                },
                {
                    "regex": "(^ *)([\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·]+)( +)(__is__)",
                    "token": [
                        "text",
                        "text",
                        "text",
                        "keyword"
                    ],
                    "next": "value",
                    "unicode": true
                },
                {
                    "regex": "(^ *)(__print__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "valueExpr",
                    "unicode": true
                },
                {
                    "regex": "(^ *)(__turn__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "valueExpr",
                    "unicode": true
                },
                {
                    "regex": "(^ *)(__sleep__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "valueExpr",
                    "unicode": true
                },
                {
                    "regex": "(^ *)(__forward__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "valueExpr",
                    "unicode": true
                },
                {
                    "regex": "(^ *)(__add__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "valAdd",
                    "unicode": true
                },
                {
                    "regex": "(^ *)(__remove__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "valRemove",
                    "unicode": true
                },
                {
                    "regex": "(^ *)(__color__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "value",
                    "unicode": true
                }
            ],
            "value": [
                {
                    "regex": "(^| )(_)(?= |$)",
                    "token": [
                        "text",
                        "invalid"
                    ],
                    "next": "value"
                },
                {
                    "regex": "_\\?_",
                    "token": "invalid",
                    "next": "value"
                },
                {
                    "regex": "#.*$",
                    "token": "comment",
                    "next": "start"
                },
                {
                    "regex": "(^|$)",
                    "token": [
                        "text"
                    ],
                    "next": "start"
                },
                {
                    "regex": "(^| )(__at__)( +)(__random__)",
                    "token": [
                        "text",
                        "keyword",
                        "keyword",
                        "keyword"
                    ],
                    "unicode": true
                },
                {
                    "regex": "(^| )(__at__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "unicode": true
                },
                {
                    "regex": "(__comma__)",
                    "token": [
                        "keyword"
                    ],
                    "unicode": true
                },
                {
                    "regex": "(__black__|__blue__|__brown__|__gray__|__green__|__orange__|__pink__|__purple__|__red__|__white__|__yellow__)",
                    "token": [
                        "text"
                    ],
                    "unicode": true
                }
            ],
            "valueExpr": [
                {
                    "regex": "(^| )(_)(?= |$)",
                    "token": [
                        "text",
                        "invalid"
                    ],
                    "next": "valueExpr"
                },
                {
                    "regex": "_\\?_",
                    "token": "invalid",
                    "next": "valueExpr"
                },
                {
                    "regex": "#.*$",
                    "token": "comment",
                    "next": "start"
                },
                {
                    "regex": "(^|$)",
                    "token": [
                        "text"
                    ],
                    "next": "start"
                },
                {
                    "regex": "(^| )(__at__)( +)(__random__)",
                    "token": [
                        "text",
                        "keyword",
                        "keyword",
                        "keyword"
                    ],
                    "unicode": true
                },
                {
                    "regex": "(^| )(__at__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "unicode": true
                }
            ],
            "valAdd": [
                {
                    "regex": "(^| )(_)(?= |$)",
                    "token": [
                        "text",
                        "invalid"
                    ],
                    "next": "valAdd"
                },
                {
                    "regex": "_\\?_",
                    "token": "invalid",
                    "next": "valAdd"
                },
                {
                    "regex": "#.*$",
                    "token": "comment",
                    "next": "start"
                },
                {
                    "regex": "(^|$)",
                    "token": [
                        "text"
                    ],
                    "next": "start"
                },
                {
                    "regex": "(^| )(__to_list__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "valueTo",
                    "unicode": true
                },
                {
                    "regex": "(__black__|__blue__|__brown__|__gray__|__green__|__orange__|__pink__|__purple__|__red__|__white__|__yellow__)",
                    "token": [
                        "text"
                    ],
                    "unicode": true
                }
            ],
            "valueTo": [
                {
                    "regex": "(^| )(_)(?= |$)",
                    "token": [
                        "text",
                        "invalid"
                    ],
                    "next": "valueTo"
                },
                {
                    "regex": "_\\?_",
                    "token": "invalid",
                    "next": "valueTo"
                },
                {
                    "regex": "#.*$",
                    "token": "comment",
                    "next": "start"
                },
                {
                    "regex": "(^|$)",
                    "token": [
                        "text"
                    ],
                    "next": "start"
                }
            ],
            "valRemove": [
                {
                    "regex": "(^| )(_)(?= |$)",
                    "token": [
                        "text",
                        "invalid"
                    ],
                    "next": "valRemove"
                },
                {
                    "regex": "_\\?_",
                    "token": "invalid",
                    "next": "valRemove"
                },
                {
                    "regex": "#.*$",
                    "token": "comment",
                    "next": "start"
                },
                {
                    "regex": "(^|$)",
                    "token": [
                        "text"
                    ],
                    "next": "start"
                },
                {
                    "regex": "(^| )(__from__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "valueFrom",
                    "unicode": true
                },
                {
                    "regex": "(__black__|__blue__|__brown__|__gray__|__green__|__orange__|__pink__|__purple__|__red__|__white__|__yellow__)",
                    "token": [
                        "text"
                    ],
                    "unicode": true
                }
            ],
            "valueFrom": [
                {
                    "regex": "(^| )(_)(?= |$)",
                    "token": [
                        "text",
                        "invalid"
                    ],
                    "next": "valueFrom"
                },
                {
                    "regex": "_\\?_",
                    "token": "invalid",
                    "next": "valueFrom"
                },
                {
                    "regex": "#.*$",
                    "token": "comment",
                    "next": "start"
                },
                {
                    "regex": "(^|$)",
                    "token": [
                        "text"
                    ],
                    "next": "start"
                }
            ]
        }
    },
    {
        "name": "level4",
        "rules": {
            "start": [
                {
                    "regex": "(^| )(_)(?= |$)",
                    "token": [
                        "text",
                        "invalid"
                    ],
                    "next": "start"
                },
                {
                    "regex": "_\\?_",
                    "token": "invalid",
                    "next": "start"
                },
                {
                    "regex": "#.*$",
                    "token": "comment",
                    "next": "start"
                },
                {
                    "regex": "(^ *)([\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·]+)( +)(__is__)( *)(__ask__)",
                    "token": [
                        "text",
                        "text",
                        "text",
                        "keyword",
                        "text",
                        "keyword"
                    ],
                    "next": "valueExpr",
                    "unicode": true
                },
                {
                    "regex": "(^ *)([\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·]+)( +)(__is__)",
                    "token": [
                        "text",
                        "text",
                        "text",
                        "keyword"
                    ],
                    "next": "value",
                    "unicode": true
                },
                {
                    "regex": "(^ *)(__print__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "valueExpr",
                    "unicode": true
                },
                {
                    "regex": "(^ *)(__turn__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "valueSimple",
                    "unicode": true
                },
                {
                    "regex": "(^ *)(__sleep__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "valueSimple",
                    "unicode": true
                },
                {
                    "regex": "(^ *)(__forward__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "valueSimple",
                    "unicode": true
                },
                {
                    "regex": "(^ *)(__color__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "valueSimple",
                    "unicode": true
                },
                {
                    "regex": "(^ *)(__add__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "valAdd",
                    "unicode": true
                },
                {
                    "regex": "(^ *)(__remove__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "valRemove",
                    "unicode": true
                }
            ],
            "value": [
                {
                    "regex": "(^| )(_)(?= |$)",
                    "token": [
                        "text",
                        "invalid"
                    ],
                    "next": "value"
                },
                {
                    "regex": "_\\?_",
                    "token": "invalid",
                    "next": "value"
                },
                {
                    "regex": "#.*$",
                    "token": "comment",
                    "next": "start"
                },
                {
                    "regex": "(^|$)",
                    "token": [
                        "text"
                    ],
                    "next": "start"
                },
                {
                    "regex": "(^| )(__at__)( +)(__random__)",
                    "token": [
                        "text",
                        "keyword",
                        "keyword",
                        "keyword"
                    ],
                    "unicode": true
                },
                {
                    "regex": "(^| )(__at__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "unicode": true
                },
                {
                    "regex": "(__comma__)",
                    "token": [
                        "keyword"
                    ],
                    "unicode": true
                },
                {
                    "regex": "(__black__|__blue__|__brown__|__gray__|__green__|__orange__|__pink__|__purple__|__red__|__white__|__yellow__)",
                    "token": [
                        "text"
                    ],
                    "unicode": true
                }
            ],
            "valueExpr": [
                {
                    "regex": "(^| )(_)(?= |$)",
                    "token": [
                        "text",
                        "invalid"
                    ],
                    "next": "valueExpr"
                },
                {
                    "regex": "_\\?_",
                    "token": "invalid",
                    "next": "valueExpr"
                },
                {
                    "regex": "#.*$",
                    "token": "comment",
                    "next": "start"
                },
                {
                    "regex": "(^|$)",
                    "token": [
                        "text"
                    ],
                    "next": "start"
                },
                {
                    "regex": "(^| )(__at__)( +)(__random__)",
                    "token": [
                        "text",
                        "keyword",
                        "keyword",
                        "keyword"
                    ],
                    "unicode": true
                },
                {
                    "regex": "(^| )(__at__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "unicode": true
                },
                {
                    "regex": "\"[^\"]*\"",
                    "token": "constant.character",
                    "unicode": true
                },
                {
                    "regex": "'[^']*'",
                    "token": "constant.character",
                    "unicode": true
                },
                {
                    "regex": "\"[^\"]*$",
                    "token": "text",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "'[^']*$",
                    "token": "text",
                    "next": "start",
                    "unicode": true
                }
            ],
            "valueSimple": [
                {
                    "regex": "(^| )(_)(?= |$)",
                    "token": [
                        "text",
                        "invalid"
                    ],
                    "next": "valueSimple"
                },
                {
                    "regex": "_\\?_",
                    "token": "invalid",
                    "next": "valueSimple"
                },
                {
                    "regex": "#.*$",
                    "token": "comment",
                    "next": "start"
                },
                {
                    "regex": "(^|$)",
                    "token": [
                        "text"
                    ],
                    "next": "start"
                },
                {
                    "regex": "(^| )(__at__)( +)(__random__)",
                    "token": [
                        "text",
                        "keyword",
                        "keyword",
                        "keyword"
                    ],
                    "unicode": true
                },
                {
                    "regex": "(^| )(__at__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "unicode": true
                },
                {
                    "regex": "(__black__|__blue__|__brown__|__gray__|__green__|__orange__|__pink__|__purple__|__red__|__white__|__yellow__)",
                    "token": [
                        "text"
                    ],
                    "unicode": true
                }
            ],
            "valAdd": [
                {
                    "regex": "(^| )(_)(?= |$)",
                    "token": [
                        "text",
                        "invalid"
                    ],
                    "next": "valAdd"
                },
                {
                    "regex": "_\\?_",
                    "token": "invalid",
                    "next": "valAdd"
                },
                {
                    "regex": "#.*$",
                    "token": "comment",
                    "next": "start"
                },
                {
                    "regex": "(^|$)",
                    "token": [
                        "text"
                    ],
                    "next": "start"
                },
                {
                    "regex": "(^| )(__to_list__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "valueTo",
                    "unicode": true
                },
                {
                    "regex": "(__black__|__blue__|__brown__|__gray__|__green__|__orange__|__pink__|__purple__|__red__|__white__|__yellow__)",
                    "token": [
                        "text"
                    ],
                    "unicode": true
                }
            ],
            "valueTo": [
                {
                    "regex": "(^| )(_)(?= |$)",
                    "token": [
                        "text",
                        "invalid"
                    ],
                    "next": "valueTo"
                },
                {
                    "regex": "_\\?_",
                    "token": "invalid",
                    "next": "valueTo"
                },
                {
                    "regex": "#.*$",
                    "token": "comment",
                    "next": "start"
                },
                {
                    "regex": "(^|$)",
                    "token": [
                        "text"
                    ],
                    "next": "start"
                }
            ],
            "valRemove": [
                {
                    "regex": "(^| )(_)(?= |$)",
                    "token": [
                        "text",
                        "invalid"
                    ],
                    "next": "valRemove"
                },
                {
                    "regex": "_\\?_",
                    "token": "invalid",
                    "next": "valRemove"
                },
                {
                    "regex": "#.*$",
                    "token": "comment",
                    "next": "start"
                },
                {
                    "regex": "(^|$)",
                    "token": [
                        "text"
                    ],
                    "next": "start"
                },
                {
                    "regex": "(^| )(__from__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "valueFrom",
                    "unicode": true
                },
                {
                    "regex": "(__black__|__blue__|__brown__|__gray__|__green__|__orange__|__pink__|__purple__|__red__|__white__|__yellow__)",
                    "token": [
                        "text"
                    ],
                    "unicode": true
                }
            ],
            "valueFrom": [
                {
                    "regex": "(^| )(_)(?= |$)",
                    "token": [
                        "text",
                        "invalid"
                    ],
                    "next": "valueFrom"
                },
                {
                    "regex": "_\\?_",
                    "token": "invalid",
                    "next": "valueFrom"
                },
                {
                    "regex": "#.*$",
                    "token": "comment",
                    "next": "start"
                },
                {
                    "regex": "(^|$)",
                    "token": [
                        "text"
                    ],
                    "next": "start"
                }
            ]
        }
    },
    {
        "name": "level5",
        "rules": {
            "start": [
                {
                    "regex": "(^| )(__is__)( +)(__ask__)",
                    "token": [
                        "text",
                        "keyword",
                        "text",
                        "keyword"
                    ]
                },
                {
                    "regex": "#.*$",
                    "token": "comment",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "\"[^\"]*\"",
                    "token": "constant.character",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "'[^']*'",
                    "token": "constant.character",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "\"[^\"]*$",
                    "token": "text",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "'[^']*$",
                    "token": "text",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "_\\?_",
                    "token": "invalid",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(_)(?= |$)",
                    "token": [
                        "text",
                        "invalid"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__is__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__at__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__add__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__to_list__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__remove__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__from__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__in__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__if__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__else__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__color__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(__comma__)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__print__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__sleep__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__forward__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__turn__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__random__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__black__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__blue__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__brown__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__gray__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__green__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__orange__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__pink__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__purple__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__red__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__white__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__yellow__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__pressed__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "event"
                    ],
                    "next": "start",
                    "unicode": true
                }
            ]
        }
    },
    {
        "name": "level6",
        "rules": {
            "start": [
                {
                    "regex": "(^| )(__is__)( +)(__ask__)",
                    "token": [
                        "text",
                        "keyword",
                        "text",
                        "keyword"
                    ]
                },
                {
                    "regex": "(=)( +)(__ask__)",
                    "token": [
                        "keyword",
                        "text",
                        "keyword"
                    ]
                },
                {
                    "regex": "#.*$",
                    "token": "comment",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "\"[^\"]*\"",
                    "token": "constant.character",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "'[^']*'",
                    "token": "constant.character",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "\"[^\"]*$",
                    "token": "text",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "'[^']*$",
                    "token": "text",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "_\\?_",
                    "token": "invalid",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(_)(?= |$)",
                    "token": [
                        "text",
                        "invalid"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__print__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__sleep__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__forward__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__turn__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__random__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(__comma__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(-)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(=)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(/)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\*)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\+)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__is__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__at__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__add__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__to_list__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__remove__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__from__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__in__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__if__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__else__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__color__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(__comma__)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(-)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(=)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(/)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\*)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\+)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__print__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__sleep__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__forward__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__turn__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__random__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__black__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__blue__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__brown__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__gray__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__green__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__orange__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__pink__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__purple__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__red__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__white__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__yellow__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__pressed__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "event"
                    ],
                    "next": "start",
                    "unicode": true
                }
            ]
        }
    },
    {
        "name": "level7",
        "rules": {
            "start": [
                {
                    "regex": "(^| )(__is__)( +)(__ask__)",
                    "token": [
                        "text",
                        "keyword",
                        "text",
                        "keyword"
                    ]
                },
                {
                    "regex": "(=)( +)(__ask__)",
                    "token": [
                        "keyword",
                        "text",
                        "keyword"
                    ]
                },
                {
                    "regex": "#.*$",
                    "token": "comment",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "\"[^\"]*\"",
                    "token": "constant.character",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "'[^']*'",
                    "token": "constant.character",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "\"[^\"]*$",
                    "token": "text",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "'[^']*$",
                    "token": "text",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "_\\?_",
                    "token": "invalid",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(_)(?= |$)",
                    "token": [
                        "text",
                        "invalid"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__print__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__sleep__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__forward__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__turn__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__random__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(__comma__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(-)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(=)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(/)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\*)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\+)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__is__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__at__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__add__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__to_list__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__remove__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__from__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__in__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__if__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__else__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__repeat__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__times__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__color__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(__comma__)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(-)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(=)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(/)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\*)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\+)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__print__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__sleep__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__forward__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__turn__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__random__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__black__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__blue__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__brown__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__gray__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__green__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__orange__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__pink__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__purple__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__red__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__white__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__yellow__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__pressed__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "event"
                    ],
                    "next": "start",
                    "unicode": true
                }
            ]
        }
    },
    {
        "name": "level8",
        "rules": {
            "start": [
                {
                    "regex": "(^| )(__is__)( +)(__ask__)",
                    "token": [
                        "text",
                        "keyword",
                        "text",
                        "keyword"
                    ]
                },
                {
                    "regex": "(=)( +)(__ask__)",
                    "token": [
                        "keyword",
                        "text",
                        "keyword"
                    ]
                },
                {
                    "regex": "#.*$",
                    "token": "comment",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "\"[^\"]*\"",
                    "token": "constant.character",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "'[^']*'",
                    "token": "constant.character",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "\"[^\"]*$",
                    "token": "text",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "'[^']*$",
                    "token": "text",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "_\\?_",
                    "token": "invalid",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(_)(?= |$)",
                    "token": [
                        "text",
                        "invalid"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__print__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__sleep__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__forward__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__turn__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__random__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__else__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__times__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(__comma__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(-)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(=)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(/)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\*)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\+)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__is__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__at__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__add__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__to_list__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__remove__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__from__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__in__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__if__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__repeat__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__color__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(__comma__)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(-)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(=)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(/)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\*)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\+)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__print__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__sleep__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__forward__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__turn__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__random__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__else__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__times__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__black__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__blue__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__brown__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__gray__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__green__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__orange__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__pink__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__purple__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__red__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__white__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__yellow__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__pressed__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "event"
                    ],
                    "next": "start",
                    "unicode": true
                }
            ]
        }
    },
    {
        "name": "level9",
        "rules": {
            "start": [
                {
                    "regex": "(^| )(__is__)( +)(__ask__)",
                    "token": [
                        "text",
                        "keyword",
                        "text",
                        "keyword"
                    ]
                },
                {
                    "regex": "(=)( +)(__ask__)",
                    "token": [
                        "keyword",
                        "text",
                        "keyword"
                    ]
                },
                {
                    "regex": "#.*$",
                    "token": "comment",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "\"[^\"]*\"",
                    "token": "constant.character",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "'[^']*'",
                    "token": "constant.character",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "\"[^\"]*$",
                    "token": "text",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "'[^']*$",
                    "token": "text",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "_\\?_",
                    "token": "invalid",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(_)(?= |$)",
                    "token": [
                        "text",
                        "invalid"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__print__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__sleep__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__forward__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__turn__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__random__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__else__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__times__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(__comma__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(-)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(=)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(/)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\*)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\+)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__is__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__at__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__add__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__to_list__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__remove__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__from__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__in__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__if__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__repeat__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__color__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(__comma__)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(-)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(=)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(/)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\*)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\+)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__print__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__sleep__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__forward__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__turn__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__random__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__else__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__times__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__black__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__blue__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__brown__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__gray__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__green__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__orange__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__pink__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__purple__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__red__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__white__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__yellow__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__pressed__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "event"
                    ],
                    "next": "start",
                    "unicode": true
                }
            ]
        }
    },
    {
        "name": "level10",
        "rules": {
            "start": [
                {
                    "regex": "(^| )(__is__)( +)(__ask__)",
                    "token": [
                        "text",
                        "keyword",
                        "text",
                        "keyword"
                    ]
                },
                {
                    "regex": "(=)( +)(__ask__)",
                    "token": [
                        "keyword",
                        "text",
                        "keyword"
                    ]
                },
                {
                    "regex": "#.*$",
                    "token": "comment",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "\"[^\"]*\"",
                    "token": "constant.character",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "'[^']*'",
                    "token": "constant.character",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "\"[^\"]*$",
                    "token": "text",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "'[^']*$",
                    "token": "text",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "_\\?_",
                    "token": "invalid",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(_)(?= |$)",
                    "token": [
                        "text",
                        "invalid"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__print__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__sleep__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__forward__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__turn__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__random__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__else__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__times__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(__comma__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(-)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(=)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(/)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\*)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\+)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__is__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__at__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__add__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__to_list__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__remove__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__from__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__in__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__if__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__repeat__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__for__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__color__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(__comma__)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(-)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(=)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(/)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\*)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\+)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__print__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__sleep__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__forward__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__turn__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__random__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__else__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__times__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__black__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__blue__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__brown__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__gray__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__green__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__orange__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__pink__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__purple__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__red__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__white__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__yellow__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__pressed__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "event"
                    ],
                    "next": "start",
                    "unicode": true
                }
            ]
        }
    },
    {
        "name": "level11",
        "rules": {
            "start": [
                {
                    "regex": "(^| )(__is__)( +)(__ask__)",
                    "token": [
                        "text",
                        "keyword",
                        "text",
                        "keyword"
                    ]
                },
                {
                    "regex": "(=)( +)(__ask__)",
                    "token": [
                        "keyword",
                        "text",
                        "keyword"
                    ]
                },
                {
                    "regex": "#.*$",
                    "token": "comment",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "\"[^\"]*\"",
                    "token": "constant.character",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "'[^']*'",
                    "token": "constant.character",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "\"[^\"]*$",
                    "token": "text",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "'[^']*$",
                    "token": "text",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "_\\?_",
                    "token": "invalid",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(_)(?= |$)",
                    "token": [
                        "text",
                        "invalid"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__print__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__sleep__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__forward__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__turn__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__random__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__else__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__times__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(__comma__)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(-)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(=)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(/)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\*)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\+)([__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__is__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__at__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__add__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__to_list__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__remove__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__from__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__in__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__if__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__for__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__range__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__to__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__repeat__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__color__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(__comma__)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(-)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(=)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(/)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\*)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\+)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__print__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__sleep__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__forward__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__turn__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__random__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__else__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__times__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__black__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__blue__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__brown__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__gray__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__green__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__orange__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__pink__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__purple__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__red__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__white__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__yellow__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__pressed__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "event"
                    ],
                    "next": "start",
                    "unicode": true
                }
            ]
        }
    },
    {
        "name": "level12",
        "rules": {
            "start": [
                {
                    "regex": "(^| )(__is__)( +)(__ask__)",
                    "token": [
                        "text",
                        "keyword",
                        "text",
                        "keyword"
                    ]
                },
                {
                    "regex": "(=)( +)(__ask__)",
                    "token": [
                        "keyword",
                        "text",
                        "keyword"
                    ]
                },
                {
                    "regex": "#.*$",
                    "token": "comment",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "\"[^\"]*\"",
                    "token": "constant.character",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "'[^']*'",
                    "token": "constant.character",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "\"[^\"]*$",
                    "token": "text",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "'[^']*$",
                    "token": "text",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "_\\?_",
                    "token": "invalid",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(_)(?= |$)",
                    "token": [
                        "text",
                        "invalid"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__print__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__sleep__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__forward__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__turn__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__random__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__else__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__times__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(__comma__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(-)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(=)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(/)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\*)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\+)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__is__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__at__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__add__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__to_list__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__remove__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__from__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__in__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__if__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__for__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__range__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__to__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__repeat__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__color__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(__comma__)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(-)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(=)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(/)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\*)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\+)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__print__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__sleep__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__forward__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__turn__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__random__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__else__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__times__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__black__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__blue__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__brown__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__gray__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__green__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__orange__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__pink__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__purple__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__red__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__white__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__yellow__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__pressed__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "event"
                    ],
                    "next": "start",
                    "unicode": true
                }
            ]
        }
    },
    {
        "name": "level13",
        "rules": {
            "start": [
                {
                    "regex": "(^| )(__is__)( +)(__ask__)",
                    "token": [
                        "text",
                        "keyword",
                        "text",
                        "keyword"
                    ]
                },
                {
                    "regex": "(=)( +)(__ask__)",
                    "token": [
                        "keyword",
                        "text",
                        "keyword"
                    ]
                },
                {
                    "regex": "#.*$",
                    "token": "comment",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "\"[^\"]*\"",
                    "token": "constant.character",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "'[^']*'",
                    "token": "constant.character",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "\"[^\"]*$",
                    "token": "text",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "'[^']*$",
                    "token": "text",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "_\\?_",
                    "token": "invalid",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(_)(?= |$)",
                    "token": [
                        "text",
                        "invalid"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__print__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__sleep__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__forward__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__turn__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__random__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__else__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__times__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(__comma__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(-)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(=)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(/)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\*)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\+)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__is__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__at__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__add__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__to_list__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__remove__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__from__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__in__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__if__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__for__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__range__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__to__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__and__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__or__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__repeat__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__color__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(__comma__)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(-)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(=)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(/)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\*)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\+)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__print__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__sleep__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__forward__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__turn__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__random__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__else__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__times__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__black__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__blue__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__brown__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__gray__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__green__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__orange__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__pink__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__purple__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__red__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__white__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__yellow__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__pressed__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "event"
                    ],
                    "next": "start",
                    "unicode": true
                }
            ]
        }
    },
    {
        "name": "level14",
        "rules": {
            "start": [
                {
                    "regex": "(^| )(__is__)( +)(__ask__)",
                    "token": [
                        "text",
                        "keyword",
                        "text",
                        "keyword"
                    ]
                },
                {
                    "regex": "(=)( +)(__ask__)",
                    "token": [
                        "keyword",
                        "text",
                        "keyword"
                    ]
                },
                {
                    "regex": "#.*$",
                    "token": "comment",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "\"[^\"]*\"",
                    "token": "constant.character",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "'[^']*'",
                    "token": "constant.character",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "\"[^\"]*$",
                    "token": "text",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "'[^']*$",
                    "token": "text",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "_\\?_",
                    "token": "invalid",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(_)(?= |$)",
                    "token": [
                        "text",
                        "invalid"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__print__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__sleep__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__forward__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__turn__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__random__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__times__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(__comma__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(-)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(=)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(/)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\*)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\+)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(<)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(>)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(!)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__is__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__at__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__add__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__to_list__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__remove__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__from__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__in__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__if__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__for__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__range__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__to__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__and__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__or__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__else__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__repeat__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__color__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(__comma__)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(-)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(=)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(/)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\*)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\+)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(<)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(>)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(!)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__print__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__sleep__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__forward__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__turn__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__random__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__times__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__black__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__blue__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__brown__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__gray__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__green__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__orange__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__pink__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__purple__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__red__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__white__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__yellow__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__pressed__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "event"
                    ],
                    "next": "start",
                    "unicode": true
                }
            ]
        }
    },
    {
        "name": "level15",
        "rules": {
            "start": [
                {
                    "regex": "(^| )(__is__)( +)(__ask__)",
                    "token": [
                        "text",
                        "keyword",
                        "text",
                        "keyword"
                    ]
                },
                {
                    "regex": "(=)( +)(__ask__)",
                    "token": [
                        "keyword",
                        "text",
                        "keyword"
                    ]
                },
                {
                    "regex": "#.*$",
                    "token": "comment",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "\"[^\"]*\"",
                    "token": "constant.character",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "'[^']*'",
                    "token": "constant.character",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "\"[^\"]*$",
                    "token": "text",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "'[^']*$",
                    "token": "text",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "_\\?_",
                    "token": "invalid",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(_)(?= |$)",
                    "token": [
                        "text",
                        "invalid"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__print__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__sleep__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__forward__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__turn__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__random__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__else__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__times__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(__comma__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(-)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(=)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(/)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\*)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\+)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(<)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(>)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(!)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__is__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__at__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__add__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__to_list__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__remove__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__from__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__in__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__if__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__for__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__range__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__to__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__and__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__or__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__while__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__repeat__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__color__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(__comma__)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(-)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(=)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(/)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\*)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\+)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(<)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(>)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(!)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__print__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__sleep__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__forward__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__turn__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__random__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__else__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__times__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__black__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__blue__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__brown__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__gray__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__green__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__orange__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__pink__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__purple__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__red__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__white__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__yellow__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__pressed__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "event"
                    ],
                    "next": "start",
                    "unicode": true
                }
            ]
        }
    },
    {
        "name": "level16",
        "rules": {
            "start": [
                {
                    "regex": "(^| )(__is__)( +)(__ask__)",
                    "token": [
                        "text",
                        "keyword",
                        "text",
                        "keyword"
                    ]
                },
                {
                    "regex": "(=)( +)(__ask__)",
                    "token": [
                        "keyword",
                        "text",
                        "keyword"
                    ]
                },
                {
                    "regex": "#.*$",
                    "token": "comment",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "\"[^\"]*\"",
                    "token": "constant.character",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "'[^']*'",
                    "token": "constant.character",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "\"[^\"]*$",
                    "token": "text",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "'[^']*$",
                    "token": "text",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "_\\?_",
                    "token": "invalid",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(_)(?= |$)",
                    "token": [
                        "text",
                        "invalid"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__print__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__sleep__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__forward__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__turn__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__random__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__times__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(__comma__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(-)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(=)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(/)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\*)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\+)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(<)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(>)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(!)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\[)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\])([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__is__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__at__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__add__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__to_list__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__remove__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__from__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__in__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__if__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__else__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__for__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__range__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__to__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__and__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__or__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__while__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__repeat__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__color__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(__comma__)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(-)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(=)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(/)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\*)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\+)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(<)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(>)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(!)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\[)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\])",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__print__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__sleep__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__forward__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__turn__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__random__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__times__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__black__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__blue__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__brown__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__gray__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__green__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__orange__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__pink__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__purple__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__red__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__white__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__yellow__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__pressed__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "event"
                    ],
                    "next": "start",
                    "unicode": true
                }
            ]
        }
    },
    {
        "name": "level17",
        "rules": {
            "start": [
                {
                    "regex": "(^| )(__is__)( +)(__ask__)",
                    "token": [
                        "text",
                        "keyword",
                        "text",
                        "keyword"
                    ]
                },
                {
                    "regex": "(=)( +)(__ask__)",
                    "token": [
                        "keyword",
                        "text",
                        "keyword"
                    ]
                },
                {
                    "regex": "#.*$",
                    "token": "comment",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "\"[^\"]*\"",
                    "token": "constant.character",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "'[^']*'",
                    "token": "constant.character",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "\"[^\"]*$",
                    "token": "text",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "'[^']*$",
                    "token": "text",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "_\\?_",
                    "token": "invalid",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(_)(?= |$)",
                    "token": [
                        "text",
                        "invalid"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__print__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__sleep__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__forward__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__turn__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__random__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__times__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(__comma__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(-)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(=)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(/)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\*)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\+)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(<)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(>)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(!)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\[)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\])([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(:)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__is__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__at__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__add__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__to_list__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__remove__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__from__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__in__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__if__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__else__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__for__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__range__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__to__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__and__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__or__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__while__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__repeat__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__color__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(__comma__)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(-)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(=)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(/)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\*)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\+)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(<)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(>)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(!)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\[)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\])",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(:)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__print__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__sleep__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__forward__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__turn__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__random__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__times__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(__elif__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__black__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__blue__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__brown__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__gray__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__green__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__orange__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__pink__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__purple__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__red__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__white__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__yellow__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__pressed__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "event"
                    ],
                    "next": "start",
                    "unicode": true
                }
            ]
        }
    },
    {
        "name": "level18",
        "rules": {
            "start": [
                {
                    "regex": "(^| )(__is__)( +)(__ask__)",
                    "token": [
                        "text",
                        "keyword",
                        "text",
                        "keyword"
                    ]
                },
                {
                    "regex": "(=)( +)(__ask__)",
                    "token": [
                        "keyword",
                        "text",
                        "keyword"
                    ]
                },
                {
                    "regex": "#.*$",
                    "token": "comment",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "\"[^\"]*\"",
                    "token": "constant.character",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "'[^']*'",
                    "token": "constant.character",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "\"[^\"]*$",
                    "token": "text",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "'[^']*$",
                    "token": "text",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "_\\?_",
                    "token": "invalid",
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(_)(?= |$)",
                    "token": [
                        "text",
                        "invalid"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__print__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__sleep__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__forward__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__turn__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__random__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__times__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(__comma__)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(-)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(=)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(/)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\*)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\+)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(<)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(>)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(!)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\[)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\])([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(:)([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\()([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\))([__DIGIT__]*\\.?[__DIGIT__]+)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword",
                        "variable"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__is__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__at__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__add__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__to_list__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__remove__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__from__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__in__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__if__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__else__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__for__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__range__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__to__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__and__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__or__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__while__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__input__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__repeat__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__color__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(__comma__)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(-)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(=)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(/)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\*)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\+)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(<)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(>)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(!)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\[)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\])",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(:)",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\()",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(\\))",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__print__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__sleep__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__forward__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__turn__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__random__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__times__)",
                    "token": [
                        "text",
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(__elif__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "keyword"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__black__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__blue__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__brown__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__gray__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__green__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__orange__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__pink__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__purple__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__red__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__white__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__yellow__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "text"
                    ],
                    "next": "start",
                    "unicode": true
                },
                {
                    "regex": "(^| )(__pressed__)(?![\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}·])",
                    "token": [
                        "text",
                        "event"
                    ],
                    "next": "start",
                    "unicode": true
                }
            ]
        }
    }
]